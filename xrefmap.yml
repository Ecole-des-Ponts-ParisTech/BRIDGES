### YamlMime:XRefMap
sorted: true
references:
- uid: BRIDGES
  name: BRIDGES
  href: api/BRIDGES.html
  commentId: N:BRIDGES
  fullName: BRIDGES
  nameWithType: BRIDGES
- uid: BRIDGES.Algebra.Fundamentals
  name: BRIDGES.Algebra.Fundamentals
  href: api/BRIDGES.Algebra.Fundamentals.html
  commentId: N:BRIDGES.Algebra.Fundamentals
  fullName: BRIDGES.Algebra.Fundamentals
  nameWithType: BRIDGES.Algebra.Fundamentals
- uid: BRIDGES.Algebra.Fundamentals.IAddable`1
  name: IAddable<T>
  href: api/BRIDGES.Algebra.Fundamentals.IAddable-1.html
  commentId: T:BRIDGES.Algebra.Fundamentals.IAddable`1
  name.vb: IAddable(Of T)
  fullName: BRIDGES.Algebra.Fundamentals.IAddable<T>
  fullName.vb: BRIDGES.Algebra.Fundamentals.IAddable(Of T)
  nameWithType: IAddable<T>
  nameWithType.vb: IAddable(Of T)
- uid: BRIDGES.Algebra.Fundamentals.IAddable`1.Add(`0)
  name: Add(T)
  href: api/BRIDGES.Algebra.Fundamentals.IAddable-1.html#BRIDGES_Algebra_Fundamentals_IAddable_1_Add__0_
  commentId: M:BRIDGES.Algebra.Fundamentals.IAddable`1.Add(`0)
  fullName: BRIDGES.Algebra.Fundamentals.IAddable<T>.Add(T)
  fullName.vb: BRIDGES.Algebra.Fundamentals.IAddable(Of T).Add(T)
  nameWithType: IAddable<T>.Add(T)
  nameWithType.vb: IAddable(Of T).Add(T)
- uid: BRIDGES.Algebra.Fundamentals.IAddable`1.Add*
  name: Add
  href: api/BRIDGES.Algebra.Fundamentals.IAddable-1.html#BRIDGES_Algebra_Fundamentals_IAddable_1_Add_
  commentId: Overload:BRIDGES.Algebra.Fundamentals.IAddable`1.Add
  isSpec: "True"
  fullName: BRIDGES.Algebra.Fundamentals.IAddable<T>.Add
  fullName.vb: BRIDGES.Algebra.Fundamentals.IAddable(Of T).Add
  nameWithType: IAddable<T>.Add
  nameWithType.vb: IAddable(Of T).Add
- uid: BRIDGES.Algebra.Fundamentals.IAddable`1.IsAssociative
  name: IsAssociative
  href: api/BRIDGES.Algebra.Fundamentals.IAddable-1.html#BRIDGES_Algebra_Fundamentals_IAddable_1_IsAssociative
  commentId: P:BRIDGES.Algebra.Fundamentals.IAddable`1.IsAssociative
  fullName: BRIDGES.Algebra.Fundamentals.IAddable<T>.IsAssociative
  fullName.vb: BRIDGES.Algebra.Fundamentals.IAddable(Of T).IsAssociative
  nameWithType: IAddable<T>.IsAssociative
  nameWithType.vb: IAddable(Of T).IsAssociative
- uid: BRIDGES.Algebra.Fundamentals.IAddable`1.IsAssociative*
  name: IsAssociative
  href: api/BRIDGES.Algebra.Fundamentals.IAddable-1.html#BRIDGES_Algebra_Fundamentals_IAddable_1_IsAssociative_
  commentId: Overload:BRIDGES.Algebra.Fundamentals.IAddable`1.IsAssociative
  isSpec: "True"
  fullName: BRIDGES.Algebra.Fundamentals.IAddable<T>.IsAssociative
  fullName.vb: BRIDGES.Algebra.Fundamentals.IAddable(Of T).IsAssociative
  nameWithType: IAddable<T>.IsAssociative
  nameWithType.vb: IAddable(Of T).IsAssociative
- uid: BRIDGES.Algebra.Fundamentals.IAddable`1.IsCommutative
  name: IsCommutative
  href: api/BRIDGES.Algebra.Fundamentals.IAddable-1.html#BRIDGES_Algebra_Fundamentals_IAddable_1_IsCommutative
  commentId: P:BRIDGES.Algebra.Fundamentals.IAddable`1.IsCommutative
  fullName: BRIDGES.Algebra.Fundamentals.IAddable<T>.IsCommutative
  fullName.vb: BRIDGES.Algebra.Fundamentals.IAddable(Of T).IsCommutative
  nameWithType: IAddable<T>.IsCommutative
  nameWithType.vb: IAddable(Of T).IsCommutative
- uid: BRIDGES.Algebra.Fundamentals.IAddable`1.IsCommutative*
  name: IsCommutative
  href: api/BRIDGES.Algebra.Fundamentals.IAddable-1.html#BRIDGES_Algebra_Fundamentals_IAddable_1_IsCommutative_
  commentId: Overload:BRIDGES.Algebra.Fundamentals.IAddable`1.IsCommutative
  isSpec: "True"
  fullName: BRIDGES.Algebra.Fundamentals.IAddable<T>.IsCommutative
  fullName.vb: BRIDGES.Algebra.Fundamentals.IAddable(Of T).IsCommutative
  nameWithType: IAddable<T>.IsCommutative
  nameWithType.vb: IAddable(Of T).IsCommutative
- uid: BRIDGES.Algebra.Fundamentals.IDivisible`1
  name: IDivisible<T>
  href: api/BRIDGES.Algebra.Fundamentals.IDivisible-1.html
  commentId: T:BRIDGES.Algebra.Fundamentals.IDivisible`1
  name.vb: IDivisible(Of T)
  fullName: BRIDGES.Algebra.Fundamentals.IDivisible<T>
  fullName.vb: BRIDGES.Algebra.Fundamentals.IDivisible(Of T)
  nameWithType: IDivisible<T>
  nameWithType.vb: IDivisible(Of T)
- uid: BRIDGES.Algebra.Fundamentals.IDivisible`1.Divide(`0)
  name: Divide(T)
  href: api/BRIDGES.Algebra.Fundamentals.IDivisible-1.html#BRIDGES_Algebra_Fundamentals_IDivisible_1_Divide__0_
  commentId: M:BRIDGES.Algebra.Fundamentals.IDivisible`1.Divide(`0)
  fullName: BRIDGES.Algebra.Fundamentals.IDivisible<T>.Divide(T)
  fullName.vb: BRIDGES.Algebra.Fundamentals.IDivisible(Of T).Divide(T)
  nameWithType: IDivisible<T>.Divide(T)
  nameWithType.vb: IDivisible(Of T).Divide(T)
- uid: BRIDGES.Algebra.Fundamentals.IDivisible`1.Divide*
  name: Divide
  href: api/BRIDGES.Algebra.Fundamentals.IDivisible-1.html#BRIDGES_Algebra_Fundamentals_IDivisible_1_Divide_
  commentId: Overload:BRIDGES.Algebra.Fundamentals.IDivisible`1.Divide
  isSpec: "True"
  fullName: BRIDGES.Algebra.Fundamentals.IDivisible<T>.Divide
  fullName.vb: BRIDGES.Algebra.Fundamentals.IDivisible(Of T).Divide
  nameWithType: IDivisible<T>.Divide
  nameWithType.vb: IDivisible(Of T).Divide
- uid: BRIDGES.Algebra.Fundamentals.IMultiplicable`1
  name: IMultiplicable<T>
  href: api/BRIDGES.Algebra.Fundamentals.IMultiplicable-1.html
  commentId: T:BRIDGES.Algebra.Fundamentals.IMultiplicable`1
  name.vb: IMultiplicable(Of T)
  fullName: BRIDGES.Algebra.Fundamentals.IMultiplicable<T>
  fullName.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable(Of T)
  nameWithType: IMultiplicable<T>
  nameWithType.vb: IMultiplicable(Of T)
- uid: BRIDGES.Algebra.Fundamentals.IMultiplicable`1.IsAssociative
  name: IsAssociative
  href: api/BRIDGES.Algebra.Fundamentals.IMultiplicable-1.html#BRIDGES_Algebra_Fundamentals_IMultiplicable_1_IsAssociative
  commentId: P:BRIDGES.Algebra.Fundamentals.IMultiplicable`1.IsAssociative
  fullName: BRIDGES.Algebra.Fundamentals.IMultiplicable<T>.IsAssociative
  fullName.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable(Of T).IsAssociative
  nameWithType: IMultiplicable<T>.IsAssociative
  nameWithType.vb: IMultiplicable(Of T).IsAssociative
- uid: BRIDGES.Algebra.Fundamentals.IMultiplicable`1.IsAssociative*
  name: IsAssociative
  href: api/BRIDGES.Algebra.Fundamentals.IMultiplicable-1.html#BRIDGES_Algebra_Fundamentals_IMultiplicable_1_IsAssociative_
  commentId: Overload:BRIDGES.Algebra.Fundamentals.IMultiplicable`1.IsAssociative
  isSpec: "True"
  fullName: BRIDGES.Algebra.Fundamentals.IMultiplicable<T>.IsAssociative
  fullName.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable(Of T).IsAssociative
  nameWithType: IMultiplicable<T>.IsAssociative
  nameWithType.vb: IMultiplicable(Of T).IsAssociative
- uid: BRIDGES.Algebra.Fundamentals.IMultiplicable`1.IsCommutative
  name: IsCommutative
  href: api/BRIDGES.Algebra.Fundamentals.IMultiplicable-1.html#BRIDGES_Algebra_Fundamentals_IMultiplicable_1_IsCommutative
  commentId: P:BRIDGES.Algebra.Fundamentals.IMultiplicable`1.IsCommutative
  fullName: BRIDGES.Algebra.Fundamentals.IMultiplicable<T>.IsCommutative
  fullName.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable(Of T).IsCommutative
  nameWithType: IMultiplicable<T>.IsCommutative
  nameWithType.vb: IMultiplicable(Of T).IsCommutative
- uid: BRIDGES.Algebra.Fundamentals.IMultiplicable`1.IsCommutative*
  name: IsCommutative
  href: api/BRIDGES.Algebra.Fundamentals.IMultiplicable-1.html#BRIDGES_Algebra_Fundamentals_IMultiplicable_1_IsCommutative_
  commentId: Overload:BRIDGES.Algebra.Fundamentals.IMultiplicable`1.IsCommutative
  isSpec: "True"
  fullName: BRIDGES.Algebra.Fundamentals.IMultiplicable<T>.IsCommutative
  fullName.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable(Of T).IsCommutative
  nameWithType: IMultiplicable<T>.IsCommutative
  nameWithType.vb: IMultiplicable(Of T).IsCommutative
- uid: BRIDGES.Algebra.Fundamentals.IMultiplicable`1.Multiply(`0)
  name: Multiply(T)
  href: api/BRIDGES.Algebra.Fundamentals.IMultiplicable-1.html#BRIDGES_Algebra_Fundamentals_IMultiplicable_1_Multiply__0_
  commentId: M:BRIDGES.Algebra.Fundamentals.IMultiplicable`1.Multiply(`0)
  fullName: BRIDGES.Algebra.Fundamentals.IMultiplicable<T>.Multiply(T)
  fullName.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable(Of T).Multiply(T)
  nameWithType: IMultiplicable<T>.Multiply(T)
  nameWithType.vb: IMultiplicable(Of T).Multiply(T)
- uid: BRIDGES.Algebra.Fundamentals.IMultiplicable`1.Multiply*
  name: Multiply
  href: api/BRIDGES.Algebra.Fundamentals.IMultiplicable-1.html#BRIDGES_Algebra_Fundamentals_IMultiplicable_1_Multiply_
  commentId: Overload:BRIDGES.Algebra.Fundamentals.IMultiplicable`1.Multiply
  isSpec: "True"
  fullName: BRIDGES.Algebra.Fundamentals.IMultiplicable<T>.Multiply
  fullName.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable(Of T).Multiply
  nameWithType: IMultiplicable<T>.Multiply
  nameWithType.vb: IMultiplicable(Of T).Multiply
- uid: BRIDGES.Algebra.Fundamentals.IOneable`1
  name: IOneable<T>
  href: api/BRIDGES.Algebra.Fundamentals.IOneable-1.html
  commentId: T:BRIDGES.Algebra.Fundamentals.IOneable`1
  name.vb: IOneable(Of T)
  fullName: BRIDGES.Algebra.Fundamentals.IOneable<T>
  fullName.vb: BRIDGES.Algebra.Fundamentals.IOneable(Of T)
  nameWithType: IOneable<T>
  nameWithType.vb: IOneable(Of T)
- uid: BRIDGES.Algebra.Fundamentals.IOneable`1.One
  name: One()
  href: api/BRIDGES.Algebra.Fundamentals.IOneable-1.html#BRIDGES_Algebra_Fundamentals_IOneable_1_One
  commentId: M:BRIDGES.Algebra.Fundamentals.IOneable`1.One
  fullName: BRIDGES.Algebra.Fundamentals.IOneable<T>.One()
  fullName.vb: BRIDGES.Algebra.Fundamentals.IOneable(Of T).One()
  nameWithType: IOneable<T>.One()
  nameWithType.vb: IOneable(Of T).One()
- uid: BRIDGES.Algebra.Fundamentals.IOneable`1.One*
  name: One
  href: api/BRIDGES.Algebra.Fundamentals.IOneable-1.html#BRIDGES_Algebra_Fundamentals_IOneable_1_One_
  commentId: Overload:BRIDGES.Algebra.Fundamentals.IOneable`1.One
  isSpec: "True"
  fullName: BRIDGES.Algebra.Fundamentals.IOneable<T>.One
  fullName.vb: BRIDGES.Algebra.Fundamentals.IOneable(Of T).One
  nameWithType: IOneable<T>.One
  nameWithType.vb: IOneable(Of T).One
- uid: BRIDGES.Algebra.Fundamentals.ISubtractable`1
  name: ISubtractable<T>
  href: api/BRIDGES.Algebra.Fundamentals.ISubtractable-1.html
  commentId: T:BRIDGES.Algebra.Fundamentals.ISubtractable`1
  name.vb: ISubtractable(Of T)
  fullName: BRIDGES.Algebra.Fundamentals.ISubtractable<T>
  fullName.vb: BRIDGES.Algebra.Fundamentals.ISubtractable(Of T)
  nameWithType: ISubtractable<T>
  nameWithType.vb: ISubtractable(Of T)
- uid: BRIDGES.Algebra.Fundamentals.ISubtractable`1.Subtract(`0)
  name: Subtract(T)
  href: api/BRIDGES.Algebra.Fundamentals.ISubtractable-1.html#BRIDGES_Algebra_Fundamentals_ISubtractable_1_Subtract__0_
  commentId: M:BRIDGES.Algebra.Fundamentals.ISubtractable`1.Subtract(`0)
  fullName: BRIDGES.Algebra.Fundamentals.ISubtractable<T>.Subtract(T)
  fullName.vb: BRIDGES.Algebra.Fundamentals.ISubtractable(Of T).Subtract(T)
  nameWithType: ISubtractable<T>.Subtract(T)
  nameWithType.vb: ISubtractable(Of T).Subtract(T)
- uid: BRIDGES.Algebra.Fundamentals.ISubtractable`1.Subtract*
  name: Subtract
  href: api/BRIDGES.Algebra.Fundamentals.ISubtractable-1.html#BRIDGES_Algebra_Fundamentals_ISubtractable_1_Subtract_
  commentId: Overload:BRIDGES.Algebra.Fundamentals.ISubtractable`1.Subtract
  isSpec: "True"
  fullName: BRIDGES.Algebra.Fundamentals.ISubtractable<T>.Subtract
  fullName.vb: BRIDGES.Algebra.Fundamentals.ISubtractable(Of T).Subtract
  nameWithType: ISubtractable<T>.Subtract
  nameWithType.vb: ISubtractable(Of T).Subtract
- uid: BRIDGES.Algebra.Fundamentals.IZeroable`1
  name: IZeroable<T>
  href: api/BRIDGES.Algebra.Fundamentals.IZeroable-1.html
  commentId: T:BRIDGES.Algebra.Fundamentals.IZeroable`1
  name.vb: IZeroable(Of T)
  fullName: BRIDGES.Algebra.Fundamentals.IZeroable<T>
  fullName.vb: BRIDGES.Algebra.Fundamentals.IZeroable(Of T)
  nameWithType: IZeroable<T>
  nameWithType.vb: IZeroable(Of T)
- uid: BRIDGES.Algebra.Fundamentals.IZeroable`1.Zero
  name: Zero()
  href: api/BRIDGES.Algebra.Fundamentals.IZeroable-1.html#BRIDGES_Algebra_Fundamentals_IZeroable_1_Zero
  commentId: M:BRIDGES.Algebra.Fundamentals.IZeroable`1.Zero
  fullName: BRIDGES.Algebra.Fundamentals.IZeroable<T>.Zero()
  fullName.vb: BRIDGES.Algebra.Fundamentals.IZeroable(Of T).Zero()
  nameWithType: IZeroable<T>.Zero()
  nameWithType.vb: IZeroable(Of T).Zero()
- uid: BRIDGES.Algebra.Fundamentals.IZeroable`1.Zero*
  name: Zero
  href: api/BRIDGES.Algebra.Fundamentals.IZeroable-1.html#BRIDGES_Algebra_Fundamentals_IZeroable_1_Zero_
  commentId: Overload:BRIDGES.Algebra.Fundamentals.IZeroable`1.Zero
  isSpec: "True"
  fullName: BRIDGES.Algebra.Fundamentals.IZeroable<T>.Zero
  fullName.vb: BRIDGES.Algebra.Fundamentals.IZeroable(Of T).Zero
  nameWithType: IZeroable<T>.Zero
  nameWithType.vb: IZeroable(Of T).Zero
- uid: BRIDGES.Algebra.Measure
  name: BRIDGES.Algebra.Measure
  href: api/BRIDGES.Algebra.Measure.html
  commentId: N:BRIDGES.Algebra.Measure
  fullName: BRIDGES.Algebra.Measure
  nameWithType: BRIDGES.Algebra.Measure
- uid: BRIDGES.Algebra.Measure.IDotProduct`2
  name: IDotProduct<TValue, T>
  href: api/BRIDGES.Algebra.Measure.IDotProduct-2.html
  commentId: T:BRIDGES.Algebra.Measure.IDotProduct`2
  name.vb: IDotProduct(Of TValue, T)
  fullName: BRIDGES.Algebra.Measure.IDotProduct<TValue, T>
  fullName.vb: BRIDGES.Algebra.Measure.IDotProduct(Of TValue, T)
  nameWithType: IDotProduct<TValue, T>
  nameWithType.vb: IDotProduct(Of TValue, T)
- uid: BRIDGES.Algebra.Measure.IDotProduct`2.AngleWith(`1)
  name: AngleWith(T)
  href: api/BRIDGES.Algebra.Measure.IDotProduct-2.html#BRIDGES_Algebra_Measure_IDotProduct_2_AngleWith__1_
  commentId: M:BRIDGES.Algebra.Measure.IDotProduct`2.AngleWith(`1)
  fullName: BRIDGES.Algebra.Measure.IDotProduct<TValue, T>.AngleWith(T)
  fullName.vb: BRIDGES.Algebra.Measure.IDotProduct(Of TValue, T).AngleWith(T)
  nameWithType: IDotProduct<TValue, T>.AngleWith(T)
  nameWithType.vb: IDotProduct(Of TValue, T).AngleWith(T)
- uid: BRIDGES.Algebra.Measure.IDotProduct`2.AngleWith*
  name: AngleWith
  href: api/BRIDGES.Algebra.Measure.IDotProduct-2.html#BRIDGES_Algebra_Measure_IDotProduct_2_AngleWith_
  commentId: Overload:BRIDGES.Algebra.Measure.IDotProduct`2.AngleWith
  isSpec: "True"
  fullName: BRIDGES.Algebra.Measure.IDotProduct<TValue, T>.AngleWith
  fullName.vb: BRIDGES.Algebra.Measure.IDotProduct(Of TValue, T).AngleWith
  nameWithType: IDotProduct<TValue, T>.AngleWith
  nameWithType.vb: IDotProduct(Of TValue, T).AngleWith
- uid: BRIDGES.Algebra.Measure.IDotProduct`2.DotProduct(`1)
  name: DotProduct(T)
  href: api/BRIDGES.Algebra.Measure.IDotProduct-2.html#BRIDGES_Algebra_Measure_IDotProduct_2_DotProduct__1_
  commentId: M:BRIDGES.Algebra.Measure.IDotProduct`2.DotProduct(`1)
  fullName: BRIDGES.Algebra.Measure.IDotProduct<TValue, T>.DotProduct(T)
  fullName.vb: BRIDGES.Algebra.Measure.IDotProduct(Of TValue, T).DotProduct(T)
  nameWithType: IDotProduct<TValue, T>.DotProduct(T)
  nameWithType.vb: IDotProduct(Of TValue, T).DotProduct(T)
- uid: BRIDGES.Algebra.Measure.IDotProduct`2.DotProduct*
  name: DotProduct
  href: api/BRIDGES.Algebra.Measure.IDotProduct-2.html#BRIDGES_Algebra_Measure_IDotProduct_2_DotProduct_
  commentId: Overload:BRIDGES.Algebra.Measure.IDotProduct`2.DotProduct
  isSpec: "True"
  fullName: BRIDGES.Algebra.Measure.IDotProduct<TValue, T>.DotProduct
  fullName.vb: BRIDGES.Algebra.Measure.IDotProduct(Of TValue, T).DotProduct
  nameWithType: IDotProduct<TValue, T>.DotProduct
  nameWithType.vb: IDotProduct(Of TValue, T).DotProduct
- uid: BRIDGES.Algebra.Measure.IMetric`1
  name: IMetric<T>
  href: api/BRIDGES.Algebra.Measure.IMetric-1.html
  commentId: T:BRIDGES.Algebra.Measure.IMetric`1
  name.vb: IMetric(Of T)
  fullName: BRIDGES.Algebra.Measure.IMetric<T>
  fullName.vb: BRIDGES.Algebra.Measure.IMetric(Of T)
  nameWithType: IMetric<T>
  nameWithType.vb: IMetric(Of T)
- uid: BRIDGES.Algebra.Measure.IMetric`1.DistanceTo(`0)
  name: DistanceTo(T)
  href: api/BRIDGES.Algebra.Measure.IMetric-1.html#BRIDGES_Algebra_Measure_IMetric_1_DistanceTo__0_
  commentId: M:BRIDGES.Algebra.Measure.IMetric`1.DistanceTo(`0)
  fullName: BRIDGES.Algebra.Measure.IMetric<T>.DistanceTo(T)
  fullName.vb: BRIDGES.Algebra.Measure.IMetric(Of T).DistanceTo(T)
  nameWithType: IMetric<T>.DistanceTo(T)
  nameWithType.vb: IMetric(Of T).DistanceTo(T)
- uid: BRIDGES.Algebra.Measure.IMetric`1.DistanceTo*
  name: DistanceTo
  href: api/BRIDGES.Algebra.Measure.IMetric-1.html#BRIDGES_Algebra_Measure_IMetric_1_DistanceTo_
  commentId: Overload:BRIDGES.Algebra.Measure.IMetric`1.DistanceTo
  isSpec: "True"
  fullName: BRIDGES.Algebra.Measure.IMetric<T>.DistanceTo
  fullName.vb: BRIDGES.Algebra.Measure.IMetric(Of T).DistanceTo
  nameWithType: IMetric<T>.DistanceTo
  nameWithType.vb: IMetric(Of T).DistanceTo
- uid: BRIDGES.Algebra.Measure.INorm`1
  name: INorm<T>
  href: api/BRIDGES.Algebra.Measure.INorm-1.html
  commentId: T:BRIDGES.Algebra.Measure.INorm`1
  name.vb: INorm(Of T)
  fullName: BRIDGES.Algebra.Measure.INorm<T>
  fullName.vb: BRIDGES.Algebra.Measure.INorm(Of T)
  nameWithType: INorm<T>
  nameWithType.vb: INorm(Of T)
- uid: BRIDGES.Algebra.Measure.INorm`1.Norm
  name: Norm()
  href: api/BRIDGES.Algebra.Measure.INorm-1.html#BRIDGES_Algebra_Measure_INorm_1_Norm
  commentId: M:BRIDGES.Algebra.Measure.INorm`1.Norm
  fullName: BRIDGES.Algebra.Measure.INorm<T>.Norm()
  fullName.vb: BRIDGES.Algebra.Measure.INorm(Of T).Norm()
  nameWithType: INorm<T>.Norm()
  nameWithType.vb: INorm(Of T).Norm()
- uid: BRIDGES.Algebra.Measure.INorm`1.Norm*
  name: Norm
  href: api/BRIDGES.Algebra.Measure.INorm-1.html#BRIDGES_Algebra_Measure_INorm_1_Norm_
  commentId: Overload:BRIDGES.Algebra.Measure.INorm`1.Norm
  isSpec: "True"
  fullName: BRIDGES.Algebra.Measure.INorm<T>.Norm
  fullName.vb: BRIDGES.Algebra.Measure.INorm(Of T).Norm
  nameWithType: INorm<T>.Norm
  nameWithType.vb: INorm(Of T).Norm
- uid: BRIDGES.Algebra.Measure.INorm`1.Unitise
  name: Unitise()
  href: api/BRIDGES.Algebra.Measure.INorm-1.html#BRIDGES_Algebra_Measure_INorm_1_Unitise
  commentId: M:BRIDGES.Algebra.Measure.INorm`1.Unitise
  fullName: BRIDGES.Algebra.Measure.INorm<T>.Unitise()
  fullName.vb: BRIDGES.Algebra.Measure.INorm(Of T).Unitise()
  nameWithType: INorm<T>.Unitise()
  nameWithType.vb: INorm(Of T).Unitise()
- uid: BRIDGES.Algebra.Measure.INorm`1.Unitise*
  name: Unitise
  href: api/BRIDGES.Algebra.Measure.INorm-1.html#BRIDGES_Algebra_Measure_INorm_1_Unitise_
  commentId: Overload:BRIDGES.Algebra.Measure.INorm`1.Unitise
  isSpec: "True"
  fullName: BRIDGES.Algebra.Measure.INorm<T>.Unitise
  fullName.vb: BRIDGES.Algebra.Measure.INorm(Of T).Unitise
  nameWithType: INorm<T>.Unitise
  nameWithType.vb: INorm(Of T).Unitise
- uid: BRIDGES.Algebra.Sets
  name: BRIDGES.Algebra.Sets
  href: api/BRIDGES.Algebra.Sets.html
  commentId: N:BRIDGES.Algebra.Sets
  fullName: BRIDGES.Algebra.Sets
  nameWithType: BRIDGES.Algebra.Sets
- uid: BRIDGES.Algebra.Sets.Additive
  name: BRIDGES.Algebra.Sets.Additive
  href: api/BRIDGES.Algebra.Sets.Additive.html
  commentId: N:BRIDGES.Algebra.Sets.Additive
  fullName: BRIDGES.Algebra.Sets.Additive
  nameWithType: BRIDGES.Algebra.Sets.Additive
- uid: BRIDGES.Algebra.Sets.Additive.IAbelianGroup`1
  name: IAbelianGroup<T>
  href: api/BRIDGES.Algebra.Sets.Additive.IAbelianGroup-1.html
  commentId: T:BRIDGES.Algebra.Sets.Additive.IAbelianGroup`1
  name.vb: IAbelianGroup(Of T)
  fullName: BRIDGES.Algebra.Sets.Additive.IAbelianGroup<T>
  fullName.vb: BRIDGES.Algebra.Sets.Additive.IAbelianGroup(Of T)
  nameWithType: IAbelianGroup<T>
  nameWithType.vb: IAbelianGroup(Of T)
- uid: BRIDGES.Algebra.Sets.Additive.IGroup`1
  name: IGroup<T>
  href: api/BRIDGES.Algebra.Sets.Additive.IGroup-1.html
  commentId: T:BRIDGES.Algebra.Sets.Additive.IGroup`1
  name.vb: IGroup(Of T)
  fullName: BRIDGES.Algebra.Sets.Additive.IGroup<T>
  fullName.vb: BRIDGES.Algebra.Sets.Additive.IGroup(Of T)
  nameWithType: IGroup<T>
  nameWithType.vb: IGroup(Of T)
- uid: BRIDGES.Algebra.Sets.Additive.IGroup`1.Opposite
  name: Opposite()
  href: api/BRIDGES.Algebra.Sets.Additive.IGroup-1.html#BRIDGES_Algebra_Sets_Additive_IGroup_1_Opposite
  commentId: M:BRIDGES.Algebra.Sets.Additive.IGroup`1.Opposite
  fullName: BRIDGES.Algebra.Sets.Additive.IGroup<T>.Opposite()
  fullName.vb: BRIDGES.Algebra.Sets.Additive.IGroup(Of T).Opposite()
  nameWithType: IGroup<T>.Opposite()
  nameWithType.vb: IGroup(Of T).Opposite()
- uid: BRIDGES.Algebra.Sets.Additive.IGroup`1.Opposite*
  name: Opposite
  href: api/BRIDGES.Algebra.Sets.Additive.IGroup-1.html#BRIDGES_Algebra_Sets_Additive_IGroup_1_Opposite_
  commentId: Overload:BRIDGES.Algebra.Sets.Additive.IGroup`1.Opposite
  isSpec: "True"
  fullName: BRIDGES.Algebra.Sets.Additive.IGroup<T>.Opposite
  fullName.vb: BRIDGES.Algebra.Sets.Additive.IGroup(Of T).Opposite
  nameWithType: IGroup<T>.Opposite
  nameWithType.vb: IGroup(Of T).Opposite
- uid: BRIDGES.Algebra.Sets.Additive.ILoop`1
  name: ILoop<T>
  href: api/BRIDGES.Algebra.Sets.Additive.ILoop-1.html
  commentId: T:BRIDGES.Algebra.Sets.Additive.ILoop`1
  name.vb: ILoop(Of T)
  fullName: BRIDGES.Algebra.Sets.Additive.ILoop<T>
  fullName.vb: BRIDGES.Algebra.Sets.Additive.ILoop(Of T)
  nameWithType: ILoop<T>
  nameWithType.vb: ILoop(Of T)
- uid: BRIDGES.Algebra.Sets.Additive.IMagma`1
  name: IMagma<T>
  href: api/BRIDGES.Algebra.Sets.Additive.IMagma-1.html
  commentId: T:BRIDGES.Algebra.Sets.Additive.IMagma`1
  name.vb: IMagma(Of T)
  fullName: BRIDGES.Algebra.Sets.Additive.IMagma<T>
  fullName.vb: BRIDGES.Algebra.Sets.Additive.IMagma(Of T)
  nameWithType: IMagma<T>
  nameWithType.vb: IMagma(Of T)
- uid: BRIDGES.Algebra.Sets.Additive.IMonoid`1
  name: IMonoid<T>
  href: api/BRIDGES.Algebra.Sets.Additive.IMonoid-1.html
  commentId: T:BRIDGES.Algebra.Sets.Additive.IMonoid`1
  name.vb: IMonoid(Of T)
  fullName: BRIDGES.Algebra.Sets.Additive.IMonoid<T>
  fullName.vb: BRIDGES.Algebra.Sets.Additive.IMonoid(Of T)
  nameWithType: IMonoid<T>
  nameWithType.vb: IMonoid(Of T)
- uid: BRIDGES.Algebra.Sets.Additive.IQuasiGroup`1
  name: IQuasiGroup<T>
  href: api/BRIDGES.Algebra.Sets.Additive.IQuasiGroup-1.html
  commentId: T:BRIDGES.Algebra.Sets.Additive.IQuasiGroup`1
  name.vb: IQuasiGroup(Of T)
  fullName: BRIDGES.Algebra.Sets.Additive.IQuasiGroup<T>
  fullName.vb: BRIDGES.Algebra.Sets.Additive.IQuasiGroup(Of T)
  nameWithType: IQuasiGroup<T>
  nameWithType.vb: IQuasiGroup(Of T)
- uid: BRIDGES.Algebra.Sets.Additive.ISemiGroup`1
  name: ISemiGroup<T>
  href: api/BRIDGES.Algebra.Sets.Additive.ISemiGroup-1.html
  commentId: T:BRIDGES.Algebra.Sets.Additive.ISemiGroup`1
  name.vb: ISemiGroup(Of T)
  fullName: BRIDGES.Algebra.Sets.Additive.ISemiGroup<T>
  fullName.vb: BRIDGES.Algebra.Sets.Additive.ISemiGroup(Of T)
  nameWithType: ISemiGroup<T>
  nameWithType.vb: ISemiGroup(Of T)
- uid: BRIDGES.Algebra.Sets.IGroupAction`2
  name: IGroupAction<TValue, T>
  href: api/BRIDGES.Algebra.Sets.IGroupAction-2.html
  commentId: T:BRIDGES.Algebra.Sets.IGroupAction`2
  name.vb: IGroupAction(Of TValue, T)
  fullName: BRIDGES.Algebra.Sets.IGroupAction<TValue, T>
  fullName.vb: BRIDGES.Algebra.Sets.IGroupAction(Of TValue, T)
  nameWithType: IGroupAction<TValue, T>
  nameWithType.vb: IGroupAction(Of TValue, T)
- uid: BRIDGES.Algebra.Sets.IGroupAction`2.Divide(`0)
  name: Divide(TValue)
  href: api/BRIDGES.Algebra.Sets.IGroupAction-2.html#BRIDGES_Algebra_Sets_IGroupAction_2_Divide__0_
  commentId: M:BRIDGES.Algebra.Sets.IGroupAction`2.Divide(`0)
  fullName: BRIDGES.Algebra.Sets.IGroupAction<TValue, T>.Divide(TValue)
  fullName.vb: BRIDGES.Algebra.Sets.IGroupAction(Of TValue, T).Divide(TValue)
  nameWithType: IGroupAction<TValue, T>.Divide(TValue)
  nameWithType.vb: IGroupAction(Of TValue, T).Divide(TValue)
- uid: BRIDGES.Algebra.Sets.IGroupAction`2.Divide*
  name: Divide
  href: api/BRIDGES.Algebra.Sets.IGroupAction-2.html#BRIDGES_Algebra_Sets_IGroupAction_2_Divide_
  commentId: Overload:BRIDGES.Algebra.Sets.IGroupAction`2.Divide
  isSpec: "True"
  fullName: BRIDGES.Algebra.Sets.IGroupAction<TValue, T>.Divide
  fullName.vb: BRIDGES.Algebra.Sets.IGroupAction(Of TValue, T).Divide
  nameWithType: IGroupAction<TValue, T>.Divide
  nameWithType.vb: IGroupAction(Of TValue, T).Divide
- uid: BRIDGES.Algebra.Sets.IGroupAction`2.Multiply(`0)
  name: Multiply(TValue)
  href: api/BRIDGES.Algebra.Sets.IGroupAction-2.html#BRIDGES_Algebra_Sets_IGroupAction_2_Multiply__0_
  commentId: M:BRIDGES.Algebra.Sets.IGroupAction`2.Multiply(`0)
  fullName: BRIDGES.Algebra.Sets.IGroupAction<TValue, T>.Multiply(TValue)
  fullName.vb: BRIDGES.Algebra.Sets.IGroupAction(Of TValue, T).Multiply(TValue)
  nameWithType: IGroupAction<TValue, T>.Multiply(TValue)
  nameWithType.vb: IGroupAction(Of TValue, T).Multiply(TValue)
- uid: BRIDGES.Algebra.Sets.IGroupAction`2.Multiply*
  name: Multiply
  href: api/BRIDGES.Algebra.Sets.IGroupAction-2.html#BRIDGES_Algebra_Sets_IGroupAction_2_Multiply_
  commentId: Overload:BRIDGES.Algebra.Sets.IGroupAction`2.Multiply
  isSpec: "True"
  fullName: BRIDGES.Algebra.Sets.IGroupAction<TValue, T>.Multiply
  fullName.vb: BRIDGES.Algebra.Sets.IGroupAction(Of TValue, T).Multiply
  nameWithType: IGroupAction<TValue, T>.Multiply
  nameWithType.vb: IGroupAction(Of TValue, T).Multiply
- uid: BRIDGES.Algebra.Sets.Multiplicative
  name: BRIDGES.Algebra.Sets.Multiplicative
  href: api/BRIDGES.Algebra.Sets.Multiplicative.html
  commentId: N:BRIDGES.Algebra.Sets.Multiplicative
  fullName: BRIDGES.Algebra.Sets.Multiplicative
  nameWithType: BRIDGES.Algebra.Sets.Multiplicative
- uid: BRIDGES.Algebra.Sets.Multiplicative.IAbelianGroup`1
  name: IAbelianGroup<T>
  href: api/BRIDGES.Algebra.Sets.Multiplicative.IAbelianGroup-1.html
  commentId: T:BRIDGES.Algebra.Sets.Multiplicative.IAbelianGroup`1
  name.vb: IAbelianGroup(Of T)
  fullName: BRIDGES.Algebra.Sets.Multiplicative.IAbelianGroup<T>
  fullName.vb: BRIDGES.Algebra.Sets.Multiplicative.IAbelianGroup(Of T)
  nameWithType: IAbelianGroup<T>
  nameWithType.vb: IAbelianGroup(Of T)
- uid: BRIDGES.Algebra.Sets.Multiplicative.IGroup`1
  name: IGroup<T>
  href: api/BRIDGES.Algebra.Sets.Multiplicative.IGroup-1.html
  commentId: T:BRIDGES.Algebra.Sets.Multiplicative.IGroup`1
  name.vb: IGroup(Of T)
  fullName: BRIDGES.Algebra.Sets.Multiplicative.IGroup<T>
  fullName.vb: BRIDGES.Algebra.Sets.Multiplicative.IGroup(Of T)
  nameWithType: IGroup<T>
  nameWithType.vb: IGroup(Of T)
- uid: BRIDGES.Algebra.Sets.Multiplicative.IGroup`1.Inverse
  name: Inverse()
  href: api/BRIDGES.Algebra.Sets.Multiplicative.IGroup-1.html#BRIDGES_Algebra_Sets_Multiplicative_IGroup_1_Inverse
  commentId: M:BRIDGES.Algebra.Sets.Multiplicative.IGroup`1.Inverse
  fullName: BRIDGES.Algebra.Sets.Multiplicative.IGroup<T>.Inverse()
  fullName.vb: BRIDGES.Algebra.Sets.Multiplicative.IGroup(Of T).Inverse()
  nameWithType: IGroup<T>.Inverse()
  nameWithType.vb: IGroup(Of T).Inverse()
- uid: BRIDGES.Algebra.Sets.Multiplicative.IGroup`1.Inverse*
  name: Inverse
  href: api/BRIDGES.Algebra.Sets.Multiplicative.IGroup-1.html#BRIDGES_Algebra_Sets_Multiplicative_IGroup_1_Inverse_
  commentId: Overload:BRIDGES.Algebra.Sets.Multiplicative.IGroup`1.Inverse
  isSpec: "True"
  fullName: BRIDGES.Algebra.Sets.Multiplicative.IGroup<T>.Inverse
  fullName.vb: BRIDGES.Algebra.Sets.Multiplicative.IGroup(Of T).Inverse
  nameWithType: IGroup<T>.Inverse
  nameWithType.vb: IGroup(Of T).Inverse
- uid: BRIDGES.Algebra.Sets.Multiplicative.ILoop`1
  name: ILoop<T>
  href: api/BRIDGES.Algebra.Sets.Multiplicative.ILoop-1.html
  commentId: T:BRIDGES.Algebra.Sets.Multiplicative.ILoop`1
  name.vb: ILoop(Of T)
  fullName: BRIDGES.Algebra.Sets.Multiplicative.ILoop<T>
  fullName.vb: BRIDGES.Algebra.Sets.Multiplicative.ILoop(Of T)
  nameWithType: ILoop<T>
  nameWithType.vb: ILoop(Of T)
- uid: BRIDGES.Algebra.Sets.Multiplicative.IMagma`1
  name: IMagma<T>
  href: api/BRIDGES.Algebra.Sets.Multiplicative.IMagma-1.html
  commentId: T:BRIDGES.Algebra.Sets.Multiplicative.IMagma`1
  name.vb: IMagma(Of T)
  fullName: BRIDGES.Algebra.Sets.Multiplicative.IMagma<T>
  fullName.vb: BRIDGES.Algebra.Sets.Multiplicative.IMagma(Of T)
  nameWithType: IMagma<T>
  nameWithType.vb: IMagma(Of T)
- uid: BRIDGES.Algebra.Sets.Multiplicative.IMonoid`1
  name: IMonoid<T>
  href: api/BRIDGES.Algebra.Sets.Multiplicative.IMonoid-1.html
  commentId: T:BRIDGES.Algebra.Sets.Multiplicative.IMonoid`1
  name.vb: IMonoid(Of T)
  fullName: BRIDGES.Algebra.Sets.Multiplicative.IMonoid<T>
  fullName.vb: BRIDGES.Algebra.Sets.Multiplicative.IMonoid(Of T)
  nameWithType: IMonoid<T>
  nameWithType.vb: IMonoid(Of T)
- uid: BRIDGES.Algebra.Sets.Multiplicative.IQuasiGroup`1
  name: IQuasiGroup<T>
  href: api/BRIDGES.Algebra.Sets.Multiplicative.IQuasiGroup-1.html
  commentId: T:BRIDGES.Algebra.Sets.Multiplicative.IQuasiGroup`1
  name.vb: IQuasiGroup(Of T)
  fullName: BRIDGES.Algebra.Sets.Multiplicative.IQuasiGroup<T>
  fullName.vb: BRIDGES.Algebra.Sets.Multiplicative.IQuasiGroup(Of T)
  nameWithType: IQuasiGroup<T>
  nameWithType.vb: IQuasiGroup(Of T)
- uid: BRIDGES.Algebra.Sets.Multiplicative.ISemiGroup`1
  name: ISemiGroup<T>
  href: api/BRIDGES.Algebra.Sets.Multiplicative.ISemiGroup-1.html
  commentId: T:BRIDGES.Algebra.Sets.Multiplicative.ISemiGroup`1
  name.vb: ISemiGroup(Of T)
  fullName: BRIDGES.Algebra.Sets.Multiplicative.ISemiGroup<T>
  fullName.vb: BRIDGES.Algebra.Sets.Multiplicative.ISemiGroup(Of T)
  nameWithType: ISemiGroup<T>
  nameWithType.vb: ISemiGroup(Of T)
- uid: BRIDGES.Arithmetic.Numbers
  name: BRIDGES.Arithmetic.Numbers
  href: api/BRIDGES.Arithmetic.Numbers.html
  commentId: N:BRIDGES.Arithmetic.Numbers
  fullName: BRIDGES.Arithmetic.Numbers
  nameWithType: BRIDGES.Arithmetic.Numbers
- uid: BRIDGES.Arithmetic.Numbers.Complex
  name: Complex
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html
  commentId: T:BRIDGES.Arithmetic.Numbers.Complex
  fullName: BRIDGES.Arithmetic.Numbers.Complex
  nameWithType: Complex
- uid: BRIDGES.Arithmetic.Numbers.Complex.#ctor(BRIDGES.Arithmetic.Numbers.Complex)
  name: Complex(Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex__ctor_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.#ctor(BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Complex(BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Complex(Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.#ctor(System.Double,System.Double)
  name: Complex(Double, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex__ctor_System_Double_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.#ctor(System.Double,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Complex(System.Double, System.Double)
  nameWithType: Complex.Complex(Double, Double)
- uid: BRIDGES.Arithmetic.Numbers.Complex.#ctor*
  name: Complex
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex__ctor_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.#ctor
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Complex
  nameWithType: Complex.Complex
- uid: BRIDGES.Arithmetic.Numbers.Complex.Add(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  name: Add(Complex, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Add_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Add(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Add(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Add(Complex, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Add(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  name: Add(Complex, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Add_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Add(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Add(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Complex.Add(Complex, Real)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Add(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  name: Add(Real, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Add_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Add(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Add(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Add(Real, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Add*
  name: Add
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Add_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Add
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Add
  nameWithType: Complex.Add
- uid: BRIDGES.Arithmetic.Numbers.Complex.Argument
  name: Argument
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Argument
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.Argument
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Argument
  nameWithType: Complex.Argument
- uid: BRIDGES.Arithmetic.Numbers.Complex.Argument*
  name: Argument
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Argument_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Argument
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Argument
  nameWithType: Complex.Argument
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#Add(BRIDGES.Arithmetic.Numbers.Complex)
  name: IAddable<Complex>.Add(Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Complex__Add_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#Add(BRIDGES.Arithmetic.Numbers.Complex)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.Add(Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.Add(BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.IAddable<Complex>.Add(Complex)
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.Add(Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#Add*
  name: IAddable<Complex>.Add
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Complex__Add_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.Add
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.Add
  nameWithType: Complex.IAddable<Complex>.Add
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.Add
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#IsAssociative
  name: IAddable<Complex>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Complex__IsAssociative
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
  nameWithType: Complex.IAddable<Complex>.IsAssociative
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#IsAssociative*
  name: IAddable<Complex>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Complex__IsAssociative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
  nameWithType: Complex.IAddable<Complex>.IsAssociative
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#IsCommutative
  name: IAddable<Complex>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Complex__IsCommutative
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
  nameWithType: Complex.IAddable<Complex>.IsCommutative
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#IsCommutative*
  name: IAddable<Complex>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Complex__IsCommutative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Complex}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
  nameWithType: Complex.IAddable<Complex>.IsCommutative
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Complex}#Divide(BRIDGES.Arithmetic.Numbers.Complex)
  name: IDivisible<Complex>.Divide(Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IDivisible_BRIDGES_Arithmetic_Numbers_Complex__Divide_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Complex}#Divide(BRIDGES.Arithmetic.Numbers.Complex)
  name.vb: BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Complex>.Divide(Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Complex>.Divide(BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.IDivisible<Complex>.Divide(Complex)
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Complex>.Divide(Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Complex}#Divide*
  name: IDivisible<Complex>.Divide
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IDivisible_BRIDGES_Arithmetic_Numbers_Complex__Divide_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Complex}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Complex>.Divide
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Complex>.Divide
  nameWithType: Complex.IDivisible<Complex>.Divide
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Complex>.Divide
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#IsAssociative
  name: IMultiplicable<Complex>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Complex__IsAssociative
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
  nameWithType: Complex.IMultiplicable<Complex>.IsAssociative
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#IsAssociative*
  name: IMultiplicable<Complex>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Complex__IsAssociative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
  nameWithType: Complex.IMultiplicable<Complex>.IsAssociative
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#IsCommutative
  name: IMultiplicable<Complex>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Complex__IsCommutative
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
  nameWithType: Complex.IMultiplicable<Complex>.IsCommutative
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#IsCommutative*
  name: IMultiplicable<Complex>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Complex__IsCommutative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
  nameWithType: Complex.IMultiplicable<Complex>.IsCommutative
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#Multiply(BRIDGES.Arithmetic.Numbers.Complex)
  name: IMultiplicable<Complex>.Multiply(Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Complex__Multiply_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#Multiply(BRIDGES.Arithmetic.Numbers.Complex)
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.Multiply(Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.Multiply(BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.IMultiplicable<Complex>.Multiply(Complex)
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.Multiply(Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#Multiply*
  name: IMultiplicable<Complex>.Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Complex__Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Complex}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.Multiply
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.Multiply
  nameWithType: Complex.IMultiplicable<Complex>.Multiply
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Complex>.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Complex}#One
  name: IOneable<Complex>.One()
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IOneable_BRIDGES_Arithmetic_Numbers_Complex__One
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Complex}#One
  name.vb: BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Complex>.One()
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Complex>.One()
  nameWithType: Complex.IOneable<Complex>.One()
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Complex>.One()
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Complex}#One*
  name: IOneable<Complex>.One
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IOneable_BRIDGES_Arithmetic_Numbers_Complex__One_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Complex}#One
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Complex>.One
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Complex>.One
  nameWithType: Complex.IOneable<Complex>.One
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Complex>.One
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Complex}#Subtract(BRIDGES.Arithmetic.Numbers.Complex)
  name: ISubtractable<Complex>.Subtract(Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Arithmetic_Numbers_Complex__Subtract_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Complex}#Subtract(BRIDGES.Arithmetic.Numbers.Complex)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Complex>.Subtract(Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Complex>.Subtract(BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.ISubtractable<Complex>.Subtract(Complex)
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Complex>.Subtract(Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Complex}#Subtract*
  name: ISubtractable<Complex>.Subtract
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Arithmetic_Numbers_Complex__Subtract_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Complex}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Complex>.Subtract
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Complex>.Subtract
  nameWithType: Complex.ISubtractable<Complex>.Subtract
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Complex>.Subtract
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Complex}#Zero
  name: IZeroable<Complex>.Zero()
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Arithmetic_Numbers_Complex__Zero
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Complex}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Complex>.Zero()
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Complex>.Zero()
  nameWithType: Complex.IZeroable<Complex>.Zero()
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Complex>.Zero()
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Complex}#Zero*
  name: IZeroable<Complex>.Zero
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Arithmetic_Numbers_Complex__Zero_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Complex}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Complex>.Zero
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Complex>.Zero
  nameWithType: Complex.IZeroable<Complex>.Zero
  nameWithType.vb: Complex.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Complex>.Zero
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Complex}#Divide(System.Double)
  name: IGroupAction<Double, Complex>.Divide(Double)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Numbers_Complex__Divide_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Complex}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Divide(Double)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Numbers.Complex>.Divide(System.Double)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Divide(System.Double)
  nameWithType: Complex.IGroupAction<Double, Complex>.Divide(Double)
  nameWithType.vb: Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Divide(Double)
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Complex}#Divide*
  name: IGroupAction<Double, Complex>.Divide
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Numbers_Complex__Divide_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Complex}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Divide
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Numbers.Complex>.Divide
  fullName.vb: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Divide
  nameWithType: Complex.IGroupAction<Double, Complex>.Divide
  nameWithType.vb: Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Divide
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Complex}#Multiply(System.Double)
  name: IGroupAction<Double, Complex>.Multiply(Double)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Numbers_Complex__Multiply_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Complex}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Multiply(Double)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Numbers.Complex>.Multiply(System.Double)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Multiply(System.Double)
  nameWithType: Complex.IGroupAction<Double, Complex>.Multiply(Double)
  nameWithType.vb: Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Multiply(Double)
- uid: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Complex}#Multiply*
  name: IGroupAction<Double, Complex>.Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Numbers_Complex__Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Complex}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Multiply
  fullName: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Numbers.Complex>.Multiply
  fullName.vb: BRIDGES.Arithmetic.Numbers.Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Multiply
  nameWithType: Complex.IGroupAction<Double, Complex>.Multiply
  nameWithType.vb: Complex.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Complex>.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Complex.Conjugate
  name: Conjugate()
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Conjugate
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Conjugate
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Conjugate()
  nameWithType: Complex.Conjugate()
- uid: BRIDGES.Arithmetic.Numbers.Complex.Conjugate(BRIDGES.Arithmetic.Numbers.Complex)
  name: Conjugate(Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Conjugate_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Conjugate(BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Conjugate(BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Conjugate(Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Conjugate*
  name: Conjugate
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Conjugate_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Conjugate
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Conjugate
  nameWithType: Complex.Conjugate
- uid: BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  name: Divide(Complex, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Divide_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Divide(Complex, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  name: Divide(Complex, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Divide_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Complex.Divide(Complex, Real)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Complex,System.Double)
  name: Divide(Complex, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Divide_BRIDGES_Arithmetic_Numbers_Complex_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Complex,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Complex, System.Double)
  nameWithType: Complex.Divide(Complex, Double)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  name: Divide(Real, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Divide_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Divide(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Divide(Real, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Divide*
  name: Divide
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Divide_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Divide
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Divide
  nameWithType: Complex.Divide
- uid: BRIDGES.Arithmetic.Numbers.Complex.Equals(BRIDGES.Arithmetic.Numbers.Complex)
  name: Equals(Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Equals_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Equals(BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Equals(BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Equals(Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Equals_System_Object_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Equals(System.Object)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Equals(System.Object)
  nameWithType: Complex.Equals(Object)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Equals*
  name: Equals
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Equals_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Equals
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Equals
  nameWithType: Complex.Equals
- uid: BRIDGES.Arithmetic.Numbers.Complex.FromPolarCoordinates(System.Double,System.Double)
  name: FromPolarCoordinates(Double, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_FromPolarCoordinates_System_Double_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.FromPolarCoordinates(System.Double,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.FromPolarCoordinates(System.Double, System.Double)
  nameWithType: Complex.FromPolarCoordinates(Double, Double)
- uid: BRIDGES.Arithmetic.Numbers.Complex.FromPolarCoordinates*
  name: FromPolarCoordinates
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_FromPolarCoordinates_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.FromPolarCoordinates
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.FromPolarCoordinates
  nameWithType: Complex.FromPolarCoordinates
- uid: BRIDGES.Arithmetic.Numbers.Complex.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_GetHashCode
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.GetHashCode
  fullName: BRIDGES.Arithmetic.Numbers.Complex.GetHashCode()
  nameWithType: Complex.GetHashCode()
- uid: BRIDGES.Arithmetic.Numbers.Complex.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_GetHashCode_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.GetHashCode
  nameWithType: Complex.GetHashCode
- uid: BRIDGES.Arithmetic.Numbers.Complex.ImaginaryOne
  name: ImaginaryOne
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_ImaginaryOne
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.ImaginaryOne
  fullName: BRIDGES.Arithmetic.Numbers.Complex.ImaginaryOne
  nameWithType: Complex.ImaginaryOne
- uid: BRIDGES.Arithmetic.Numbers.Complex.ImaginaryOne*
  name: ImaginaryOne
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_ImaginaryOne_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.ImaginaryOne
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.ImaginaryOne
  nameWithType: Complex.ImaginaryOne
- uid: BRIDGES.Arithmetic.Numbers.Complex.ImaginaryPart
  name: ImaginaryPart
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_ImaginaryPart
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.ImaginaryPart
  fullName: BRIDGES.Arithmetic.Numbers.Complex.ImaginaryPart
  nameWithType: Complex.ImaginaryPart
- uid: BRIDGES.Arithmetic.Numbers.Complex.ImaginaryPart*
  name: ImaginaryPart
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_ImaginaryPart_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.ImaginaryPart
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.ImaginaryPart
  nameWithType: Complex.ImaginaryPart
- uid: BRIDGES.Arithmetic.Numbers.Complex.Inverse
  name: Inverse()
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Inverse
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Inverse
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Inverse()
  nameWithType: Complex.Inverse()
- uid: BRIDGES.Arithmetic.Numbers.Complex.Inverse(BRIDGES.Arithmetic.Numbers.Complex)
  name: Inverse(Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Inverse_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Inverse(BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Inverse(BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Inverse(Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Inverse*
  name: Inverse
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Inverse_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Inverse
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Inverse
  nameWithType: Complex.Inverse
- uid: BRIDGES.Arithmetic.Numbers.Complex.Modulus
  name: Modulus
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Modulus
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.Modulus
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Modulus
  nameWithType: Complex.Modulus
- uid: BRIDGES.Arithmetic.Numbers.Complex.Modulus*
  name: Modulus
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Modulus_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Modulus
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Modulus
  nameWithType: Complex.Modulus
- uid: BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  name: Multiply(Complex, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Multiply_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Multiply(Complex, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  name: Multiply(Complex, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Multiply_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Complex.Multiply(Complex, Real)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  name: Multiply(Real, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Multiply_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Multiply(Real, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Multiply(System.Double,BRIDGES.Arithmetic.Numbers.Complex)
  name: Multiply(Double, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Multiply_System_Double_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Multiply(System.Double,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply(System.Double, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Multiply(Double, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Multiply*
  name: Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Multiply
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply
  nameWithType: Complex.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Complex.Norm
  name: Norm()
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Norm
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Norm
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Norm()
  nameWithType: Complex.Norm()
- uid: BRIDGES.Arithmetic.Numbers.Complex.Norm*
  name: Norm
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Norm_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Norm
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Norm
  nameWithType: Complex.Norm
- uid: BRIDGES.Arithmetic.Numbers.Complex.One
  name: One
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_One
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.One
  fullName: BRIDGES.Arithmetic.Numbers.Complex.One
  nameWithType: Complex.One
- uid: BRIDGES.Arithmetic.Numbers.Complex.One*
  name: One
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_One_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.One
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.One
  nameWithType: Complex.One
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Addition(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  name: Addition(Complex, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Addition_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Addition(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Addition(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Addition(Complex, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Addition(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  name: Addition(Complex, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Addition_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Addition(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Addition(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Complex.Addition(Complex, Real)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Addition(BRIDGES.Arithmetic.Numbers.Complex,System.Double)
  name: Addition(Complex, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Addition_BRIDGES_Arithmetic_Numbers_Complex_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Addition(BRIDGES.Arithmetic.Numbers.Complex,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Addition(BRIDGES.Arithmetic.Numbers.Complex, System.Double)
  nameWithType: Complex.Addition(Complex, Double)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Addition(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  name: Addition(Real, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Addition_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Addition(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Addition(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Addition(Real, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Addition(System.Double,BRIDGES.Arithmetic.Numbers.Complex)
  name: Addition(Double, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Addition_System_Double_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Addition(System.Double,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Addition(System.Double, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Addition(Double, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Addition*
  name: Addition
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Addition_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.op_Addition
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Addition
  nameWithType: Complex.Addition
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Division(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  name: Division(Complex, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Division_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Division(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Division(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Division(Complex, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Division(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  name: Division(Complex, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Division_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Division(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Division(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Complex.Division(Complex, Real)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Division(BRIDGES.Arithmetic.Numbers.Complex,System.Double)
  name: Division(Complex, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Division_BRIDGES_Arithmetic_Numbers_Complex_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Division(BRIDGES.Arithmetic.Numbers.Complex,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Division(BRIDGES.Arithmetic.Numbers.Complex, System.Double)
  nameWithType: Complex.Division(Complex, Double)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Division(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  name: Division(Real, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Division_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Division(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Division(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Division(Real, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Division(System.Double,BRIDGES.Arithmetic.Numbers.Complex)
  name: Division(Double, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Division_System_Double_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Division(System.Double,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Division(System.Double, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Division(Double, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Division*
  name: Division
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Division_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.op_Division
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Division
  nameWithType: Complex.Division
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Explicit(BRIDGES.Arithmetic.Numbers.Real)~BRIDGES.Arithmetic.Numbers.Complex
  name: Explicit(Real to Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Explicit_BRIDGES_Arithmetic_Numbers_Real__BRIDGES_Arithmetic_Numbers_Complex
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Explicit(BRIDGES.Arithmetic.Numbers.Real)~BRIDGES.Arithmetic.Numbers.Complex
  name.vb: Narrowing(Real to Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Explicit(BRIDGES.Arithmetic.Numbers.Real to BRIDGES.Arithmetic.Numbers.Complex)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Complex.Narrowing(BRIDGES.Arithmetic.Numbers.Real to BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Explicit(Real to Complex)
  nameWithType.vb: Complex.Narrowing(Real to Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Explicit(System.Double)~BRIDGES.Arithmetic.Numbers.Complex
  name: Explicit(Double to Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Explicit_System_Double__BRIDGES_Arithmetic_Numbers_Complex
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Explicit(System.Double)~BRIDGES.Arithmetic.Numbers.Complex
  name.vb: Narrowing(Double to Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Explicit(System.Double to BRIDGES.Arithmetic.Numbers.Complex)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Complex.Narrowing(System.Double to BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Explicit(Double to Complex)
  nameWithType.vb: Complex.Narrowing(Double to Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Explicit(ValueTuple{System.Double,System.Double})~BRIDGES.Arithmetic.Numbers.Complex
  name: Explicit(ValueTuple<Double, Double> to Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Explicit_ValueTuple_System_Double_System_Double___BRIDGES_Arithmetic_Numbers_Complex
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Explicit(ValueTuple{System.Double,System.Double})~BRIDGES.Arithmetic.Numbers.Complex
  name.vb: Narrowing(ValueTuple(Of Double, Double) to Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Explicit(ValueTuple<System.Double, System.Double> to BRIDGES.Arithmetic.Numbers.Complex)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Complex.Narrowing(ValueTuple(Of System.Double, System.Double) to BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Explicit(ValueTuple<Double, Double> to Complex)
  nameWithType.vb: Complex.Narrowing(ValueTuple(Of Double, Double) to Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Explicit*
  name: Explicit
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Explicit_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Explicit
  fullName.vb: BRIDGES.Arithmetic.Numbers.Complex.Narrowing
  nameWithType: Complex.Explicit
  nameWithType.vb: Complex.Narrowing
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  name: Multiply(Complex, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Multiply_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Multiply(Complex, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  name: Multiply(Complex, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Multiply_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Complex.Multiply(Complex, Real)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Multiply(BRIDGES.Arithmetic.Numbers.Complex,System.Double)
  name: Multiply(Complex, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Multiply_BRIDGES_Arithmetic_Numbers_Complex_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Multiply(BRIDGES.Arithmetic.Numbers.Complex,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Complex, System.Double)
  nameWithType: Complex.Multiply(Complex, Double)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  name: Multiply(Real, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Multiply_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Multiply(Real, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Multiply(System.Double,BRIDGES.Arithmetic.Numbers.Complex)
  name: Multiply(Double, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Multiply_System_Double_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Multiply(System.Double,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply(System.Double, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Multiply(Double, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Multiply*
  name: Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.op_Multiply
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Multiply
  nameWithType: Complex.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  name: Subtraction(Complex, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Subtraction_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Subtraction(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Subtraction(Complex, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  name: Subtraction(Complex, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Subtraction_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Subtraction(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Complex.Subtraction(Complex, Real)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction(BRIDGES.Arithmetic.Numbers.Complex,System.Double)
  name: Subtraction(Complex, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Subtraction_BRIDGES_Arithmetic_Numbers_Complex_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction(BRIDGES.Arithmetic.Numbers.Complex,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Subtraction(BRIDGES.Arithmetic.Numbers.Complex, System.Double)
  nameWithType: Complex.Subtraction(Complex, Double)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  name: Subtraction(Real, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Subtraction_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Subtraction(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Subtraction(Real, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction(System.Double,BRIDGES.Arithmetic.Numbers.Complex)
  name: Subtraction(Double, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Subtraction_System_Double_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction(System.Double,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Subtraction(System.Double, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Subtraction(Double, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction*
  name: Subtraction
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_Subtraction_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.op_Subtraction
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Subtraction
  nameWithType: Complex.Subtraction
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_UnaryNegation(BRIDGES.Arithmetic.Numbers.Complex)
  name: UnaryNegation(Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_UnaryNegation_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.op_UnaryNegation(BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.UnaryNegation(BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.UnaryNegation(Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.op_UnaryNegation*
  name: UnaryNegation
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_op_UnaryNegation_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.op_UnaryNegation
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.UnaryNegation
  nameWithType: Complex.UnaryNegation
- uid: BRIDGES.Arithmetic.Numbers.Complex.Opposite
  name: Opposite()
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Opposite
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Opposite
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Opposite()
  nameWithType: Complex.Opposite()
- uid: BRIDGES.Arithmetic.Numbers.Complex.Opposite(BRIDGES.Arithmetic.Numbers.Complex)
  name: Opposite(Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Opposite_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Opposite(BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Opposite(BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Opposite(Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Opposite*
  name: Opposite
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Opposite_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Opposite
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Opposite
  nameWithType: Complex.Opposite
- uid: BRIDGES.Arithmetic.Numbers.Complex.RealPart
  name: RealPart
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_RealPart
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.RealPart
  fullName: BRIDGES.Arithmetic.Numbers.Complex.RealPart
  nameWithType: Complex.RealPart
- uid: BRIDGES.Arithmetic.Numbers.Complex.RealPart*
  name: RealPart
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_RealPart_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.RealPart
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.RealPart
  nameWithType: Complex.RealPart
- uid: BRIDGES.Arithmetic.Numbers.Complex.Subtract(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  name: Subtract(Complex, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Subtract_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Subtract(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Subtract(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Subtract(Complex, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Subtract(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  name: Subtract(Complex, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Subtract_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Subtract(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Subtract(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Complex.Subtract(Complex, Real)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Subtract(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  name: Subtract(Real, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Subtract_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.Subtract(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Subtract(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Complex.Subtract(Real, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Complex.Subtract*
  name: Subtract
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Subtract_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Subtract
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Subtract
  nameWithType: Complex.Subtract
- uid: BRIDGES.Arithmetic.Numbers.Complex.ToString
  name: ToString()
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_ToString
  commentId: M:BRIDGES.Arithmetic.Numbers.Complex.ToString
  fullName: BRIDGES.Arithmetic.Numbers.Complex.ToString()
  nameWithType: Complex.ToString()
- uid: BRIDGES.Arithmetic.Numbers.Complex.ToString*
  name: ToString
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_ToString_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.ToString
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.ToString
  nameWithType: Complex.ToString
- uid: BRIDGES.Arithmetic.Numbers.Complex.Zero
  name: Zero
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Zero
  commentId: P:BRIDGES.Arithmetic.Numbers.Complex.Zero
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Zero
  nameWithType: Complex.Zero
- uid: BRIDGES.Arithmetic.Numbers.Complex.Zero*
  name: Zero
  href: api/BRIDGES.Arithmetic.Numbers.Complex.html#BRIDGES_Arithmetic_Numbers_Complex_Zero_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Complex.Zero
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Complex.Zero
  nameWithType: Complex.Zero
- uid: BRIDGES.Arithmetic.Numbers.Quaternion
  name: Quaternion
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html
  commentId: T:BRIDGES.Arithmetic.Numbers.Quaternion
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion
  nameWithType: Quaternion
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.#ctor(BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Quaternion(Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion__ctor_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.#ctor(BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Quaternion(BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Quaternion(Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.#ctor(System.Double,System.Double,System.Double,System.Double)
  name: Quaternion(Double, Double, Double, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion__ctor_System_Double_System_Double_System_Double_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.#ctor(System.Double,System.Double,System.Double,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Quaternion(System.Double, System.Double, System.Double, System.Double)
  nameWithType: Quaternion.Quaternion(Double, Double, Double, Double)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.#ctor(System.Double[])
  name: Quaternion(Double[])
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion__ctor_System_Double___
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.#ctor(System.Double[])
  name.vb: Quaternion(Double())
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Quaternion(System.Double[])
  fullName.vb: BRIDGES.Arithmetic.Numbers.Quaternion.Quaternion(System.Double())
  nameWithType: Quaternion.Quaternion(Double[])
  nameWithType.vb: Quaternion.Quaternion(Double())
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.#ctor*
  name: Quaternion
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion__ctor_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.#ctor
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Quaternion
  nameWithType: Quaternion.Quaternion
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Add(Complex, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Add_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Add(Complex, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  name: Add(Quaternion, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Add_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Quaternion.Add(Quaternion, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Add(Quaternion, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Add_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Add(Quaternion, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  name: Add(Quaternion, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Add_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Quaternion.Add(Quaternion, Real)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Add(Real, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Add_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Add(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Add(Real, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Add*
  name: Add
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Add_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.Add
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Add
  nameWithType: Quaternion.Add
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#Add(BRIDGES.Arithmetic.Numbers.Quaternion)
  name: IAddable<Quaternion>.Add(Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Quaternion__Add_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#Add(BRIDGES.Arithmetic.Numbers.Quaternion)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.Add(Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.Add(BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.IAddable<Quaternion>.Add(Quaternion)
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.Add(Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#Add*
  name: IAddable<Quaternion>.Add
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Quaternion__Add_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.Add
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.Add
  nameWithType: Quaternion.IAddable<Quaternion>.Add
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.Add
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsAssociative
  name: IAddable<Quaternion>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Quaternion__IsAssociative
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
  nameWithType: Quaternion.IAddable<Quaternion>.IsAssociative
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsAssociative*
  name: IAddable<Quaternion>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Quaternion__IsAssociative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
  nameWithType: Quaternion.IAddable<Quaternion>.IsAssociative
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsCommutative
  name: IAddable<Quaternion>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Quaternion__IsCommutative
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
  nameWithType: Quaternion.IAddable<Quaternion>.IsCommutative
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsCommutative*
  name: IAddable<Quaternion>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Quaternion__IsCommutative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
  nameWithType: Quaternion.IAddable<Quaternion>.IsCommutative
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Quaternion}#Divide(BRIDGES.Arithmetic.Numbers.Quaternion)
  name: IDivisible<Quaternion>.Divide(Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IDivisible_BRIDGES_Arithmetic_Numbers_Quaternion__Divide_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Quaternion}#Divide(BRIDGES.Arithmetic.Numbers.Quaternion)
  name.vb: BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Quaternion>.Divide(Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Quaternion>.Divide(BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.IDivisible<Quaternion>.Divide(Quaternion)
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Quaternion>.Divide(Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Quaternion}#Divide*
  name: IDivisible<Quaternion>.Divide
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IDivisible_BRIDGES_Arithmetic_Numbers_Quaternion__Divide_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Quaternion}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Quaternion>.Divide
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Quaternion>.Divide
  nameWithType: Quaternion.IDivisible<Quaternion>.Divide
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Quaternion>.Divide
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsAssociative
  name: IMultiplicable<Quaternion>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Quaternion__IsAssociative
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
  nameWithType: Quaternion.IMultiplicable<Quaternion>.IsAssociative
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsAssociative*
  name: IMultiplicable<Quaternion>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Quaternion__IsAssociative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
  nameWithType: Quaternion.IMultiplicable<Quaternion>.IsAssociative
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsCommutative
  name: IMultiplicable<Quaternion>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Quaternion__IsCommutative
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
  nameWithType: Quaternion.IMultiplicable<Quaternion>.IsCommutative
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsCommutative*
  name: IMultiplicable<Quaternion>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Quaternion__IsCommutative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
  nameWithType: Quaternion.IMultiplicable<Quaternion>.IsCommutative
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#Multiply(BRIDGES.Arithmetic.Numbers.Quaternion)
  name: IMultiplicable<Quaternion>.Multiply(Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Quaternion__Multiply_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#Multiply(BRIDGES.Arithmetic.Numbers.Quaternion)
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply(Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.IMultiplicable<Quaternion>.Multiply(Quaternion)
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply(Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#Multiply*
  name: IMultiplicable<Quaternion>.Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Quaternion__Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Quaternion}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply
  nameWithType: Quaternion.IMultiplicable<Quaternion>.Multiply
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Quaternion}#One
  name: IOneable<Quaternion>.One()
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IOneable_BRIDGES_Arithmetic_Numbers_Quaternion__One
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Quaternion}#One
  name.vb: BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Quaternion>.One()
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Quaternion>.One()
  nameWithType: Quaternion.IOneable<Quaternion>.One()
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Quaternion>.One()
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Quaternion}#One*
  name: IOneable<Quaternion>.One
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IOneable_BRIDGES_Arithmetic_Numbers_Quaternion__One_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Quaternion}#One
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Quaternion>.One
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Quaternion>.One
  nameWithType: Quaternion.IOneable<Quaternion>.One
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Quaternion>.One
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Quaternion}#Subtract(BRIDGES.Arithmetic.Numbers.Quaternion)
  name: ISubtractable<Quaternion>.Subtract(Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Arithmetic_Numbers_Quaternion__Subtract_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Quaternion}#Subtract(BRIDGES.Arithmetic.Numbers.Quaternion)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Quaternion>.Subtract(Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Quaternion>.Subtract(BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.ISubtractable<Quaternion>.Subtract(Quaternion)
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Quaternion>.Subtract(Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Quaternion}#Subtract*
  name: ISubtractable<Quaternion>.Subtract
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Arithmetic_Numbers_Quaternion__Subtract_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Quaternion}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Quaternion>.Subtract
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Quaternion>.Subtract
  nameWithType: Quaternion.ISubtractable<Quaternion>.Subtract
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Quaternion>.Subtract
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Quaternion}#Zero
  name: IZeroable<Quaternion>.Zero()
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Arithmetic_Numbers_Quaternion__Zero
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Quaternion}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Quaternion>.Zero()
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Quaternion>.Zero()
  nameWithType: Quaternion.IZeroable<Quaternion>.Zero()
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Quaternion>.Zero()
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Quaternion}#Zero*
  name: IZeroable<Quaternion>.Zero
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Arithmetic_Numbers_Quaternion__Zero_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Quaternion}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Quaternion>.Zero
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Quaternion>.Zero
  nameWithType: Quaternion.IZeroable<Quaternion>.Zero
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Quaternion>.Zero
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Quaternion}#Divide(System.Double)
  name: IGroupAction<Double, Quaternion>.Divide(Double)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Numbers_Quaternion__Divide_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Quaternion}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Divide(Double)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Numbers.Quaternion>.Divide(System.Double)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Divide(System.Double)
  nameWithType: Quaternion.IGroupAction<Double, Quaternion>.Divide(Double)
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Divide(Double)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Quaternion}#Divide*
  name: IGroupAction<Double, Quaternion>.Divide
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Numbers_Quaternion__Divide_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Quaternion}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Divide
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Numbers.Quaternion>.Divide
  fullName.vb: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Divide
  nameWithType: Quaternion.IGroupAction<Double, Quaternion>.Divide
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Divide
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Quaternion}#Multiply(System.Double)
  name: IGroupAction<Double, Quaternion>.Multiply(Double)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Numbers_Quaternion__Multiply_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Quaternion}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply(Double)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply(System.Double)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply(System.Double)
  nameWithType: Quaternion.IGroupAction<Double, Quaternion>.Multiply(Double)
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply(Double)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Quaternion}#Multiply*
  name: IGroupAction<Double, Quaternion>.Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Numbers_Quaternion__Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Numbers#Quaternion}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply
  fullName.vb: BRIDGES.Arithmetic.Numbers.Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply
  nameWithType: Quaternion.IGroupAction<Double, Quaternion>.Multiply
  nameWithType.vb: Quaternion.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Numbers.Quaternion>.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Conjugate
  name: Conjugate()
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Conjugate
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Conjugate
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Conjugate()
  nameWithType: Quaternion.Conjugate()
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Conjugate(BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Conjugate(Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Conjugate_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Conjugate(BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Conjugate(BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Conjugate(Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Conjugate*
  name: Conjugate
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Conjugate_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.Conjugate
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Conjugate
  nameWithType: Quaternion.Conjugate
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Divide(Complex, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Divide_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Divide(Complex, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  name: Divide(Quaternion, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Divide_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Quaternion.Divide(Quaternion, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Divide(Quaternion, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Divide_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Divide(Quaternion, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  name: Divide(Quaternion, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Divide_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Quaternion.Divide(Quaternion, Real)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion,System.Double)
  name: Divide(Quaternion, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Divide_BRIDGES_Arithmetic_Numbers_Quaternion_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Quaternion, System.Double)
  nameWithType: Quaternion.Divide(Quaternion, Double)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Divide(Real, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Divide_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Divide(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Divide(Real, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Divide*
  name: Divide
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Divide_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.Divide
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Divide
  nameWithType: Quaternion.Divide
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Equals(BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Equals(Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Equals_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Equals(BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Equals(BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Equals(Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Equals_System_Object_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Equals(System.Object)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Equals(System.Object)
  nameWithType: Quaternion.Equals(Object)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Equals*
  name: Equals
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Equals_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.Equals
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Equals
  nameWithType: Quaternion.Equals
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_GetHashCode
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.GetHashCode
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.GetHashCode()
  nameWithType: Quaternion.GetHashCode()
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_GetHashCode_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.GetHashCode
  nameWithType: Quaternion.GetHashCode
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.I
  name: I
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_I
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.I
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.I
  nameWithType: Quaternion.I
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.I*
  name: I
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_I_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.I
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.I
  nameWithType: Quaternion.I
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Inverse
  name: Inverse()
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Inverse
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Inverse
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Inverse()
  nameWithType: Quaternion.Inverse()
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Inverse(BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Inverse(Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Inverse_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Inverse(BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Inverse(BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Inverse(Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Inverse*
  name: Inverse
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Inverse_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.Inverse
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Inverse
  nameWithType: Quaternion.Inverse
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.J
  name: J
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_J
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.J
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.J
  nameWithType: Quaternion.J
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.J*
  name: J
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_J_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.J
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.J
  nameWithType: Quaternion.J
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.K
  name: K
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_K
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.K
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.K
  nameWithType: Quaternion.K
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.K*
  name: K
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_K_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.K
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.K
  nameWithType: Quaternion.K
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Multiply(Complex, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Multiply_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Multiply(Complex, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  name: Multiply(Quaternion, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Multiply_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Quaternion.Multiply(Quaternion, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Multiply(Quaternion, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Multiply_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  name: Multiply(Quaternion, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Multiply_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Quaternion.Multiply(Quaternion, Real)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Multiply(Real, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Multiply_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Multiply(Real, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(System.Double,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Multiply(Double, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Multiply_System_Double_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(System.Double,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(System.Double, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Multiply(Double, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply*
  name: Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.Multiply
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply
  nameWithType: Quaternion.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Norm
  name: Norm()
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Norm
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Norm
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Norm()
  nameWithType: Quaternion.Norm()
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Norm*
  name: Norm
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Norm_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.Norm
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Norm
  nameWithType: Quaternion.Norm
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.One
  name: One
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_One
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.One
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.One
  nameWithType: Quaternion.One
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.One*
  name: One
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_One_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.One
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.One
  nameWithType: Quaternion.One
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Addition(Complex, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Addition_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Addition(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Addition(Complex, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  name: Addition(Quaternion, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Addition_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Addition(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Quaternion.Addition(Quaternion, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Addition(Quaternion, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Addition_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Addition(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Addition(Quaternion, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  name: Addition(Quaternion, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Addition_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Addition(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Quaternion.Addition(Quaternion, Real)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Quaternion,System.Double)
  name: Addition(Quaternion, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Addition_BRIDGES_Arithmetic_Numbers_Quaternion_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Quaternion,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Addition(BRIDGES.Arithmetic.Numbers.Quaternion, System.Double)
  nameWithType: Quaternion.Addition(Quaternion, Double)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Addition(Real, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Addition_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Addition(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Addition(Real, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(System.Double,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Addition(Double, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Addition_System_Double_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition(System.Double,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Addition(System.Double, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Addition(Double, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition*
  name: Addition
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Addition_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.op_Addition
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Addition
  nameWithType: Quaternion.Addition
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Division(Complex, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Division_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Division(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Division(Complex, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  name: Division(Quaternion, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Division_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Division(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Quaternion.Division(Quaternion, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Division(Quaternion, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Division_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Division(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Division(Quaternion, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  name: Division(Quaternion, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Division_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Division(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Quaternion.Division(Quaternion, Real)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Quaternion,System.Double)
  name: Division(Quaternion, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Division_BRIDGES_Arithmetic_Numbers_Quaternion_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Quaternion,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Division(BRIDGES.Arithmetic.Numbers.Quaternion, System.Double)
  nameWithType: Quaternion.Division(Quaternion, Double)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Division(Real, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Division_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Division(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Division(Real, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(System.Double,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Division(Double, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Division_System_Double_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Division(System.Double,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Division(System.Double, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Division(Double, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Division*
  name: Division
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Division_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.op_Division
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Division
  nameWithType: Quaternion.Division
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Explicit(BRIDGES.Arithmetic.Numbers.Complex)~BRIDGES.Arithmetic.Numbers.Quaternion
  name: Explicit(Complex to Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Explicit_BRIDGES_Arithmetic_Numbers_Complex__BRIDGES_Arithmetic_Numbers_Quaternion
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Explicit(BRIDGES.Arithmetic.Numbers.Complex)~BRIDGES.Arithmetic.Numbers.Quaternion
  name.vb: Narrowing(Complex to Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Explicit(BRIDGES.Arithmetic.Numbers.Complex to BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Quaternion.Narrowing(BRIDGES.Arithmetic.Numbers.Complex to BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Explicit(Complex to Quaternion)
  nameWithType.vb: Quaternion.Narrowing(Complex to Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Explicit(BRIDGES.Arithmetic.Numbers.Real)~BRIDGES.Arithmetic.Numbers.Quaternion
  name: Explicit(Real to Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Explicit_BRIDGES_Arithmetic_Numbers_Real__BRIDGES_Arithmetic_Numbers_Quaternion
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Explicit(BRIDGES.Arithmetic.Numbers.Real)~BRIDGES.Arithmetic.Numbers.Quaternion
  name.vb: Narrowing(Real to Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Explicit(BRIDGES.Arithmetic.Numbers.Real to BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Quaternion.Narrowing(BRIDGES.Arithmetic.Numbers.Real to BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Explicit(Real to Quaternion)
  nameWithType.vb: Quaternion.Narrowing(Real to Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Explicit(System.Double)~BRIDGES.Arithmetic.Numbers.Quaternion
  name: Explicit(Double to Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Explicit_System_Double__BRIDGES_Arithmetic_Numbers_Quaternion
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Explicit(System.Double)~BRIDGES.Arithmetic.Numbers.Quaternion
  name.vb: Narrowing(Double to Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Explicit(System.Double to BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Quaternion.Narrowing(System.Double to BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Explicit(Double to Quaternion)
  nameWithType.vb: Quaternion.Narrowing(Double to Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Explicit(ValueTuple{System.Double,System.Double,System.Double,System.Double})~BRIDGES.Arithmetic.Numbers.Quaternion
  name: Explicit(ValueTuple<Double, Double, Double, Double> to Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Explicit_ValueTuple_System_Double_System_Double_System_Double_System_Double___BRIDGES_Arithmetic_Numbers_Quaternion
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Explicit(ValueTuple{System.Double,System.Double,System.Double,System.Double})~BRIDGES.Arithmetic.Numbers.Quaternion
  name.vb: Narrowing(ValueTuple(Of Double, Double, Double, Double) to Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Explicit(ValueTuple<System.Double, System.Double, System.Double, System.Double> to BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Quaternion.Narrowing(ValueTuple(Of System.Double, System.Double, System.Double, System.Double) to BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Explicit(ValueTuple<Double, Double, Double, Double> to Quaternion)
  nameWithType.vb: Quaternion.Narrowing(ValueTuple(Of Double, Double, Double, Double) to Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Explicit*
  name: Explicit
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Explicit_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Explicit
  fullName.vb: BRIDGES.Arithmetic.Numbers.Quaternion.Narrowing
  nameWithType: Quaternion.Explicit
  nameWithType.vb: Quaternion.Narrowing
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Multiply(Complex, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Multiply_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Multiply(Complex, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  name: Multiply(Quaternion, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Multiply_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Quaternion.Multiply(Quaternion, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Multiply(Quaternion, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Multiply_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  name: Multiply(Quaternion, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Multiply_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Quaternion.Multiply(Quaternion, Real)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,System.Double)
  name: Multiply(Quaternion, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Multiply_BRIDGES_Arithmetic_Numbers_Quaternion_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Quaternion,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Quaternion, System.Double)
  nameWithType: Quaternion.Multiply(Quaternion, Double)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Multiply(Real, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Multiply_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Multiply(Real, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(System.Double,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Multiply(Double, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Multiply_System_Double_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply(System.Double,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply(System.Double, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Multiply(Double, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply*
  name: Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.op_Multiply
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Multiply
  nameWithType: Quaternion.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Subtraction(Complex, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Subtraction_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtraction(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Subtraction(Complex, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  name: Subtraction(Quaternion, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Subtraction_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Quaternion.Subtraction(Quaternion, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Subtraction(Quaternion, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Subtraction_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Subtraction(Quaternion, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  name: Subtraction(Quaternion, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Subtraction_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Quaternion.Subtraction(Quaternion, Real)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion,System.Double)
  name: Subtraction(Quaternion, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Subtraction_BRIDGES_Arithmetic_Numbers_Quaternion_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtraction(BRIDGES.Arithmetic.Numbers.Quaternion, System.Double)
  nameWithType: Quaternion.Subtraction(Quaternion, Double)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Subtraction(Real, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Subtraction_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtraction(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Subtraction(Real, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(System.Double,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Subtraction(Double, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Subtraction_System_Double_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction(System.Double,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtraction(System.Double, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Subtraction(Double, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction*
  name: Subtraction
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_Subtraction_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.op_Subtraction
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtraction
  nameWithType: Quaternion.Subtraction
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_UnaryNegation(BRIDGES.Arithmetic.Numbers.Quaternion)
  name: UnaryNegation(Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_UnaryNegation_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.op_UnaryNegation(BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.UnaryNegation(BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.UnaryNegation(Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.op_UnaryNegation*
  name: UnaryNegation
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_op_UnaryNegation_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.op_UnaryNegation
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.UnaryNegation
  nameWithType: Quaternion.UnaryNegation
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Opposite
  name: Opposite()
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Opposite
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Opposite
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Opposite()
  nameWithType: Quaternion.Opposite()
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Opposite(BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Opposite(Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Opposite_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Opposite(BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Opposite(BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Opposite(Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Opposite*
  name: Opposite
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Opposite_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.Opposite
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Opposite
  nameWithType: Quaternion.Opposite
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.ScalarPart
  name: ScalarPart
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_ScalarPart
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.ScalarPart
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.ScalarPart
  nameWithType: Quaternion.ScalarPart
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.ScalarPart*
  name: ScalarPart
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_ScalarPart_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.ScalarPart
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.ScalarPart
  nameWithType: Quaternion.ScalarPart
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Subtract(Complex, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Subtract_BRIDGES_Arithmetic_Numbers_Complex_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Complex,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Complex, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Subtract(Complex, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  name: Subtract(Quaternion, Complex)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Subtract_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Complex_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Complex)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Complex)
  nameWithType: Quaternion.Subtract(Quaternion, Complex)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Subtract(Quaternion, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Subtract_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Subtract(Quaternion, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  name: Subtract(Quaternion, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Subtract_BRIDGES_Arithmetic_Numbers_Quaternion_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Quaternion,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Quaternion, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Quaternion.Subtract(Quaternion, Real)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  name: Subtract(Real, Quaternion)
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Subtract_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Quaternion_
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Quaternion)
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Quaternion)
  nameWithType: Quaternion.Subtract(Real, Quaternion)
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract*
  name: Subtract
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Subtract_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.Subtract
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Subtract
  nameWithType: Quaternion.Subtract
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.ToString
  name: ToString()
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_ToString
  commentId: M:BRIDGES.Arithmetic.Numbers.Quaternion.ToString
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.ToString()
  nameWithType: Quaternion.ToString()
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.ToString*
  name: ToString
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_ToString_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.ToString
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.ToString
  nameWithType: Quaternion.ToString
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.VectorPart
  name: VectorPart
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_VectorPart
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.VectorPart
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.VectorPart
  nameWithType: Quaternion.VectorPart
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.VectorPart*
  name: VectorPart
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_VectorPart_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.VectorPart
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.VectorPart
  nameWithType: Quaternion.VectorPart
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Zero
  name: Zero
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Zero
  commentId: P:BRIDGES.Arithmetic.Numbers.Quaternion.Zero
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Zero
  nameWithType: Quaternion.Zero
- uid: BRIDGES.Arithmetic.Numbers.Quaternion.Zero*
  name: Zero
  href: api/BRIDGES.Arithmetic.Numbers.Quaternion.html#BRIDGES_Arithmetic_Numbers_Quaternion_Zero_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Quaternion.Zero
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Quaternion.Zero
  nameWithType: Quaternion.Zero
- uid: BRIDGES.Arithmetic.Numbers.Real
  name: Real
  href: api/BRIDGES.Arithmetic.Numbers.Real.html
  commentId: T:BRIDGES.Arithmetic.Numbers.Real
  fullName: BRIDGES.Arithmetic.Numbers.Real
  nameWithType: Real
- uid: BRIDGES.Arithmetic.Numbers.Real.#ctor(BRIDGES.Arithmetic.Numbers.Real)
  name: Real(Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real__ctor_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.#ctor(BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Real(BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Real(Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.#ctor(System.Double)
  name: Real(Double)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real__ctor_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.#ctor(System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Real(System.Double)
  nameWithType: Real.Real(Double)
- uid: BRIDGES.Arithmetic.Numbers.Real.#ctor*
  name: Real
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real__ctor_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.#ctor
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Real
  nameWithType: Real.Real
- uid: BRIDGES.Arithmetic.Numbers.Real.Add(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  name: Add(Real, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Add_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.Add(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Add(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Add(Real, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.Add*
  name: Add
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Add_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.Add
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Add
  nameWithType: Real.Add
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#Add(BRIDGES.Arithmetic.Numbers.Real)
  name: IAddable<Real>.Add(Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Real__Add_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#Add(BRIDGES.Arithmetic.Numbers.Real)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.Add(Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.Add(BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.IAddable<Real>.Add(Real)
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.Add(Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#Add*
  name: IAddable<Real>.Add
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Real__Add_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.Add
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.Add
  nameWithType: Real.IAddable<Real>.Add
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.Add
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#IsAssociative
  name: IAddable<Real>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Real__IsAssociative
  commentId: P:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
  nameWithType: Real.IAddable<Real>.IsAssociative
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#IsAssociative*
  name: IAddable<Real>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Real__IsAssociative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
  nameWithType: Real.IAddable<Real>.IsAssociative
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#IsCommutative
  name: IAddable<Real>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Real__IsCommutative
  commentId: P:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
  nameWithType: Real.IAddable<Real>.IsCommutative
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#IsCommutative*
  name: IAddable<Real>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Numbers_Real__IsCommutative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Numbers#Real}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
  nameWithType: Real.IAddable<Real>.IsCommutative
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Real}#Divide(BRIDGES.Arithmetic.Numbers.Real)
  name: IDivisible<Real>.Divide(Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IDivisible_BRIDGES_Arithmetic_Numbers_Real__Divide_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Real}#Divide(BRIDGES.Arithmetic.Numbers.Real)
  name.vb: BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Real>.Divide(Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Real>.Divide(BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.IDivisible<Real>.Divide(Real)
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Real>.Divide(Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Real}#Divide*
  name: IDivisible<Real>.Divide
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IDivisible_BRIDGES_Arithmetic_Numbers_Real__Divide_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IDivisible{BRIDGES#Arithmetic#Numbers#Real}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Real>.Divide
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Real>.Divide
  nameWithType: Real.IDivisible<Real>.Divide
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IDivisible<BRIDGES.Arithmetic.Numbers.Real>.Divide
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#IsAssociative
  name: IMultiplicable<Real>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Real__IsAssociative
  commentId: P:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
  nameWithType: Real.IMultiplicable<Real>.IsAssociative
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#IsAssociative*
  name: IMultiplicable<Real>.IsAssociative
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Real__IsAssociative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
  nameWithType: Real.IMultiplicable<Real>.IsAssociative
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsAssociative
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#IsCommutative
  name: IMultiplicable<Real>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Real__IsCommutative
  commentId: P:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
  nameWithType: Real.IMultiplicable<Real>.IsCommutative
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#IsCommutative*
  name: IMultiplicable<Real>.IsCommutative
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Real__IsCommutative_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
  nameWithType: Real.IMultiplicable<Real>.IsCommutative
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.IsCommutative
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#Multiply(BRIDGES.Arithmetic.Numbers.Real)
  name: IMultiplicable<Real>.Multiply(Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Real__Multiply_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#Multiply(BRIDGES.Arithmetic.Numbers.Real)
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.Multiply(Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.Multiply(BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.IMultiplicable<Real>.Multiply(Real)
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.Multiply(Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#Multiply*
  name: IMultiplicable<Real>.Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Numbers_Real__Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Numbers#Real}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.Multiply
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.Multiply
  nameWithType: Real.IMultiplicable<Real>.Multiply
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Numbers.Real>.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Real}#One
  name: IOneable<Real>.One()
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IOneable_BRIDGES_Arithmetic_Numbers_Real__One
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Real}#One
  name.vb: BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Real>.One()
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Real>.One()
  nameWithType: Real.IOneable<Real>.One()
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Real>.One()
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Real}#One*
  name: IOneable<Real>.One
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IOneable_BRIDGES_Arithmetic_Numbers_Real__One_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Numbers#Real}#One
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Real>.One
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Real>.One
  nameWithType: Real.IOneable<Real>.One
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Numbers.Real>.One
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Real}#Subtract(BRIDGES.Arithmetic.Numbers.Real)
  name: ISubtractable<Real>.Subtract(Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Arithmetic_Numbers_Real__Subtract_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Real}#Subtract(BRIDGES.Arithmetic.Numbers.Real)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Real>.Subtract(Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Real>.Subtract(BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.ISubtractable<Real>.Subtract(Real)
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Real>.Subtract(Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Real}#Subtract*
  name: ISubtractable<Real>.Subtract
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Arithmetic_Numbers_Real__Subtract_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Numbers#Real}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Real>.Subtract
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Real>.Subtract
  nameWithType: Real.ISubtractable<Real>.Subtract
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Numbers.Real>.Subtract
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Real}#Zero
  name: IZeroable<Real>.Zero()
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Arithmetic_Numbers_Real__Zero
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Real}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Real>.Zero()
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Real>.Zero()
  nameWithType: Real.IZeroable<Real>.Zero()
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Real>.Zero()
- uid: BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Real}#Zero*
  name: IZeroable<Real>.Zero
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Arithmetic_Numbers_Real__Zero_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Numbers#Real}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Real>.Zero
  fullName: BRIDGES.Arithmetic.Numbers.Real.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Real>.Zero
  nameWithType: Real.IZeroable<Real>.Zero
  nameWithType.vb: Real.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Numbers.Real>.Zero
- uid: BRIDGES.Arithmetic.Numbers.Real.Divide(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  name: Divide(Real, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Divide_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.Divide(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Divide(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Divide(Real, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.Divide*
  name: Divide
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Divide_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.Divide
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Divide
  nameWithType: Real.Divide
- uid: BRIDGES.Arithmetic.Numbers.Real.Equals(BRIDGES.Arithmetic.Numbers.Real)
  name: Equals(Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Equals_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.Equals(BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Equals(BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Equals(Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Equals_System_Object_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.Equals(System.Object)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Equals(System.Object)
  nameWithType: Real.Equals(Object)
- uid: BRIDGES.Arithmetic.Numbers.Real.Equals*
  name: Equals
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Equals_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.Equals
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Equals
  nameWithType: Real.Equals
- uid: BRIDGES.Arithmetic.Numbers.Real.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_GetHashCode
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.GetHashCode
  fullName: BRIDGES.Arithmetic.Numbers.Real.GetHashCode()
  nameWithType: Real.GetHashCode()
- uid: BRIDGES.Arithmetic.Numbers.Real.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_GetHashCode_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.GetHashCode
  nameWithType: Real.GetHashCode
- uid: BRIDGES.Arithmetic.Numbers.Real.Inverse
  name: Inverse()
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Inverse
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.Inverse
  fullName: BRIDGES.Arithmetic.Numbers.Real.Inverse()
  nameWithType: Real.Inverse()
- uid: BRIDGES.Arithmetic.Numbers.Real.Inverse(BRIDGES.Arithmetic.Numbers.Real)
  name: Inverse(Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Inverse_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.Inverse(BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Inverse(BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Inverse(Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.Inverse*
  name: Inverse
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Inverse_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.Inverse
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Inverse
  nameWithType: Real.Inverse
- uid: BRIDGES.Arithmetic.Numbers.Real.Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  name: Multiply(Real, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Multiply_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Multiply(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Multiply(Real, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.Multiply*
  name: Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.Multiply
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Multiply
  nameWithType: Real.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Real.One
  name: One
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_One
  commentId: P:BRIDGES.Arithmetic.Numbers.Real.One
  fullName: BRIDGES.Arithmetic.Numbers.Real.One
  nameWithType: Real.One
- uid: BRIDGES.Arithmetic.Numbers.Real.One*
  name: One
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_One_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.One
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.One
  nameWithType: Real.One
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Addition(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  name: Addition(Real, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Addition_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Addition(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Addition(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Addition(Real, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Addition(BRIDGES.Arithmetic.Numbers.Real,System.Double)
  name: Addition(Real, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Addition_BRIDGES_Arithmetic_Numbers_Real_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Addition(BRIDGES.Arithmetic.Numbers.Real,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Addition(BRIDGES.Arithmetic.Numbers.Real, System.Double)
  nameWithType: Real.Addition(Real, Double)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Addition(System.Double,BRIDGES.Arithmetic.Numbers.Real)
  name: Addition(Double, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Addition_System_Double_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Addition(System.Double,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Addition(System.Double, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Addition(Double, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Addition*
  name: Addition
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Addition_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.op_Addition
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Addition
  nameWithType: Real.Addition
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Division(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  name: Division(Real, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Division_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Division(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Division(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Division(Real, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Division(BRIDGES.Arithmetic.Numbers.Real,System.Double)
  name: Division(Real, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Division_BRIDGES_Arithmetic_Numbers_Real_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Division(BRIDGES.Arithmetic.Numbers.Real,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Division(BRIDGES.Arithmetic.Numbers.Real, System.Double)
  nameWithType: Real.Division(Real, Double)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Division(System.Double,BRIDGES.Arithmetic.Numbers.Real)
  name: Division(Double, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Division_System_Double_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Division(System.Double,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Division(System.Double, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Division(Double, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Division*
  name: Division
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Division_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.op_Division
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Division
  nameWithType: Real.Division
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Explicit(BRIDGES.Arithmetic.Numbers.Real)~System.Double
  name: Explicit(Real to Double)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Explicit_BRIDGES_Arithmetic_Numbers_Real__System_Double
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Explicit(BRIDGES.Arithmetic.Numbers.Real)~System.Double
  name.vb: Narrowing(Real to Double)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Explicit(BRIDGES.Arithmetic.Numbers.Real to System.Double)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Real.Narrowing(BRIDGES.Arithmetic.Numbers.Real to System.Double)
  nameWithType: Real.Explicit(Real to Double)
  nameWithType.vb: Real.Narrowing(Real to Double)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Explicit(System.Double)~BRIDGES.Arithmetic.Numbers.Real
  name: Explicit(Double to Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Explicit_System_Double__BRIDGES_Arithmetic_Numbers_Real
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Explicit(System.Double)~BRIDGES.Arithmetic.Numbers.Real
  name.vb: Narrowing(Double to Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Explicit(System.Double to BRIDGES.Arithmetic.Numbers.Real)
  fullName.vb: BRIDGES.Arithmetic.Numbers.Real.Narrowing(System.Double to BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Explicit(Double to Real)
  nameWithType.vb: Real.Narrowing(Double to Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Explicit*
  name: Explicit
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Explicit_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: BRIDGES.Arithmetic.Numbers.Real.Explicit
  fullName.vb: BRIDGES.Arithmetic.Numbers.Real.Narrowing
  nameWithType: Real.Explicit
  nameWithType.vb: Real.Narrowing
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  name: Multiply(Real, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Multiply_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Multiply(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Multiply(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Multiply(Real, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Multiply(BRIDGES.Arithmetic.Numbers.Real,System.Double)
  name: Multiply(Real, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Multiply_BRIDGES_Arithmetic_Numbers_Real_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Multiply(BRIDGES.Arithmetic.Numbers.Real,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Multiply(BRIDGES.Arithmetic.Numbers.Real, System.Double)
  nameWithType: Real.Multiply(Real, Double)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Multiply(System.Double,BRIDGES.Arithmetic.Numbers.Real)
  name: Multiply(Double, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Multiply_System_Double_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Multiply(System.Double,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Multiply(System.Double, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Multiply(Double, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Multiply*
  name: Multiply
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.op_Multiply
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Multiply
  nameWithType: Real.Multiply
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Subtraction(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  name: Subtraction(Real, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Subtraction_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Subtraction(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Subtraction(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Subtraction(Real, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Subtraction(BRIDGES.Arithmetic.Numbers.Real,System.Double)
  name: Subtraction(Real, Double)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Subtraction_BRIDGES_Arithmetic_Numbers_Real_System_Double_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Subtraction(BRIDGES.Arithmetic.Numbers.Real,System.Double)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Subtraction(BRIDGES.Arithmetic.Numbers.Real, System.Double)
  nameWithType: Real.Subtraction(Real, Double)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Subtraction(System.Double,BRIDGES.Arithmetic.Numbers.Real)
  name: Subtraction(Double, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Subtraction_System_Double_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_Subtraction(System.Double,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Subtraction(System.Double, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Subtraction(Double, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_Subtraction*
  name: Subtraction
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_Subtraction_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.op_Subtraction
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Subtraction
  nameWithType: Real.Subtraction
- uid: BRIDGES.Arithmetic.Numbers.Real.op_UnaryNegation(BRIDGES.Arithmetic.Numbers.Real)
  name: UnaryNegation(Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_UnaryNegation_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.op_UnaryNegation(BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.UnaryNegation(BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.UnaryNegation(Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.op_UnaryNegation*
  name: UnaryNegation
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_op_UnaryNegation_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.op_UnaryNegation
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.UnaryNegation
  nameWithType: Real.UnaryNegation
- uid: BRIDGES.Arithmetic.Numbers.Real.Opposite
  name: Opposite()
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Opposite
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.Opposite
  fullName: BRIDGES.Arithmetic.Numbers.Real.Opposite()
  nameWithType: Real.Opposite()
- uid: BRIDGES.Arithmetic.Numbers.Real.Opposite(BRIDGES.Arithmetic.Numbers.Real)
  name: Opposite(Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Opposite_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.Opposite(BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Opposite(BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Opposite(Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.Opposite*
  name: Opposite
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Opposite_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.Opposite
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Opposite
  nameWithType: Real.Opposite
- uid: BRIDGES.Arithmetic.Numbers.Real.Subtract(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  name: Subtract(Real, Real)
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Subtract_BRIDGES_Arithmetic_Numbers_Real_BRIDGES_Arithmetic_Numbers_Real_
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.Subtract(BRIDGES.Arithmetic.Numbers.Real,BRIDGES.Arithmetic.Numbers.Real)
  fullName: BRIDGES.Arithmetic.Numbers.Real.Subtract(BRIDGES.Arithmetic.Numbers.Real, BRIDGES.Arithmetic.Numbers.Real)
  nameWithType: Real.Subtract(Real, Real)
- uid: BRIDGES.Arithmetic.Numbers.Real.Subtract*
  name: Subtract
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Subtract_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.Subtract
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Subtract
  nameWithType: Real.Subtract
- uid: BRIDGES.Arithmetic.Numbers.Real.ToString
  name: ToString()
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_ToString
  commentId: M:BRIDGES.Arithmetic.Numbers.Real.ToString
  fullName: BRIDGES.Arithmetic.Numbers.Real.ToString()
  nameWithType: Real.ToString()
- uid: BRIDGES.Arithmetic.Numbers.Real.ToString*
  name: ToString
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_ToString_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.ToString
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.ToString
  nameWithType: Real.ToString
- uid: BRIDGES.Arithmetic.Numbers.Real.Value
  name: Value
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Value
  commentId: P:BRIDGES.Arithmetic.Numbers.Real.Value
  fullName: BRIDGES.Arithmetic.Numbers.Real.Value
  nameWithType: Real.Value
- uid: BRIDGES.Arithmetic.Numbers.Real.Value*
  name: Value
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Value_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.Value
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Value
  nameWithType: Real.Value
- uid: BRIDGES.Arithmetic.Numbers.Real.Zero
  name: Zero
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Zero
  commentId: P:BRIDGES.Arithmetic.Numbers.Real.Zero
  fullName: BRIDGES.Arithmetic.Numbers.Real.Zero
  nameWithType: Real.Zero
- uid: BRIDGES.Arithmetic.Numbers.Real.Zero*
  name: Zero
  href: api/BRIDGES.Arithmetic.Numbers.Real.html#BRIDGES_Arithmetic_Numbers_Real_Zero_
  commentId: Overload:BRIDGES.Arithmetic.Numbers.Real.Zero
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Numbers.Real.Zero
  nameWithType: Real.Zero
- uid: BRIDGES.Arithmetic.Polynomials
  name: BRIDGES.Arithmetic.Polynomials
  href: api/BRIDGES.Arithmetic.Polynomials.html
  commentId: N:BRIDGES.Arithmetic.Polynomials
  fullName: BRIDGES.Arithmetic.Polynomials
  nameWithType: BRIDGES.Arithmetic.Polynomials
- uid: BRIDGES.Arithmetic.Polynomials.Monomial
  name: Monomial
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html
  commentId: T:BRIDGES.Arithmetic.Polynomials.Monomial
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial
  nameWithType: Monomial
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.#ctor(System.Int32[])
  name: Monomial(Int32[])
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial__ctor_System_Int32___
  commentId: M:BRIDGES.Arithmetic.Polynomials.Monomial.#ctor(System.Int32[])
  name.vb: Monomial(Int32())
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.Monomial(System.Int32[])
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Monomial.Monomial(System.Int32())
  nameWithType: Monomial.Monomial(Int32[])
  nameWithType.vb: Monomial.Monomial(Int32())
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.#ctor*
  name: Monomial
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial__ctor_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.#ctor
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.Monomial
  nameWithType: Monomial.Monomial
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#IsAssociative
  name: IMultiplicable<Monomial>.IsAssociative
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Monomial__IsAssociative
  commentId: P:BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsAssociative
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsAssociative
  nameWithType: Monomial.IMultiplicable<Monomial>.IsAssociative
  nameWithType.vb: Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsAssociative
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#IsAssociative*
  name: IMultiplicable<Monomial>.IsAssociative
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Monomial__IsAssociative_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsAssociative
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsAssociative
  nameWithType: Monomial.IMultiplicable<Monomial>.IsAssociative
  nameWithType.vb: Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsAssociative
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#IsCommutative
  name: IMultiplicable<Monomial>.IsCommutative
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Monomial__IsCommutative
  commentId: P:BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsCommutative
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsCommutative
  nameWithType: Monomial.IMultiplicable<Monomial>.IsCommutative
  nameWithType.vb: Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsCommutative
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#IsCommutative*
  name: IMultiplicable<Monomial>.IsCommutative
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Monomial__IsCommutative_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsCommutative
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsCommutative
  nameWithType: Monomial.IMultiplicable<Monomial>.IsCommutative
  nameWithType.vb: Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.IsCommutative
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#Multiply(BRIDGES.Arithmetic.Polynomials.Monomial)
  name: IMultiplicable<Monomial>.Multiply(Monomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Monomial__Multiply_BRIDGES_Arithmetic_Polynomials_Monomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#Multiply(BRIDGES.Arithmetic.Polynomials.Monomial)
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.Multiply(Monomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.Multiply(BRIDGES.Arithmetic.Polynomials.Monomial)
  nameWithType: Monomial.IMultiplicable<Monomial>.Multiply(Monomial)
  nameWithType.vb: Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.Multiply(Monomial)
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#Multiply*
  name: IMultiplicable<Monomial>.Multiply
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Monomial__Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Monomial}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.Multiply
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.Multiply
  nameWithType: Monomial.IMultiplicable<Monomial>.Multiply
  nameWithType.vb: Monomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Monomial>.Multiply
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Polynomials#Monomial}#One
  name: IOneable<Monomial>.One()
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_BRIDGES_Algebra_Fundamentals_IOneable_BRIDGES_Arithmetic_Polynomials_Monomial__One
  commentId: M:BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Polynomials#Monomial}#One
  name.vb: BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Monomial>.One()
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Monomial>.One()
  nameWithType: Monomial.IOneable<Monomial>.One()
  nameWithType.vb: Monomial.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Monomial>.One()
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Polynomials#Monomial}#One*
  name: IOneable<Monomial>.One
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_BRIDGES_Algebra_Fundamentals_IOneable_BRIDGES_Arithmetic_Polynomials_Monomial__One_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Polynomials#Monomial}#One
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Monomial>.One
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Monomial>.One
  nameWithType: Monomial.IOneable<Monomial>.One
  nameWithType.vb: Monomial.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Monomial>.One
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.EvaluateAt(System.Double[])
  name: EvaluateAt(Double[])
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_EvaluateAt_System_Double___
  commentId: M:BRIDGES.Arithmetic.Polynomials.Monomial.EvaluateAt(System.Double[])
  name.vb: EvaluateAt(Double())
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.EvaluateAt(System.Double[])
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Monomial.EvaluateAt(System.Double())
  nameWithType: Monomial.EvaluateAt(Double[])
  nameWithType.vb: Monomial.EvaluateAt(Double())
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.EvaluateAt*
  name: EvaluateAt
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_EvaluateAt_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.EvaluateAt
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.EvaluateAt
  nameWithType: Monomial.EvaluateAt
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_Item_System_Int32_
  commentId: P:BRIDGES.Arithmetic.Polynomials.Monomial.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.Item[System.Int32]
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Monomial.Item(System.Int32)
  nameWithType: Monomial.Item[Int32]
  nameWithType.vb: Monomial.Item(Int32)
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.Item*
  name: Item
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_Item_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.Item
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.Item
  nameWithType: Monomial.Item
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.Multiply(BRIDGES.Arithmetic.Polynomials.Monomial,BRIDGES.Arithmetic.Polynomials.Monomial)
  name: Multiply(Monomial, Monomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_Multiply_BRIDGES_Arithmetic_Polynomials_Monomial_BRIDGES_Arithmetic_Polynomials_Monomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Monomial.Multiply(BRIDGES.Arithmetic.Polynomials.Monomial,BRIDGES.Arithmetic.Polynomials.Monomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.Multiply(BRIDGES.Arithmetic.Polynomials.Monomial, BRIDGES.Arithmetic.Polynomials.Monomial)
  nameWithType: Monomial.Multiply(Monomial, Monomial)
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.Multiply*
  name: Multiply
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.Multiply
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.Multiply
  nameWithType: Monomial.Multiply
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.One
  name: One
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_One
  commentId: P:BRIDGES.Arithmetic.Polynomials.Monomial.One
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.One
  nameWithType: Monomial.One
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.One*
  name: One
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_One_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.One
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.One
  nameWithType: Monomial.One
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.op_Multiply(BRIDGES.Arithmetic.Polynomials.Monomial,BRIDGES.Arithmetic.Polynomials.Monomial)
  name: Multiply(Monomial, Monomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_op_Multiply_BRIDGES_Arithmetic_Polynomials_Monomial_BRIDGES_Arithmetic_Polynomials_Monomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Monomial.op_Multiply(BRIDGES.Arithmetic.Polynomials.Monomial,BRIDGES.Arithmetic.Polynomials.Monomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.Multiply(BRIDGES.Arithmetic.Polynomials.Monomial, BRIDGES.Arithmetic.Polynomials.Monomial)
  nameWithType: Monomial.Multiply(Monomial, Monomial)
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.op_Multiply*
  name: Multiply
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_op_Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.op_Multiply
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.Multiply
  nameWithType: Monomial.Multiply
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.TotalDegree
  name: TotalDegree
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_TotalDegree
  commentId: P:BRIDGES.Arithmetic.Polynomials.Monomial.TotalDegree
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.TotalDegree
  nameWithType: Monomial.TotalDegree
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.TotalDegree*
  name: TotalDegree
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_TotalDegree_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.TotalDegree
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.TotalDegree
  nameWithType: Monomial.TotalDegree
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.VariableCount
  name: VariableCount
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_VariableCount
  commentId: P:BRIDGES.Arithmetic.Polynomials.Monomial.VariableCount
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.VariableCount
  nameWithType: Monomial.VariableCount
- uid: BRIDGES.Arithmetic.Polynomials.Monomial.VariableCount*
  name: VariableCount
  href: api/BRIDGES.Arithmetic.Polynomials.Monomial.html#BRIDGES_Arithmetic_Polynomials_Monomial_VariableCount_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Monomial.VariableCount
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Monomial.VariableCount
  nameWithType: Monomial.VariableCount
- uid: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial
  name: MultivariatePolynomial
  href: api/BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.html
  commentId: T:BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial
  fullName: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial
  nameWithType: MultivariatePolynomial
- uid: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.#ctor(System.Double[],BRIDGES.Arithmetic.Polynomials.Monomial[])
  name: MultivariatePolynomial(Double[], Monomial[])
  href: api/BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.html#BRIDGES_Arithmetic_Polynomials_MultivariatePolynomial__ctor_System_Double___BRIDGES_Arithmetic_Polynomials_Monomial___
  commentId: M:BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.#ctor(System.Double[],BRIDGES.Arithmetic.Polynomials.Monomial[])
  name.vb: MultivariatePolynomial(Double(), Monomial())
  fullName: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.MultivariatePolynomial(System.Double[], BRIDGES.Arithmetic.Polynomials.Monomial[])
  fullName.vb: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.MultivariatePolynomial(System.Double(), BRIDGES.Arithmetic.Polynomials.Monomial())
  nameWithType: MultivariatePolynomial.MultivariatePolynomial(Double[], Monomial[])
  nameWithType.vb: MultivariatePolynomial.MultivariatePolynomial(Double(), Monomial())
- uid: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.#ctor*
  name: MultivariatePolynomial
  href: api/BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.html#BRIDGES_Arithmetic_Polynomials_MultivariatePolynomial__ctor_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.#ctor
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.MultivariatePolynomial
  nameWithType: MultivariatePolynomial.MultivariatePolynomial
- uid: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.EvaluateAt(System.Double[])
  name: EvaluateAt(Double[])
  href: api/BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.html#BRIDGES_Arithmetic_Polynomials_MultivariatePolynomial_EvaluateAt_System_Double___
  commentId: M:BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.EvaluateAt(System.Double[])
  name.vb: EvaluateAt(Double())
  fullName: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.EvaluateAt(System.Double[])
  fullName.vb: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.EvaluateAt(System.Double())
  nameWithType: MultivariatePolynomial.EvaluateAt(Double[])
  nameWithType.vb: MultivariatePolynomial.EvaluateAt(Double())
- uid: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.EvaluateAt*
  name: EvaluateAt
  href: api/BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.html#BRIDGES_Arithmetic_Polynomials_MultivariatePolynomial_EvaluateAt_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.EvaluateAt
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.EvaluateAt
  nameWithType: MultivariatePolynomial.EvaluateAt
- uid: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.op_Implicit(BRIDGES.Arithmetic.Polynomials.Monomial)~BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial
  name: Implicit(Monomial to MultivariatePolynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.html#BRIDGES_Arithmetic_Polynomials_MultivariatePolynomial_op_Implicit_BRIDGES_Arithmetic_Polynomials_Monomial__BRIDGES_Arithmetic_Polynomials_MultivariatePolynomial
  commentId: M:BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.op_Implicit(BRIDGES.Arithmetic.Polynomials.Monomial)~BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial
  name.vb: Widening(Monomial to MultivariatePolynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.Implicit(BRIDGES.Arithmetic.Polynomials.Monomial to BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.Widening(BRIDGES.Arithmetic.Polynomials.Monomial to BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial)
  nameWithType: MultivariatePolynomial.Implicit(Monomial to MultivariatePolynomial)
  nameWithType.vb: MultivariatePolynomial.Widening(Monomial to MultivariatePolynomial)
- uid: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.op_Implicit*
  name: Implicit
  href: api/BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.html#BRIDGES_Arithmetic_Polynomials_MultivariatePolynomial_op_Implicit_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.Implicit
  fullName.vb: BRIDGES.Arithmetic.Polynomials.MultivariatePolynomial.Widening
  nameWithType: MultivariatePolynomial.Implicit
  nameWithType.vb: MultivariatePolynomial.Widening
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial
  name: Polynomial
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html
  commentId: T:BRIDGES.Arithmetic.Polynomials.Polynomial
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial
  nameWithType: Polynomial
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.#ctor(System.Double[])
  name: Polynomial(Double[])
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial__ctor_System_Double___
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.#ctor(System.Double[])
  name.vb: Polynomial(Double())
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Polynomial(System.Double[])
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Polynomial.Polynomial(System.Double())
  nameWithType: Polynomial.Polynomial(Double[])
  nameWithType.vb: Polynomial.Polynomial(Double())
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.#ctor*
  name: Polynomial
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial__ctor_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.#ctor
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Polynomial
  nameWithType: Polynomial.Polynomial
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Add(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: Add(Polynomial, Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Add_BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.Add(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Add(BRIDGES.Arithmetic.Polynomials.Polynomial, BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.Add(Polynomial, Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Add*
  name: Add
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Add_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.Add
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Add
  nameWithType: Polynomial.Add
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Add(BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: IAddable<Polynomial>.Add(Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Polynomials_Polynomial__Add_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Add(BRIDGES.Arithmetic.Polynomials.Polynomial)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Add(Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Add(BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.IAddable<Polynomial>.Add(Polynomial)
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Add(Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Add*
  name: IAddable<Polynomial>.Add
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Polynomials_Polynomial__Add_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Add
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Add
  nameWithType: Polynomial.IAddable<Polynomial>.Add
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Add
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsAssociative
  name: IAddable<Polynomial>.IsAssociative
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Polynomials_Polynomial__IsAssociative
  commentId: P:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
  nameWithType: Polynomial.IAddable<Polynomial>.IsAssociative
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsAssociative*
  name: IAddable<Polynomial>.IsAssociative
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Polynomials_Polynomial__IsAssociative_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
  nameWithType: Polynomial.IAddable<Polynomial>.IsAssociative
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsCommutative
  name: IAddable<Polynomial>.IsCommutative
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Polynomials_Polynomial__IsCommutative
  commentId: P:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
  nameWithType: Polynomial.IAddable<Polynomial>.IsCommutative
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsCommutative*
  name: IAddable<Polynomial>.IsCommutative
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Arithmetic_Polynomials_Polynomial__IsCommutative_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
  nameWithType: Polynomial.IAddable<Polynomial>.IsCommutative
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsAssociative
  name: IMultiplicable<Polynomial>.IsAssociative
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Polynomial__IsAssociative
  commentId: P:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
  nameWithType: Polynomial.IMultiplicable<Polynomial>.IsAssociative
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsAssociative*
  name: IMultiplicable<Polynomial>.IsAssociative
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Polynomial__IsAssociative_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
  nameWithType: Polynomial.IMultiplicable<Polynomial>.IsAssociative
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsAssociative
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsCommutative
  name: IMultiplicable<Polynomial>.IsCommutative
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Polynomial__IsCommutative
  commentId: P:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
  nameWithType: Polynomial.IMultiplicable<Polynomial>.IsCommutative
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsCommutative*
  name: IMultiplicable<Polynomial>.IsCommutative
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Polynomial__IsCommutative_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
  nameWithType: Polynomial.IMultiplicable<Polynomial>.IsCommutative
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.IsCommutative
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: IMultiplicable<Polynomial>.Multiply(Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Polynomial__Multiply_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial)
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply(Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.IMultiplicable<Polynomial>.Multiply(Polynomial)
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply(Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Multiply*
  name: IMultiplicable<Polynomial>.Multiply
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_Arithmetic_Polynomials_Polynomial__Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply
  nameWithType: Polynomial.IMultiplicable<Polynomial>.Multiply
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Polynomials#Polynomial}#One
  name: IOneable<Polynomial>.One()
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IOneable_BRIDGES_Arithmetic_Polynomials_Polynomial__One
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Polynomials#Polynomial}#One
  name.vb: BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Polynomial>.One()
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Polynomial>.One()
  nameWithType: Polynomial.IOneable<Polynomial>.One()
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Polynomial>.One()
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Polynomials#Polynomial}#One*
  name: IOneable<Polynomial>.One
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IOneable_BRIDGES_Arithmetic_Polynomials_Polynomial__One_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IOneable{BRIDGES#Arithmetic#Polynomials#Polynomial}#One
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Polynomial>.One
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Polynomial>.One
  nameWithType: Polynomial.IOneable<Polynomial>.One
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IOneable<BRIDGES.Arithmetic.Polynomials.Polynomial>.One
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Subtract(BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: ISubtractable<Polynomial>.Subtract(Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Arithmetic_Polynomials_Polynomial__Subtract_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Subtract(BRIDGES.Arithmetic.Polynomials.Polynomial)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Subtract(Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Subtract(BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.ISubtractable<Polynomial>.Subtract(Polynomial)
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Subtract(Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Subtract*
  name: ISubtractable<Polynomial>.Subtract
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Arithmetic_Polynomials_Polynomial__Subtract_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Subtract
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Subtract
  nameWithType: Polynomial.ISubtractable<Polynomial>.Subtract
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Subtract
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Zero
  name: IZeroable<Polynomial>.Zero()
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Arithmetic_Polynomials_Polynomial__Zero
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Zero()
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Zero()
  nameWithType: Polynomial.IZeroable<Polynomial>.Zero()
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Zero()
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Zero*
  name: IZeroable<Polynomial>.Zero
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Arithmetic_Polynomials_Polynomial__Zero_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Arithmetic#Polynomials#Polynomial}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Zero
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Zero
  nameWithType: Polynomial.IZeroable<Polynomial>.Zero
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Arithmetic.Polynomials.Polynomial>.Zero
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Arithmetic#Polynomials#Polynomial}#Opposite
  name: IGroup<Polynomial>.Opposite()
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_Arithmetic_Polynomials_Polynomial__Opposite
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Arithmetic#Polynomials#Polynomial}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Arithmetic.Polynomials.Polynomial>.Opposite()
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Arithmetic.Polynomials.Polynomial>.Opposite()
  nameWithType: Polynomial.IGroup<Polynomial>.Opposite()
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Arithmetic.Polynomials.Polynomial>.Opposite()
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Arithmetic#Polynomials#Polynomial}#Opposite*
  name: IGroup<Polynomial>.Opposite
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_Arithmetic_Polynomials_Polynomial__Opposite_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Arithmetic#Polynomials#Polynomial}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Arithmetic.Polynomials.Polynomial>.Opposite
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Arithmetic.Polynomials.Polynomial>.Opposite
  nameWithType: Polynomial.IGroup<Polynomial>.Opposite
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Arithmetic.Polynomials.Polynomial>.Opposite
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Polynomials#Polynomial}#Divide(System.Double)
  name: IGroupAction<Double, Polynomial>.Divide(Double)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Polynomials_Polynomial__Divide_System_Double_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Polynomials#Polynomial}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Divide(Double)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Polynomials.Polynomial>.Divide(System.Double)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Divide(System.Double)
  nameWithType: Polynomial.IGroupAction<Double, Polynomial>.Divide(Double)
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Divide(Double)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Polynomials#Polynomial}#Divide*
  name: IGroupAction<Double, Polynomial>.Divide
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Polynomials_Polynomial__Divide_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Polynomials#Polynomial}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Divide
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Polynomials.Polynomial>.Divide
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Divide
  nameWithType: Polynomial.IGroupAction<Double, Polynomial>.Divide
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Divide
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Polynomials#Polynomial}#Multiply(System.Double)
  name: IGroupAction<Double, Polynomial>.Multiply(Double)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Polynomials_Polynomial__Multiply_System_Double_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Polynomials#Polynomial}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply(Double)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply(System.Double)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply(System.Double)
  nameWithType: Polynomial.IGroupAction<Double, Polynomial>.Multiply(Double)
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply(Double)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Polynomials#Polynomial}#Multiply*
  name: IGroupAction<Double, Polynomial>.Multiply
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Arithmetic_Polynomials_Polynomial__Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Arithmetic#Polynomials#Polynomial}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply
  nameWithType: Polynomial.IGroupAction<Double, Polynomial>.Multiply
  nameWithType.vb: Polynomial.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial>.Multiply
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Degree
  name: Degree
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Degree
  commentId: P:BRIDGES.Arithmetic.Polynomials.Polynomial.Degree
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Degree
  nameWithType: Polynomial.Degree
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Degree*
  name: Degree
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Degree_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.Degree
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Degree
  nameWithType: Polynomial.Degree
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Derive(BRIDGES.Arithmetic.Polynomials.Polynomial,System.Int32)
  name: Derive(Polynomial, Int32)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Derive_BRIDGES_Arithmetic_Polynomials_Polynomial_System_Int32_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.Derive(BRIDGES.Arithmetic.Polynomials.Polynomial,System.Int32)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Derive(BRIDGES.Arithmetic.Polynomials.Polynomial, System.Int32)
  nameWithType: Polynomial.Derive(Polynomial, Int32)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Derive*
  name: Derive
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Derive_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.Derive
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Derive
  nameWithType: Polynomial.Derive
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Divide(BRIDGES.Arithmetic.Polynomials.Polynomial,System.Double)
  name: Divide(Polynomial, Double)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Divide_BRIDGES_Arithmetic_Polynomials_Polynomial_System_Double_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.Divide(BRIDGES.Arithmetic.Polynomials.Polynomial,System.Double)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Divide(BRIDGES.Arithmetic.Polynomials.Polynomial, System.Double)
  nameWithType: Polynomial.Divide(Polynomial, Double)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Divide*
  name: Divide
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Divide_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.Divide
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Divide
  nameWithType: Polynomial.Divide
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.EvaluateAt(System.Double)
  name: EvaluateAt(Double)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_EvaluateAt_System_Double_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.EvaluateAt(System.Double)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.EvaluateAt(System.Double)
  nameWithType: Polynomial.EvaluateAt(Double)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.EvaluateAt*
  name: EvaluateAt
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_EvaluateAt_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.EvaluateAt
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.EvaluateAt
  nameWithType: Polynomial.EvaluateAt
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.GetCoefficients
  name: GetCoefficients()
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_GetCoefficients
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.GetCoefficients
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.GetCoefficients()
  nameWithType: Polynomial.GetCoefficients()
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.GetCoefficients*
  name: GetCoefficients
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_GetCoefficients_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.GetCoefficients
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.GetCoefficients
  nameWithType: Polynomial.GetCoefficients
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Item_System_Int32_
  commentId: P:BRIDGES.Arithmetic.Polynomials.Polynomial.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Item[System.Int32]
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Polynomial.Item(System.Int32)
  nameWithType: Polynomial.Item[Int32]
  nameWithType.vb: Polynomial.Item(Int32)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Item*
  name: Item
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Item_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.Item
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Item
  nameWithType: Polynomial.Item
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: Multiply(Polynomial, Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Multiply_BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial, BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.Multiply(Polynomial, Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply(System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: Multiply(Double, Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Multiply_System_Double_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply(System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply(System.Double, BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.Multiply(Double, Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply*
  name: Multiply
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply
  nameWithType: Polynomial.Multiply
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.One
  name: One
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_One
  commentId: P:BRIDGES.Arithmetic.Polynomials.Polynomial.One
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.One
  nameWithType: Polynomial.One
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.One*
  name: One
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_One_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.One
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.One
  nameWithType: Polynomial.One
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_Addition(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: Addition(Polynomial, Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_Addition_BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.op_Addition(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Addition(BRIDGES.Arithmetic.Polynomials.Polynomial, BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.Addition(Polynomial, Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_Addition*
  name: Addition
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_Addition_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.op_Addition
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Addition
  nameWithType: Polynomial.Addition
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_Division(BRIDGES.Arithmetic.Polynomials.Polynomial,System.Double)
  name: Division(Polynomial, Double)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_Division_BRIDGES_Arithmetic_Polynomials_Polynomial_System_Double_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.op_Division(BRIDGES.Arithmetic.Polynomials.Polynomial,System.Double)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Division(BRIDGES.Arithmetic.Polynomials.Polynomial, System.Double)
  nameWithType: Polynomial.Division(Polynomial, Double)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_Division*
  name: Division
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_Division_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.op_Division
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Division
  nameWithType: Polynomial.Division
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: Multiply(Polynomial, Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_Multiply_BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.op_Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial, BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.Multiply(Polynomial, Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial,System.Double)
  name: Multiply(Polynomial, Double)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_Multiply_BRIDGES_Arithmetic_Polynomials_Polynomial_System_Double_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.op_Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial,System.Double)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply(BRIDGES.Arithmetic.Polynomials.Polynomial, System.Double)
  nameWithType: Polynomial.Multiply(Polynomial, Double)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_Multiply(System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: Multiply(Double, Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_Multiply_System_Double_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.op_Multiply(System.Double,BRIDGES.Arithmetic.Polynomials.Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply(System.Double, BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.Multiply(Double, Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_Multiply*
  name: Multiply
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_Multiply_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.op_Multiply
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Multiply
  nameWithType: Polynomial.Multiply
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_Subtraction(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: Subtraction(Polynomial, Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_Subtraction_BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.op_Subtraction(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Subtraction(BRIDGES.Arithmetic.Polynomials.Polynomial, BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.Subtraction(Polynomial, Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_Subtraction*
  name: Subtraction
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_Subtraction_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.op_Subtraction
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Subtraction
  nameWithType: Polynomial.Subtraction
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_UnaryNegation(BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: UnaryNegation(Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_UnaryNegation_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.op_UnaryNegation(BRIDGES.Arithmetic.Polynomials.Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.UnaryNegation(BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.UnaryNegation(Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.op_UnaryNegation*
  name: UnaryNegation
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_op_UnaryNegation_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.op_UnaryNegation
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.UnaryNegation
  nameWithType: Polynomial.UnaryNegation
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Subtract(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  name: Subtract(Polynomial, Polynomial)
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Subtract_BRIDGES_Arithmetic_Polynomials_Polynomial_BRIDGES_Arithmetic_Polynomials_Polynomial_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Polynomial.Subtract(BRIDGES.Arithmetic.Polynomials.Polynomial,BRIDGES.Arithmetic.Polynomials.Polynomial)
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Subtract(BRIDGES.Arithmetic.Polynomials.Polynomial, BRIDGES.Arithmetic.Polynomials.Polynomial)
  nameWithType: Polynomial.Subtract(Polynomial, Polynomial)
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Subtract*
  name: Subtract
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Subtract_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.Subtract
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Subtract
  nameWithType: Polynomial.Subtract
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Zero
  name: Zero
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Zero
  commentId: P:BRIDGES.Arithmetic.Polynomials.Polynomial.Zero
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Zero
  nameWithType: Polynomial.Zero
- uid: BRIDGES.Arithmetic.Polynomials.Polynomial.Zero*
  name: Zero
  href: api/BRIDGES.Arithmetic.Polynomials.Polynomial.html#BRIDGES_Arithmetic_Polynomials_Polynomial_Zero_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Polynomial.Zero
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Polynomial.Zero
  nameWithType: Polynomial.Zero
- uid: BRIDGES.Arithmetic.Polynomials.Specials
  name: BRIDGES.Arithmetic.Polynomials.Specials
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.html
  commentId: N:BRIDGES.Arithmetic.Polynomials.Specials
  fullName: BRIDGES.Arithmetic.Polynomials.Specials
  nameWithType: BRIDGES.Arithmetic.Polynomials.Specials
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein
  name: Bernstein
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html
  commentId: T:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein
  nameWithType: Bernstein
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.#ctor(System.Int32,System.Int32)
  name: Bernstein(Int32, Int32)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html#BRIDGES_Arithmetic_Polynomials_Specials_Bernstein__ctor_System_Int32_System_Int32_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.#ctor(System.Int32,System.Int32)
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.Bernstein(System.Int32, System.Int32)
  nameWithType: Bernstein.Bernstein(Int32, Int32)
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.#ctor*
  name: Bernstein
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html#BRIDGES_Arithmetic_Polynomials_Specials_Bernstein__ctor_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.#ctor
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.Bernstein
  nameWithType: Bernstein.Bernstein
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateAt(System.Double,System.Int32,System.Int32)
  name: EvaluateAt(Double, Int32, Int32)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html#BRIDGES_Arithmetic_Polynomials_Specials_Bernstein_EvaluateAt_System_Double_System_Int32_System_Int32_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateAt(System.Double,System.Int32,System.Int32)
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateAt(System.Double, System.Int32, System.Int32)
  nameWithType: Bernstein.EvaluateAt(Double, Int32, Int32)
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateAt*
  name: EvaluateAt
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html#BRIDGES_Arithmetic_Polynomials_Specials_Bernstein_EvaluateAt_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateAt
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateAt
  nameWithType: Bernstein.EvaluateAt
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateBasisAt(System.Double,System.Int32)
  name: EvaluateBasisAt(Double, Int32)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html#BRIDGES_Arithmetic_Polynomials_Specials_Bernstein_EvaluateBasisAt_System_Double_System_Int32_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateBasisAt(System.Double,System.Int32)
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateBasisAt(System.Double, System.Int32)
  nameWithType: Bernstein.EvaluateBasisAt(Double, Int32)
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateBasisAt*
  name: EvaluateBasisAt
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html#BRIDGES_Arithmetic_Polynomials_Specials_Bernstein_EvaluateBasisAt_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateBasisAt
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.EvaluateBasisAt
  nameWithType: Bernstein.EvaluateBasisAt
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.Index
  name: Index
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html#BRIDGES_Arithmetic_Polynomials_Specials_Bernstein_Index
  commentId: P:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.Index
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.Index
  nameWithType: Bernstein.Index
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.Index*
  name: Index
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html#BRIDGES_Arithmetic_Polynomials_Specials_Bernstein_Index_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.Index
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.Index
  nameWithType: Bernstein.Index
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.ToBSpline
  name: ToBSpline()
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html#BRIDGES_Arithmetic_Polynomials_Specials_Bernstein_ToBSpline
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.ToBSpline
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.ToBSpline()
  nameWithType: Bernstein.ToBSpline()
- uid: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.ToBSpline*
  name: ToBSpline
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.html#BRIDGES_Arithmetic_Polynomials_Specials_Bernstein_ToBSpline_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.ToBSpline
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.Bernstein.ToBSpline
  nameWithType: Bernstein.ToBSpline
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline
  name: BSpline
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html
  commentId: T:BRIDGES.Arithmetic.Polynomials.Specials.BSpline
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline
  nameWithType: BSpline
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.#ctor(System.Int32,System.Int32,System.Int32,IEnumerable{System.Double})
  name: BSpline(Int32, Int32, Int32, IEnumerable<Double>)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline__ctor_System_Int32_System_Int32_System_Int32_IEnumerable_System_Double__
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.#ctor(System.Int32,System.Int32,System.Int32,IEnumerable{System.Double})
  name.vb: BSpline(Int32, Int32, Int32, IEnumerable(Of Double))
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.BSpline(System.Int32, System.Int32, System.Int32, IEnumerable<System.Double>)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.BSpline(System.Int32, System.Int32, System.Int32, IEnumerable(Of System.Double))
  nameWithType: BSpline.BSpline(Int32, Int32, Int32, IEnumerable<Double>)
  nameWithType.vb: BSpline.BSpline(Int32, Int32, Int32, IEnumerable(Of Double))
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.#ctor*
  name: BSpline
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline__ctor_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.#ctor
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.BSpline
  nameWithType: BSpline.BSpline
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline._knotVector
  name: _knotVector
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline__knotVector
  commentId: F:BRIDGES.Arithmetic.Polynomials.Specials.BSpline._knotVector
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline._knotVector
  nameWithType: BSpline._knotVector
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateAt(System.Double)
  name: EvaluateAt(Double)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_EvaluateAt_System_Double_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateAt(System.Double)
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateAt(System.Double)
  nameWithType: BSpline.EvaluateAt(Double)
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateAt(System.Double,System.Int32,System.Int32,IList{System.Double})
  name: EvaluateAt(Double, Int32, Int32, IList<Double>)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_EvaluateAt_System_Double_System_Int32_System_Int32_IList_System_Double__
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateAt(System.Double,System.Int32,System.Int32,IList{System.Double})
  name.vb: EvaluateAt(Double, Int32, Int32, IList(Of Double))
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateAt(System.Double, System.Int32, System.Int32, IList<System.Double>)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateAt(System.Double, System.Int32, System.Int32, IList(Of System.Double))
  nameWithType: BSpline.EvaluateAt(Double, Int32, Int32, IList<Double>)
  nameWithType.vb: BSpline.EvaluateAt(Double, Int32, Int32, IList(Of Double))
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateAt*
  name: EvaluateAt
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_EvaluateAt_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateAt
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateAt
  nameWithType: BSpline.EvaluateAt
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisAt(System.Double,System.Int32,System.Int32,IList{System.Double})
  name: EvaluateBasisAt(Double, Int32, Int32, IList<Double>)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_EvaluateBasisAt_System_Double_System_Int32_System_Int32_IList_System_Double__
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisAt(System.Double,System.Int32,System.Int32,IList{System.Double})
  name.vb: EvaluateBasisAt(Double, Int32, Int32, IList(Of Double))
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisAt(System.Double, System.Int32, System.Int32, IList<System.Double>)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisAt(System.Double, System.Int32, System.Int32, IList(Of System.Double))
  nameWithType: BSpline.EvaluateBasisAt(Double, Int32, Int32, IList<Double>)
  nameWithType.vb: BSpline.EvaluateBasisAt(Double, Int32, Int32, IList(Of Double))
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisAt*
  name: EvaluateBasisAt
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_EvaluateBasisAt_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisAt
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisAt
  nameWithType: BSpline.EvaluateBasisAt
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisDerivativesAt(System.Double,System.Int32,System.Int32,IList{System.Double},System.Int32)
  name: EvaluateBasisDerivativesAt(Double, Int32, Int32, IList<Double>, Int32)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_EvaluateBasisDerivativesAt_System_Double_System_Int32_System_Int32_IList_System_Double__System_Int32_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisDerivativesAt(System.Double,System.Int32,System.Int32,IList{System.Double},System.Int32)
  name.vb: EvaluateBasisDerivativesAt(Double, Int32, Int32, IList(Of Double), Int32)
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisDerivativesAt(System.Double, System.Int32, System.Int32, IList<System.Double>, System.Int32)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisDerivativesAt(System.Double, System.Int32, System.Int32, IList(Of System.Double), System.Int32)
  nameWithType: BSpline.EvaluateBasisDerivativesAt(Double, Int32, Int32, IList<Double>, Int32)
  nameWithType.vb: BSpline.EvaluateBasisDerivativesAt(Double, Int32, Int32, IList(Of Double), Int32)
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisDerivativesAt*
  name: EvaluateBasisDerivativesAt
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_EvaluateBasisDerivativesAt_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisDerivativesAt
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateBasisDerivativesAt
  nameWithType: BSpline.EvaluateBasisDerivativesAt
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateDerivativesAt(System.Double,System.Int32,System.Int32,IList{System.Double},System.Int32)
  name: EvaluateDerivativesAt(Double, Int32, Int32, IList<Double>, Int32)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_EvaluateDerivativesAt_System_Double_System_Int32_System_Int32_IList_System_Double__System_Int32_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateDerivativesAt(System.Double,System.Int32,System.Int32,IList{System.Double},System.Int32)
  name.vb: EvaluateDerivativesAt(Double, Int32, Int32, IList(Of Double), Int32)
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateDerivativesAt(System.Double, System.Int32, System.Int32, IList<System.Double>, System.Int32)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateDerivativesAt(System.Double, System.Int32, System.Int32, IList(Of System.Double), System.Int32)
  nameWithType: BSpline.EvaluateDerivativesAt(Double, Int32, Int32, IList<Double>, Int32)
  nameWithType.vb: BSpline.EvaluateDerivativesAt(Double, Int32, Int32, IList(Of Double), Int32)
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateDerivativesAt*
  name: EvaluateDerivativesAt
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_EvaluateDerivativesAt_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateDerivativesAt
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.EvaluateDerivativesAt
  nameWithType: BSpline.EvaluateDerivativesAt
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.FindKnotSpanIndex(System.Double,System.Int32,IList{System.Double})
  name: FindKnotSpanIndex(Double, Int32, IList<Double>)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_FindKnotSpanIndex_System_Double_System_Int32_IList_System_Double__
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.FindKnotSpanIndex(System.Double,System.Int32,IList{System.Double})
  name.vb: FindKnotSpanIndex(Double, Int32, IList(Of Double))
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.FindKnotSpanIndex(System.Double, System.Int32, IList<System.Double>)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.FindKnotSpanIndex(System.Double, System.Int32, IList(Of System.Double))
  nameWithType: BSpline.FindKnotSpanIndex(Double, Int32, IList<Double>)
  nameWithType.vb: BSpline.FindKnotSpanIndex(Double, Int32, IList(Of Double))
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.FindKnotSpanIndex*
  name: FindKnotSpanIndex
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_FindKnotSpanIndex_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.FindKnotSpanIndex
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.FindKnotSpanIndex
  nameWithType: BSpline.FindKnotSpanIndex
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.Index
  name: Index
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_Index
  commentId: P:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.Index
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.Index
  nameWithType: BSpline.Index
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.Index*
  name: Index
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_Index_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.Index
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.Index
  nameWithType: BSpline.Index
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.KnotVector
  name: KnotVector
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_KnotVector
  commentId: P:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.KnotVector
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.KnotVector
  nameWithType: BSpline.KnotVector
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.KnotVector*
  name: KnotVector
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_KnotVector_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.KnotVector
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.KnotVector
  nameWithType: BSpline.KnotVector
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetCoefficients(System.Int32,System.Int32,System.Int32,IList{System.Double})
  name: SetCoefficients(Int32, Int32, Int32, IList<Double>)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_SetCoefficients_System_Int32_System_Int32_System_Int32_IList_System_Double__
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetCoefficients(System.Int32,System.Int32,System.Int32,IList{System.Double})
  name.vb: SetCoefficients(Int32, Int32, Int32, IList(Of Double))
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetCoefficients(System.Int32, System.Int32, System.Int32, IList<System.Double>)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetCoefficients(System.Int32, System.Int32, System.Int32, IList(Of System.Double))
  nameWithType: BSpline.SetCoefficients(Int32, Int32, Int32, IList<Double>)
  nameWithType.vb: BSpline.SetCoefficients(Int32, Int32, Int32, IList(Of Double))
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetCoefficients*
  name: SetCoefficients
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_SetCoefficients_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetCoefficients
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetCoefficients
  nameWithType: BSpline.SetCoefficients
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetKnotVector(IEnumerable{System.Double},System.Int32)
  name: SetKnotVector(IEnumerable<Double>, Int32)
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_SetKnotVector_IEnumerable_System_Double__System_Int32_
  commentId: M:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetKnotVector(IEnumerable{System.Double},System.Int32)
  name.vb: SetKnotVector(IEnumerable(Of Double), Int32)
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetKnotVector(IEnumerable<System.Double>, System.Int32)
  fullName.vb: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetKnotVector(IEnumerable(Of System.Double), System.Int32)
  nameWithType: BSpline.SetKnotVector(IEnumerable<Double>, Int32)
  nameWithType.vb: BSpline.SetKnotVector(IEnumerable(Of Double), Int32)
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetKnotVector*
  name: SetKnotVector
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_SetKnotVector_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetKnotVector
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SetKnotVector
  nameWithType: BSpline.SetKnotVector
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SpanIndex
  name: SpanIndex
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_SpanIndex
  commentId: P:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SpanIndex
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SpanIndex
  nameWithType: BSpline.SpanIndex
- uid: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SpanIndex*
  name: SpanIndex
  href: api/BRIDGES.Arithmetic.Polynomials.Specials.BSpline.html#BRIDGES_Arithmetic_Polynomials_Specials_BSpline_SpanIndex_
  commentId: Overload:BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SpanIndex
  isSpec: "True"
  fullName: BRIDGES.Arithmetic.Polynomials.Specials.BSpline.SpanIndex
  nameWithType: BSpline.SpanIndex
- uid: BRIDGES.DataStructures.PolyhedralMeshes
  name: BRIDGES.DataStructures.PolyhedralMeshes
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.html
  commentId: N:BRIDGES.DataStructures.PolyhedralMeshes
  fullName: BRIDGES.DataStructures.PolyhedralMeshes
  nameWithType: BRIDGES.DataStructures.PolyhedralMeshes
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract
  name: BRIDGES.DataStructures.PolyhedralMeshes.Abstract
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.html
  commentId: N:BRIDGES.DataStructures.PolyhedralMeshes.Abstract
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract
  nameWithType: BRIDGES.DataStructures.PolyhedralMeshes.Abstract
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4
  name: Edge<TPosition, TVertex, TEdge, TFace>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4
  name.vb: Edge(Of TPosition, TVertex, TEdge, TFace)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace)
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces()
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.AdjacentFaces()
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.AdjacentFaces
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#AdjacentFaces
  name: IEdge<TPosition>.AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_BRIDGES_DataStructures_PolyhedralMeshes_IEdge_TPosition__AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#AdjacentFaces
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.AdjacentFaces()
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.AdjacentFaces()
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.IEdge<TPosition>.AdjacentFaces()
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#AdjacentFaces*
  name: IEdge<TPosition>.AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_BRIDGES_DataStructures_PolyhedralMeshes_IEdge_TPosition__AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#AdjacentFaces
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.AdjacentFaces
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.IEdge<TPosition>.AdjacentFaces
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#EndVertex
  name: IEdge<TPosition>.EndVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_BRIDGES_DataStructures_PolyhedralMeshes_IEdge_TPosition__EndVertex
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#EndVertex
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.EndVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.EndVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.EndVertex
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.IEdge<TPosition>.EndVertex
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.EndVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#EndVertex*
  name: IEdge<TPosition>.EndVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_BRIDGES_DataStructures_PolyhedralMeshes_IEdge_TPosition__EndVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#EndVertex
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.EndVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.EndVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.EndVertex
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.IEdge<TPosition>.EndVertex
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.EndVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#StartVertex
  name: IEdge<TPosition>.StartVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_BRIDGES_DataStructures_PolyhedralMeshes_IEdge_TPosition__StartVertex
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#StartVertex
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.StartVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.StartVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.StartVertex
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.IEdge<TPosition>.StartVertex
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.StartVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#StartVertex*
  name: IEdge<TPosition>.StartVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_BRIDGES_DataStructures_PolyhedralMeshes_IEdge_TPosition__StartVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.BRIDGES#DataStructures#PolyhedralMeshes#IEdge{TPosition}#StartVertex
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.StartVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.StartVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.StartVertex
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.IEdge<TPosition>.StartVertex
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.StartVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.EndVertex
  name: EndVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_EndVertex
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.EndVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.EndVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).EndVertex
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.EndVertex
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).EndVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.EndVertex*
  name: EndVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_EndVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.EndVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.EndVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).EndVertex
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.EndVertex
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).EndVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.Equals(`2)
  name: Equals(TEdge)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_Equals__2_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.Equals(`2)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.Equals(TEdge)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).Equals(TEdge)
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.Equals(TEdge)
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).Equals(TEdge)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).Equals(System.Object)
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.Equals(Object)
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).Equals
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.Equals
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).GetHashCode()
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.GetHashCode()
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).GetHashCode
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.GetHashCode
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.Index
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_Index
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.Index
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).Index
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.Index
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.Index*
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_Index_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.Index
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).Index
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.Index
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.IsBoundary
  name: IsBoundary()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_IsBoundary
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.IsBoundary
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.IsBoundary()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).IsBoundary()
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.IsBoundary()
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).IsBoundary()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.IsBoundary*
  name: IsBoundary
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_IsBoundary_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.IsBoundary
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.IsBoundary
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).IsBoundary
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.IsBoundary
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).IsBoundary
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.StartVertex
  name: StartVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_StartVertex
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.StartVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.StartVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).StartVertex
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.StartVertex
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).StartVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.StartVertex*
  name: StartVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_StartVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.StartVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.StartVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).StartVertex
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.StartVertex
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).StartVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).ToString()
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.ToString()
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Edge_4_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge`4.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge<TPosition, TVertex, TEdge, TFace>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Edge(Of TPosition, TVertex, TEdge, TFace).ToString
  nameWithType: Edge<TPosition, TVertex, TEdge, TFace>.ToString
  nameWithType.vb: Edge(Of TPosition, TVertex, TEdge, TFace).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4
  name: Face<TPosition, TVertex, TEdge, TFace>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4
  name.vb: Face(Of TPosition, TVertex, TEdge, TFace)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace)
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces()
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.AdjacentFaces()
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.AdjacentFaces
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#AdjacentFaces
  name: IFace<TPosition>.AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_BRIDGES_DataStructures_PolyhedralMeshes_IFace_TPosition__AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#AdjacentFaces
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.AdjacentFaces()
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.AdjacentFaces()
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.IFace<TPosition>.AdjacentFaces()
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#AdjacentFaces*
  name: IFace<TPosition>.AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_BRIDGES_DataStructures_PolyhedralMeshes_IFace_TPosition__AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#AdjacentFaces
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.AdjacentFaces
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.IFace<TPosition>.AdjacentFaces
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#FaceEdges
  name: IFace<TPosition>.FaceEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_BRIDGES_DataStructures_PolyhedralMeshes_IFace_TPosition__FaceEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#FaceEdges
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceEdges()
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceEdges()
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.IFace<TPosition>.FaceEdges()
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#FaceEdges*
  name: IFace<TPosition>.FaceEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_BRIDGES_DataStructures_PolyhedralMeshes_IFace_TPosition__FaceEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#FaceEdges
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceEdges
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.IFace<TPosition>.FaceEdges
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#FaceVertices
  name: IFace<TPosition>.FaceVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_BRIDGES_DataStructures_PolyhedralMeshes_IFace_TPosition__FaceVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#FaceVertices
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceVertices()
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceVertices()
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.IFace<TPosition>.FaceVertices()
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#FaceVertices*
  name: IFace<TPosition>.FaceVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_BRIDGES_DataStructures_PolyhedralMeshes_IFace_TPosition__FaceVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.BRIDGES#DataStructures#PolyhedralMeshes#IFace{TPosition}#FaceVertices
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceVertices
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.IFace<TPosition>.FaceVertices
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.Equals(`3)
  name: Equals(TFace)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_Equals__3_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.Equals(`3)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.Equals(TFace)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).Equals(TFace)
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.Equals(TFace)
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).Equals(TFace)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).Equals(System.Object)
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.Equals(Object)
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).Equals
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.Equals
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.FaceEdges
  name: FaceEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_FaceEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.FaceEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.FaceEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).FaceEdges()
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.FaceEdges()
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).FaceEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.FaceEdges*
  name: FaceEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_FaceEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.FaceEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.FaceEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).FaceEdges
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.FaceEdges
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).FaceEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.FaceVertices
  name: FaceVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_FaceVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.FaceVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.FaceVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).FaceVertices()
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.FaceVertices()
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).FaceVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.FaceVertices*
  name: FaceVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_FaceVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.FaceVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.FaceVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).FaceVertices
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.FaceVertices
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).FaceVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).GetHashCode()
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.GetHashCode()
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).GetHashCode
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.GetHashCode
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.Index
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_Index
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.Index
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).Index
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.Index
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.Index*
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_Index_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.Index
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).Index
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.Index
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).ToString()
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.ToString()
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Face_4_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face`4.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face<TPosition, TVertex, TEdge, TFace>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Face(Of TPosition, TVertex, TEdge, TFace).ToString
  nameWithType: Face<TPosition, TVertex, TEdge, TFace>.ToString
  nameWithType.vb: Face(Of TPosition, TVertex, TEdge, TFace).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4
  name: Mesh<TPosition, TVertex, TEdge, TFace>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4
  name.vb: Mesh(Of TPosition, TVertex, TEdge, TFace)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.#ctor
  name: Mesh()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4__ctor
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.#ctor
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.Mesh()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).Mesh()
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.Mesh()
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).Mesh()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.#ctor*
  name: Mesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4__ctor_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.#ctor
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.Mesh
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).Mesh
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.Mesh
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).Mesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddEdge(System.Int32,System.Int32)
  name: AddEdge(Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddEdge_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddEdge(System.Int32,System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddEdge(System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddEdge(System.Int32, System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddEdge(Int32, Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddEdge(Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddEdge*
  name: AddEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddEdge
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddEdge
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(`1,`1,`1)
  name: AddFace(TVertex, TVertex, TVertex)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddFace__1__1__1_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(`1,`1,`1)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(TVertex, TVertex, TVertex)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(TVertex, TVertex, TVertex)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(TVertex, TVertex, TVertex)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(TVertex, TVertex, TVertex)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(`1,`1,`1,`1)
  name: AddFace(TVertex, TVertex, TVertex, TVertex)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddFace__1__1__1__1_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(`1,`1,`1,`1)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(TVertex, TVertex, TVertex, TVertex)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(TVertex, TVertex, TVertex, TVertex)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(TVertex, TVertex, TVertex, TVertex)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(TVertex, TVertex, TVertex, TVertex)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(List{`1})
  name: AddFace(List<TVertex>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddFace_List__1__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(List{`1})
  name.vb: AddFace(List(Of TVertex))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(List<TVertex>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(List(Of TVertex))
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(List<TVertex>)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(List(Of TVertex))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(List{System.Int32})
  name: AddFace(List<Int32>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddFace_List_System_Int32__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(List{System.Int32})
  name.vb: AddFace(List(Of Int32))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(List<System.Int32>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(List(Of System.Int32))
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(List<Int32>)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(List(Of Int32))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(System.Int32,System.Int32,System.Int32)
  name: AddFace(Int32, Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddFace_System_Int32_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(System.Int32,System.Int32,System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(System.Int32, System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(System.Int32, System.Int32, System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(Int32, Int32, Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(Int32, Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(System.Int32,System.Int32,System.Int32,System.Int32)
  name: AddFace(Int32, Int32, Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddFace_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(System.Int32, System.Int32, System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddFace(Int32, Int32, Int32, Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace(Int32, Int32, Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace*
  name: AddFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddFace
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddVertex(`0)
  name: AddVertex(TPosition)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddVertex__0_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddVertex(`0)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddVertex(TPosition)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddVertex(TPosition)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddVertex(TPosition)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddVertex(TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddVertex*
  name: AddVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_AddVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.AddVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.AddVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).AddVertex
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.AddVertex
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).AddVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddEdge(System.Int32,System.Int32)
  name: IMesh<TPosition>.AddEdge(Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__AddEdge_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddEdge(System.Int32,System.Int32)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddEdge(Int32, Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddEdge(System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddEdge(System.Int32, System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.AddEdge(Int32, Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddEdge(Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddEdge*
  name: IMesh<TPosition>.AddEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__AddEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddEdge
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddEdge
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddEdge
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.AddEdge
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddFace(List{System.Int32})
  name: IMesh<TPosition>.AddFace(List<Int32>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__AddFace_List_System_Int32__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddFace(List{System.Int32})
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(List(Of Int32))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(List<System.Int32>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(List(Of System.Int32))
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.AddFace(List<Int32>)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(List(Of Int32))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddFace(System.Int32,System.Int32,System.Int32)
  name: IMesh<TPosition>.AddFace(Int32, Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__AddFace_System_Int32_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddFace(System.Int32,System.Int32,System.Int32)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(Int32, Int32, Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(System.Int32, System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(System.Int32, System.Int32, System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.AddFace(Int32, Int32, Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(Int32, Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddFace(System.Int32,System.Int32,System.Int32,System.Int32)
  name: IMesh<TPosition>.AddFace(Int32, Int32, Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__AddFace_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddFace(System.Int32,System.Int32,System.Int32,System.Int32)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(Int32, Int32, Int32, Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(System.Int32, System.Int32, System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.AddFace(Int32, Int32, Int32, Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(Int32, Int32, Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddFace*
  name: IMesh<TPosition>.AddFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__AddFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddFace
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.AddFace
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddVertex(`0)
  name: IMesh<TPosition>.AddVertex(TPosition)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__AddVertex__0_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddVertex(`0)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddVertex(TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddVertex(TPosition)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddVertex(TPosition)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.AddVertex(TPosition)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddVertex(TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddVertex*
  name: IMesh<TPosition>.AddVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__AddVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#AddVertex
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddVertex
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.AddVertex
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#EdgeBetween(System.Int32,System.Int32)
  name: IMesh<TPosition>.EdgeBetween(Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__EdgeBetween_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#EdgeBetween(System.Int32,System.Int32)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeBetween(Int32, Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeBetween(System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeBetween(System.Int32, System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.EdgeBetween(Int32, Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeBetween(Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#EdgeBetween*
  name: IMesh<TPosition>.EdgeBetween
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__EdgeBetween_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#EdgeBetween
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeBetween
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeBetween
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeBetween
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.EdgeBetween
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeBetween
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetEdge(System.Int32)
  name: IMesh<TPosition>.GetEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetEdge(System.Int32)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdge(Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdge(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetEdge(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetEdge*
  name: IMesh<TPosition>.GetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetEdge
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdge
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdge
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetEdge
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetEdges
  name: IMesh<TPosition>.GetEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetEdges
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdges()
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdges()
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetEdges()
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetEdges*
  name: IMesh<TPosition>.GetEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetEdges
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdges
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetEdges
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetFace(System.Int32)
  name: IMesh<TPosition>.GetFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetFace(System.Int32)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFace(Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFace(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetFace(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetFace*
  name: IMesh<TPosition>.GetFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetFace
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFace
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFace
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetFace
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetFaces
  name: IMesh<TPosition>.GetFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetFaces
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFaces()
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFaces()
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetFaces()
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetFaces*
  name: IMesh<TPosition>.GetFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetFaces
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFaces
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetFaces
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetVertex(System.Int32)
  name: IMesh<TPosition>.GetVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetVertex(System.Int32)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertex(Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertex(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetVertex(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetVertex*
  name: IMesh<TPosition>.GetVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetVertex
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertex
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetVertex
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetVertices
  name: IMesh<TPosition>.GetVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetVertices
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertices()
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertices()
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetVertices()
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetVertices*
  name: IMesh<TPosition>.GetVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__GetVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#GetVertices
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertices
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.GetVertices
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetEdge(System.Int32)
  name: IMesh<TPosition>.TryGetEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__TryGetEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetEdge(System.Int32)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetEdge(Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetEdge(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.TryGetEdge(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetEdge*
  name: IMesh<TPosition>.TryGetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__TryGetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetEdge
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetEdge
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetEdge
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.TryGetEdge
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetFace(System.Int32)
  name: IMesh<TPosition>.TryGetFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__TryGetFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetFace(System.Int32)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetFace(Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetFace(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.TryGetFace(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetFace*
  name: IMesh<TPosition>.TryGetFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__TryGetFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetFace
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetFace
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetFace
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.TryGetFace
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetVertex(System.Int32)
  name: IMesh<TPosition>.TryGetVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__TryGetVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetVertex(System.Int32)
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetVertex(Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetVertex(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.TryGetVertex(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetVertex*
  name: IMesh<TPosition>.TryGetVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_BRIDGES_DataStructures_PolyhedralMeshes_IMesh_TPosition__TryGetVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.BRIDGES#DataStructures#PolyhedralMeshes#IMesh{TPosition}#TryGetVertex
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetVertex
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.IMesh<TPosition>.TryGetVertex
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.CleanMesh(System.Boolean)
  name: CleanMesh(Boolean)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_CleanMesh_System_Boolean_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.CleanMesh(System.Boolean)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.CleanMesh(System.Boolean)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).CleanMesh(System.Boolean)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.CleanMesh(Boolean)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).CleanMesh(Boolean)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.CleanMesh*
  name: CleanMesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_CleanMesh_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.CleanMesh
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.CleanMesh
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).CleanMesh
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.CleanMesh
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).CleanMesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.Clone
  name: Clone()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_Clone
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.Clone
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.Clone()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).Clone()
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.Clone()
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).Clone()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.Clone*
  name: Clone
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_Clone_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.Clone
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.Clone
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).Clone
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.Clone
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).Clone
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EdgeBetween(`1,`1)
  name: EdgeBetween(TVertex, TVertex)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EdgeBetween__1__1_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EdgeBetween(`1,`1)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EdgeBetween(TVertex, TVertex)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EdgeBetween(TVertex, TVertex)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EdgeBetween(TVertex, TVertex)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EdgeBetween(TVertex, TVertex)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EdgeBetween(System.Int32,System.Int32)
  name: EdgeBetween(Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EdgeBetween_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EdgeBetween(System.Int32,System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EdgeBetween(System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EdgeBetween(System.Int32, System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EdgeBetween(Int32, Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EdgeBetween(Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EdgeBetween*
  name: EdgeBetween
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EdgeBetween_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EdgeBetween
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EdgeBetween
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EdgeBetween
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EdgeBetween
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EdgeBetween
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EdgeCount
  name: EdgeCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EdgeCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EdgeCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EdgeCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EdgeCount
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EdgeCount
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EdgeCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EdgeCount*
  name: EdgeCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EdgeCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EdgeCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EdgeCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EdgeCount
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EdgeCount
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EdgeCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).Equals(System.Object)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.Equals(Object)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).Equals
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.Equals
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseEdge(`2)
  name: EraseEdge(TEdge)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EraseEdge__2_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseEdge(`2)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EraseEdge(TEdge)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EraseEdge(TEdge)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EraseEdge(TEdge)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EraseEdge(TEdge)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseEdge(System.Int32)
  name: EraseEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EraseEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EraseEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EraseEdge(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EraseEdge(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EraseEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseEdge*
  name: EraseEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EraseEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EraseEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EraseEdge
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EraseEdge
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EraseEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseFace(`3)
  name: EraseFace(TFace)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EraseFace__3_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseFace(`3)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EraseFace(TFace)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EraseFace(TFace)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EraseFace(TFace)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EraseFace(TFace)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseFace(System.Int32)
  name: EraseFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EraseFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EraseFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EraseFace(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EraseFace(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EraseFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseFace*
  name: EraseFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EraseFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EraseFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EraseFace
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EraseFace
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EraseFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseVertex(`1)
  name: EraseVertex(TVertex)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EraseVertex__1_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseVertex(`1)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EraseVertex(TVertex)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EraseVertex(TVertex)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EraseVertex(TVertex)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EraseVertex(TVertex)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseVertex(System.Int32)
  name: EraseVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EraseVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EraseVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EraseVertex(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EraseVertex(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EraseVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseVertex*
  name: EraseVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_EraseVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.EraseVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.EraseVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).EraseVertex
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.EraseVertex
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).EraseVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.FaceCount
  name: FaceCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_FaceCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.FaceCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.FaceCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).FaceCount
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.FaceCount
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).FaceCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.FaceCount*
  name: FaceCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_FaceCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.FaceCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.FaceCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).FaceCount
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.FaceCount
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).FaceCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetEdge(System.Int32)
  name: GetEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetEdge(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetEdge(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetEdge*
  name: GetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetEdge
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetEdge
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetEdges
  name: GetEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetEdges()
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetEdges()
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetEdges*
  name: GetEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetEdges
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetEdges
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetFace(System.Int32)
  name: GetFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetFace(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetFace(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetFace*
  name: GetFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetFace
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetFace
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetFaces
  name: GetFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetFaces()
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetFaces()
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetFaces*
  name: GetFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetFaces
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetFaces
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetHashCode()
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetHashCode()
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetHashCode
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetHashCode
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetVertex(System.Int32)
  name: GetVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetVertex(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetVertex(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetVertex*
  name: GetVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetVertex
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetVertex
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetVertices
  name: GetVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetVertices()
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetVertices()
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetVertices*
  name: GetVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_GetVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.GetVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.GetVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).GetVertices
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.GetVertices
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).GetVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveEdge(`2)
  name: RemoveEdge(TEdge)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_RemoveEdge__2_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveEdge(`2)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.RemoveEdge(TEdge)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveEdge(TEdge)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.RemoveEdge(TEdge)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveEdge(TEdge)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveEdge(System.Int32)
  name: RemoveEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_RemoveEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.RemoveEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveEdge(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.RemoveEdge(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveEdge*
  name: RemoveEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_RemoveEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.RemoveEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveEdge
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.RemoveEdge
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveFace(`3)
  name: RemoveFace(TFace)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_RemoveFace__3_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveFace(`3)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.RemoveFace(TFace)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveFace(TFace)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.RemoveFace(TFace)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveFace(TFace)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveFace(System.Int32)
  name: RemoveFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_RemoveFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.RemoveFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveFace(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.RemoveFace(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveFace*
  name: RemoveFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_RemoveFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.RemoveFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveFace
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.RemoveFace
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveVertex(`1)
  name: RemoveVertex(TVertex)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_RemoveVertex__1_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveVertex(`1)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.RemoveVertex(TVertex)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveVertex(TVertex)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.RemoveVertex(TVertex)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveVertex(TVertex)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveVertex(System.Int32)
  name: RemoveVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_RemoveVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.RemoveVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveVertex(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.RemoveVertex(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveVertex*
  name: RemoveVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_RemoveVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.RemoveVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.RemoveVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveVertex
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.RemoveVertex
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).RemoveVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).ToString()
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.ToString()
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).ToString
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.ToString
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetEdge(System.Int32)
  name: TryGetEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_TryGetEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.TryGetEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetEdge(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.TryGetEdge(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetEdge*
  name: TryGetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_TryGetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.TryGetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetEdge
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.TryGetEdge
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetFace(System.Int32)
  name: TryGetFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_TryGetFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.TryGetFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetFace(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.TryGetFace(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetFace*
  name: TryGetFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_TryGetFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.TryGetFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetFace
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.TryGetFace
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetVertex(System.Int32)
  name: TryGetVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_TryGetVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.TryGetVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetVertex(System.Int32)
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.TryGetVertex(Int32)
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetVertex*
  name: TryGetVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_TryGetVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.TryGetVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.TryGetVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetVertex
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.TryGetVertex
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).TryGetVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.VertexCount
  name: VertexCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_VertexCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.VertexCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.VertexCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).VertexCount
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.VertexCount
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).VertexCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.VertexCount*
  name: VertexCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Mesh_4_VertexCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh`4.VertexCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh<TPosition, TVertex, TEdge, TFace>.VertexCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Mesh(Of TPosition, TVertex, TEdge, TFace).VertexCount
  nameWithType: Mesh<TPosition, TVertex, TEdge, TFace>.VertexCount
  nameWithType.vb: Mesh(Of TPosition, TVertex, TEdge, TFace).VertexCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4
  name: Vertex<TPosition, TVertex, TEdge, TFace>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4
  name.vb: Vertex(Of TPosition, TVertex, TEdge, TFace)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace)
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.AdjacentFaces()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.AdjacentFaces
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#AdjacentFaces
  name: IVertex<TPosition>.AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_BRIDGES_DataStructures_PolyhedralMeshes_IVertex_TPosition__AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#AdjacentFaces
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.AdjacentFaces()
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.AdjacentFaces()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.IVertex<TPosition>.AdjacentFaces()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#AdjacentFaces*
  name: IVertex<TPosition>.AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_BRIDGES_DataStructures_PolyhedralMeshes_IVertex_TPosition__AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#AdjacentFaces
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.AdjacentFaces
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.IVertex<TPosition>.AdjacentFaces
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#ConnectedEdges
  name: IVertex<TPosition>.ConnectedEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_BRIDGES_DataStructures_PolyhedralMeshes_IVertex_TPosition__ConnectedEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#ConnectedEdges
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.ConnectedEdges()
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.ConnectedEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.ConnectedEdges()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.IVertex<TPosition>.ConnectedEdges()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.ConnectedEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#ConnectedEdges*
  name: IVertex<TPosition>.ConnectedEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_BRIDGES_DataStructures_PolyhedralMeshes_IVertex_TPosition__ConnectedEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#ConnectedEdges
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.ConnectedEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.ConnectedEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.ConnectedEdges
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.IVertex<TPosition>.ConnectedEdges
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.ConnectedEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#NeighbourVertices
  name: IVertex<TPosition>.NeighbourVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_BRIDGES_DataStructures_PolyhedralMeshes_IVertex_TPosition__NeighbourVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#NeighbourVertices
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.NeighbourVertices()
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.NeighbourVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.NeighbourVertices()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.IVertex<TPosition>.NeighbourVertices()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.NeighbourVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#NeighbourVertices*
  name: IVertex<TPosition>.NeighbourVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_BRIDGES_DataStructures_PolyhedralMeshes_IVertex_TPosition__NeighbourVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.BRIDGES#DataStructures#PolyhedralMeshes#IVertex{TPosition}#NeighbourVertices
  isSpec: "True"
  name.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.NeighbourVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.NeighbourVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.NeighbourVertices
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.IVertex<TPosition>.NeighbourVertices
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.NeighbourVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.ConnectedEdges
  name: ConnectedEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_ConnectedEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.ConnectedEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.ConnectedEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).ConnectedEdges()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.ConnectedEdges()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).ConnectedEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.ConnectedEdges*
  name: ConnectedEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_ConnectedEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.ConnectedEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.ConnectedEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).ConnectedEdges
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.ConnectedEdges
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).ConnectedEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Equals(`1)
  name: Equals(TVertex)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_Equals__1_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Equals(`1)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.Equals(TVertex)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).Equals(TVertex)
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.Equals(TVertex)
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).Equals(TVertex)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).Equals(System.Object)
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.Equals(Object)
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).Equals
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.Equals
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).GetHashCode()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.GetHashCode()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).GetHashCode
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.GetHashCode
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Index
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_Index
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Index
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).Index
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.Index
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Index*
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_Index_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Index
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).Index
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.Index
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.IsBoundary
  name: IsBoundary()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_IsBoundary
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.IsBoundary
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.IsBoundary()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).IsBoundary()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.IsBoundary()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).IsBoundary()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.IsBoundary*
  name: IsBoundary
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_IsBoundary_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.IsBoundary
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.IsBoundary
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).IsBoundary
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.IsBoundary
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).IsBoundary
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.IsConnected
  name: IsConnected()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_IsConnected
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.IsConnected
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.IsConnected()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).IsConnected()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.IsConnected()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).IsConnected()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.IsConnected*
  name: IsConnected
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_IsConnected_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.IsConnected
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.IsConnected
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).IsConnected
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.IsConnected
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).IsConnected
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.NeighbourVertices
  name: NeighbourVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_NeighbourVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.NeighbourVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.NeighbourVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).NeighbourVertices()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.NeighbourVertices()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).NeighbourVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.NeighbourVertices*
  name: NeighbourVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_NeighbourVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.NeighbourVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.NeighbourVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).NeighbourVertices
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.NeighbourVertices
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).NeighbourVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Position
  name: Position
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_Position
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Position
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.Position
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).Position
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.Position
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).Position
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Position*
  name: Position
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_Position_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Position
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.Position
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).Position
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.Position
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).Position
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).ToString()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.ToString()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).ToString
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.ToString
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Valence
  name: Valence()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_Valence
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Valence
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.Valence()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).Valence()
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.Valence()
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).Valence()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Valence*
  name: Valence
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex-4.html#BRIDGES_DataStructures_PolyhedralMeshes_Abstract_Vertex_4_Valence_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex`4.Valence
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex<TPosition, TVertex, TEdge, TFace>.Valence
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.Abstract.Vertex(Of TPosition, TVertex, TEdge, TFace).Valence
  nameWithType: Vertex<TPosition, TVertex, TEdge, TFace>.Valence
  nameWithType.vb: Vertex(Of TPosition, TVertex, TEdge, TFace).Valence
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh
  name: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.html
  commentId: N:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh
  nameWithType: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1
  name: FvEdge<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1
  name.vb: FvEdge(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition)
  nameWithType: FvEdge<TPosition>
  nameWithType.vb: FvEdge(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge_1_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition).AdjacentFaces()
  nameWithType: FvEdge<TPosition>.AdjacentFaces()
  nameWithType.vb: FvEdge(Of TPosition).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge_1_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition).AdjacentFaces
  nameWithType: FvEdge<TPosition>.AdjacentFaces
  nameWithType.vb: FvEdge(Of TPosition).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge_1_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition).Equals(System.Object)
  nameWithType: FvEdge<TPosition>.Equals(Object)
  nameWithType.vb: FvEdge(Of TPosition).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge_1_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition).Equals
  nameWithType: FvEdge<TPosition>.Equals
  nameWithType.vb: FvEdge(Of TPosition).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge_1_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition).GetHashCode()
  nameWithType: FvEdge<TPosition>.GetHashCode()
  nameWithType.vb: FvEdge(Of TPosition).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge_1_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition).GetHashCode
  nameWithType: FvEdge<TPosition>.GetHashCode
  nameWithType.vb: FvEdge(Of TPosition).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.IsBoundary
  name: IsBoundary()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge_1_IsBoundary
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.IsBoundary
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>.IsBoundary()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition).IsBoundary()
  nameWithType: FvEdge<TPosition>.IsBoundary()
  nameWithType.vb: FvEdge(Of TPosition).IsBoundary()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.IsBoundary*
  name: IsBoundary
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge_1_IsBoundary_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.IsBoundary
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>.IsBoundary
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition).IsBoundary
  nameWithType: FvEdge<TPosition>.IsBoundary
  nameWithType.vb: FvEdge(Of TPosition).IsBoundary
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge_1_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition).ToString()
  nameWithType: FvEdge<TPosition>.ToString()
  nameWithType.vb: FvEdge(Of TPosition).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge_1_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge`1.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition).ToString
  nameWithType: FvEdge<TPosition>.ToString
  nameWithType.vb: FvEdge(Of TPosition).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1
  name: FvFace<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1
  name.vb: FvFace(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition)
  nameWithType: FvFace<TPosition>
  nameWithType.vb: FvFace(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).AdjacentFaces()
  nameWithType: FvFace<TPosition>.AdjacentFaces()
  nameWithType.vb: FvFace(Of TPosition).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).AdjacentFaces
  nameWithType: FvFace<TPosition>.AdjacentFaces
  nameWithType.vb: FvFace(Of TPosition).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).Equals(System.Object)
  nameWithType: FvFace<TPosition>.Equals(Object)
  nameWithType.vb: FvFace(Of TPosition).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).Equals
  nameWithType: FvFace<TPosition>.Equals
  nameWithType.vb: FvFace(Of TPosition).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.FaceEdges
  name: FaceEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_FaceEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.FaceEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.FaceEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).FaceEdges()
  nameWithType: FvFace<TPosition>.FaceEdges()
  nameWithType.vb: FvFace(Of TPosition).FaceEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.FaceEdges*
  name: FaceEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_FaceEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.FaceEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.FaceEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).FaceEdges
  nameWithType: FvFace<TPosition>.FaceEdges
  nameWithType.vb: FvFace(Of TPosition).FaceEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.FaceVertices
  name: FaceVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_FaceVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.FaceVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.FaceVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).FaceVertices()
  nameWithType: FvFace<TPosition>.FaceVertices()
  nameWithType.vb: FvFace(Of TPosition).FaceVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.FaceVertices*
  name: FaceVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_FaceVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.FaceVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.FaceVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).FaceVertices
  nameWithType: FvFace<TPosition>.FaceVertices
  nameWithType.vb: FvFace(Of TPosition).FaceVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).GetHashCode()
  nameWithType: FvFace<TPosition>.GetHashCode()
  nameWithType.vb: FvFace(Of TPosition).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).GetHashCode
  nameWithType: FvFace<TPosition>.GetHashCode
  nameWithType.vb: FvFace(Of TPosition).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).ToString()
  nameWithType: FvFace<TPosition>.ToString()
  nameWithType.vb: FvFace(Of TPosition).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace_1_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace`1.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition).ToString
  nameWithType: FvFace<TPosition>.ToString
  nameWithType.vb: FvFace(Of TPosition).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1
  name: FvMesh<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1
  name.vb: FvMesh(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition)
  nameWithType: FvMesh<TPosition>
  nameWithType.vb: FvMesh(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.#ctor
  name: FvMesh()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1__ctor
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.#ctor
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.FvMesh()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).FvMesh()
  nameWithType: FvMesh<TPosition>.FvMesh()
  nameWithType.vb: FvMesh(Of TPosition).FvMesh()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.#ctor*
  name: FvMesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1__ctor_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.#ctor
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.FvMesh
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).FvMesh
  nameWithType: FvMesh<TPosition>.FvMesh
  nameWithType.vb: FvMesh(Of TPosition).FvMesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1._newEdgeIndex
  name: _newEdgeIndex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1__newEdgeIndex
  commentId: F:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1._newEdgeIndex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>._newEdgeIndex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition)._newEdgeIndex
  nameWithType: FvMesh<TPosition>._newEdgeIndex
  nameWithType.vb: FvMesh(Of TPosition)._newEdgeIndex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1._newFaceIndex
  name: _newFaceIndex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1__newFaceIndex
  commentId: F:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1._newFaceIndex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>._newFaceIndex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition)._newFaceIndex
  nameWithType: FvMesh<TPosition>._newFaceIndex
  nameWithType.vb: FvMesh(Of TPosition)._newFaceIndex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1._newVertexIndex
  name: _newVertexIndex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1__newVertexIndex
  commentId: F:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1._newVertexIndex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>._newVertexIndex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition)._newVertexIndex
  nameWithType: FvMesh<TPosition>._newVertexIndex
  nameWithType.vb: FvMesh(Of TPosition)._newVertexIndex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.AddFace(List{BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex{`0}})
  name: AddFace(List<FvVertex<TPosition>>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_AddFace_List_BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex__0___
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.AddFace(List{BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex{`0}})
  name.vb: AddFace(List(Of FvVertex(Of TPosition)))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.AddFace(List<BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).AddFace(List(Of BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition)))
  nameWithType: FvMesh<TPosition>.AddFace(List<FvVertex<TPosition>>)
  nameWithType.vb: FvMesh(Of TPosition).AddFace(List(Of FvVertex(Of TPosition)))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.AddFace*
  name: AddFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_AddFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.AddFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.AddFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).AddFace
  nameWithType: FvMesh<TPosition>.AddFace
  nameWithType.vb: FvMesh(Of TPosition).AddFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.AddVertex(`0)
  name: AddVertex(TPosition)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_AddVertex__0_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.AddVertex(`0)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.AddVertex(TPosition)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).AddVertex(TPosition)
  nameWithType: FvMesh<TPosition>.AddVertex(TPosition)
  nameWithType.vb: FvMesh(Of TPosition).AddVertex(TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.AddVertex*
  name: AddVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_AddVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.AddVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.AddVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).AddVertex
  nameWithType: FvMesh<TPosition>.AddVertex
  nameWithType.vb: FvMesh(Of TPosition).AddVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.CleanMesh(System.Boolean)
  name: CleanMesh(Boolean)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_CleanMesh_System_Boolean_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.CleanMesh(System.Boolean)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.CleanMesh(System.Boolean)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).CleanMesh(System.Boolean)
  nameWithType: FvMesh<TPosition>.CleanMesh(Boolean)
  nameWithType.vb: FvMesh(Of TPosition).CleanMesh(Boolean)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.CleanMesh*
  name: CleanMesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_CleanMesh_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.CleanMesh
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.CleanMesh
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).CleanMesh
  nameWithType: FvMesh<TPosition>.CleanMesh
  nameWithType.vb: FvMesh(Of TPosition).CleanMesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.Clone
  name: Clone()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_Clone
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.Clone
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.Clone()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).Clone()
  nameWithType: FvMesh<TPosition>.Clone()
  nameWithType.vb: FvMesh(Of TPosition).Clone()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.Clone*
  name: Clone
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_Clone_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.Clone
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.Clone
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).Clone
  nameWithType: FvMesh<TPosition>.Clone
  nameWithType.vb: FvMesh(Of TPosition).Clone
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EdgeCount
  name: EdgeCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_EdgeCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EdgeCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.EdgeCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).EdgeCount
  nameWithType: FvMesh<TPosition>.EdgeCount
  nameWithType.vb: FvMesh(Of TPosition).EdgeCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EdgeCount*
  name: EdgeCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_EdgeCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EdgeCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.EdgeCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).EdgeCount
  nameWithType: FvMesh<TPosition>.EdgeCount
  nameWithType.vb: FvMesh(Of TPosition).EdgeCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseEdge(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge{`0})
  name: EraseEdge(FvEdge<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_EraseEdge_BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseEdge(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge{`0})
  name.vb: EraseEdge(FvEdge(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.EraseEdge(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).EraseEdge(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition))
  nameWithType: FvMesh<TPosition>.EraseEdge(FvEdge<TPosition>)
  nameWithType.vb: FvMesh(Of TPosition).EraseEdge(FvEdge(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseEdge*
  name: EraseEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_EraseEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.EraseEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).EraseEdge
  nameWithType: FvMesh<TPosition>.EraseEdge
  nameWithType.vb: FvMesh(Of TPosition).EraseEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseFace(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace{`0})
  name: EraseFace(FvFace<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_EraseFace_BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseFace(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace{`0})
  name.vb: EraseFace(FvFace(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.EraseFace(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).EraseFace(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition))
  nameWithType: FvMesh<TPosition>.EraseFace(FvFace<TPosition>)
  nameWithType.vb: FvMesh(Of TPosition).EraseFace(FvFace(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseFace*
  name: EraseFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_EraseFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.EraseFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).EraseFace
  nameWithType: FvMesh<TPosition>.EraseFace
  nameWithType.vb: FvMesh(Of TPosition).EraseFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseVertex(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex{`0})
  name: EraseVertex(FvVertex<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_EraseVertex_BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseVertex(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex{`0})
  name.vb: EraseVertex(FvVertex(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.EraseVertex(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).EraseVertex(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition))
  nameWithType: FvMesh<TPosition>.EraseVertex(FvVertex<TPosition>)
  nameWithType.vb: FvMesh(Of TPosition).EraseVertex(FvVertex(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseVertex*
  name: EraseVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_EraseVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.EraseVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.EraseVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).EraseVertex
  nameWithType: FvMesh<TPosition>.EraseVertex
  nameWithType.vb: FvMesh(Of TPosition).EraseVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.FaceCount
  name: FaceCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_FaceCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.FaceCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.FaceCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).FaceCount
  nameWithType: FvMesh<TPosition>.FaceCount
  nameWithType.vb: FvMesh(Of TPosition).FaceCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.FaceCount*
  name: FaceCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_FaceCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.FaceCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.FaceCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).FaceCount
  nameWithType: FvMesh<TPosition>.FaceCount
  nameWithType.vb: FvMesh(Of TPosition).FaceCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetEdge(System.Int32)
  name: GetEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetEdge(System.Int32)
  nameWithType: FvMesh<TPosition>.GetEdge(Int32)
  nameWithType.vb: FvMesh(Of TPosition).GetEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetEdge*
  name: GetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetEdge
  nameWithType: FvMesh<TPosition>.GetEdge
  nameWithType.vb: FvMesh(Of TPosition).GetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetEdges
  name: GetEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetEdges()
  nameWithType: FvMesh<TPosition>.GetEdges()
  nameWithType.vb: FvMesh(Of TPosition).GetEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetEdges*
  name: GetEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetEdges
  nameWithType: FvMesh<TPosition>.GetEdges
  nameWithType.vb: FvMesh(Of TPosition).GetEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetFace(System.Int32)
  name: GetFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetFace(System.Int32)
  nameWithType: FvMesh<TPosition>.GetFace(Int32)
  nameWithType.vb: FvMesh(Of TPosition).GetFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetFace*
  name: GetFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetFace
  nameWithType: FvMesh<TPosition>.GetFace
  nameWithType.vb: FvMesh(Of TPosition).GetFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetFaces
  name: GetFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetFaces()
  nameWithType: FvMesh<TPosition>.GetFaces()
  nameWithType.vb: FvMesh(Of TPosition).GetFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetFaces*
  name: GetFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetFaces
  nameWithType: FvMesh<TPosition>.GetFaces
  nameWithType.vb: FvMesh(Of TPosition).GetFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetVertex(System.Int32)
  name: GetVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetVertex(System.Int32)
  nameWithType: FvMesh<TPosition>.GetVertex(Int32)
  nameWithType.vb: FvMesh(Of TPosition).GetVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetVertex*
  name: GetVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetVertex
  nameWithType: FvMesh<TPosition>.GetVertex
  nameWithType.vb: FvMesh(Of TPosition).GetVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetVertices
  name: GetVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetVertices()
  nameWithType: FvMesh<TPosition>.GetVertices()
  nameWithType.vb: FvMesh(Of TPosition).GetVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetVertices*
  name: GetVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_GetVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.GetVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.GetVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).GetVertices
  nameWithType: FvMesh<TPosition>.GetVertices
  nameWithType.vb: FvMesh(Of TPosition).GetVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveEdge(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge{`0})
  name: RemoveEdge(FvEdge<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_RemoveEdge_BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvEdge__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveEdge(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge{`0})
  name.vb: RemoveEdge(FvEdge(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.RemoveEdge(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).RemoveEdge(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvEdge(Of TPosition))
  nameWithType: FvMesh<TPosition>.RemoveEdge(FvEdge<TPosition>)
  nameWithType.vb: FvMesh(Of TPosition).RemoveEdge(FvEdge(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveEdge*
  name: RemoveEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_RemoveEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.RemoveEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).RemoveEdge
  nameWithType: FvMesh<TPosition>.RemoveEdge
  nameWithType.vb: FvMesh(Of TPosition).RemoveEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveFace(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace{`0})
  name: RemoveFace(FvFace<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_RemoveFace_BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvFace__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveFace(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace{`0})
  name.vb: RemoveFace(FvFace(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.RemoveFace(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).RemoveFace(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvFace(Of TPosition))
  nameWithType: FvMesh<TPosition>.RemoveFace(FvFace<TPosition>)
  nameWithType.vb: FvMesh(Of TPosition).RemoveFace(FvFace(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveFace*
  name: RemoveFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_RemoveFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.RemoveFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).RemoveFace
  nameWithType: FvMesh<TPosition>.RemoveFace
  nameWithType.vb: FvMesh(Of TPosition).RemoveFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveVertex(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex{`0})
  name: RemoveVertex(FvVertex<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_RemoveVertex_BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveVertex(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex{`0})
  name.vb: RemoveVertex(FvVertex(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.RemoveVertex(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).RemoveVertex(BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition))
  nameWithType: FvMesh<TPosition>.RemoveVertex(FvVertex<TPosition>)
  nameWithType.vb: FvMesh(Of TPosition).RemoveVertex(FvVertex(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveVertex*
  name: RemoveVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_RemoveVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.RemoveVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.RemoveVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).RemoveVertex
  nameWithType: FvMesh<TPosition>.RemoveVertex
  nameWithType.vb: FvMesh(Of TPosition).RemoveVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.ToHalfedgeMesh
  name: ToHalfedgeMesh()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_ToHalfedgeMesh
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.ToHalfedgeMesh
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.ToHalfedgeMesh()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).ToHalfedgeMesh()
  nameWithType: FvMesh<TPosition>.ToHalfedgeMesh()
  nameWithType.vb: FvMesh(Of TPosition).ToHalfedgeMesh()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.ToHalfedgeMesh*
  name: ToHalfedgeMesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_ToHalfedgeMesh_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.ToHalfedgeMesh
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.ToHalfedgeMesh
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).ToHalfedgeMesh
  nameWithType: FvMesh<TPosition>.ToHalfedgeMesh
  nameWithType.vb: FvMesh(Of TPosition).ToHalfedgeMesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).ToString()
  nameWithType: FvMesh<TPosition>.ToString()
  nameWithType.vb: FvMesh(Of TPosition).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).ToString
  nameWithType: FvMesh<TPosition>.ToString
  nameWithType.vb: FvMesh(Of TPosition).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetEdge(System.Int32)
  name: TryGetEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_TryGetEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.TryGetEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).TryGetEdge(System.Int32)
  nameWithType: FvMesh<TPosition>.TryGetEdge(Int32)
  nameWithType.vb: FvMesh(Of TPosition).TryGetEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetEdge*
  name: TryGetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_TryGetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.TryGetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).TryGetEdge
  nameWithType: FvMesh<TPosition>.TryGetEdge
  nameWithType.vb: FvMesh(Of TPosition).TryGetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetFace(System.Int32)
  name: TryGetFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_TryGetFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.TryGetFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).TryGetFace(System.Int32)
  nameWithType: FvMesh<TPosition>.TryGetFace(Int32)
  nameWithType.vb: FvMesh(Of TPosition).TryGetFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetFace*
  name: TryGetFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_TryGetFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.TryGetFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).TryGetFace
  nameWithType: FvMesh<TPosition>.TryGetFace
  nameWithType.vb: FvMesh(Of TPosition).TryGetFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetVertex(System.Int32)
  name: TryGetVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_TryGetVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.TryGetVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).TryGetVertex(System.Int32)
  nameWithType: FvMesh<TPosition>.TryGetVertex(Int32)
  nameWithType.vb: FvMesh(Of TPosition).TryGetVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetVertex*
  name: TryGetVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_TryGetVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.TryGetVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.TryGetVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).TryGetVertex
  nameWithType: FvMesh<TPosition>.TryGetVertex
  nameWithType.vb: FvMesh(Of TPosition).TryGetVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.VertexCount
  name: VertexCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_VertexCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.VertexCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.VertexCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).VertexCount
  nameWithType: FvMesh<TPosition>.VertexCount
  nameWithType.vb: FvMesh(Of TPosition).VertexCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.VertexCount*
  name: VertexCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvMesh_1_VertexCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh`1.VertexCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh<TPosition>.VertexCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvMesh(Of TPosition).VertexCount
  nameWithType: FvMesh<TPosition>.VertexCount
  nameWithType.vb: FvMesh(Of TPosition).VertexCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1
  name: FvVertex<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1
  name.vb: FvVertex(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition)
  nameWithType: FvVertex<TPosition>
  nameWithType.vb: FvVertex(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).AdjacentFaces()
  nameWithType: FvVertex<TPosition>.AdjacentFaces()
  nameWithType.vb: FvVertex(Of TPosition).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).AdjacentFaces
  nameWithType: FvVertex<TPosition>.AdjacentFaces
  nameWithType.vb: FvVertex(Of TPosition).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.ConnectedEdges
  name: ConnectedEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_ConnectedEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.ConnectedEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.ConnectedEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).ConnectedEdges()
  nameWithType: FvVertex<TPosition>.ConnectedEdges()
  nameWithType.vb: FvVertex(Of TPosition).ConnectedEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.ConnectedEdges*
  name: ConnectedEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_ConnectedEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.ConnectedEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.ConnectedEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).ConnectedEdges
  nameWithType: FvVertex<TPosition>.ConnectedEdges
  nameWithType.vb: FvVertex(Of TPosition).ConnectedEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).Equals(System.Object)
  nameWithType: FvVertex<TPosition>.Equals(Object)
  nameWithType.vb: FvVertex(Of TPosition).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).Equals
  nameWithType: FvVertex<TPosition>.Equals
  nameWithType.vb: FvVertex(Of TPosition).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).GetHashCode()
  nameWithType: FvVertex<TPosition>.GetHashCode()
  nameWithType.vb: FvVertex(Of TPosition).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).GetHashCode
  nameWithType: FvVertex<TPosition>.GetHashCode
  nameWithType.vb: FvVertex(Of TPosition).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.IsBoundary
  name: IsBoundary()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_IsBoundary
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.IsBoundary
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.IsBoundary()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).IsBoundary()
  nameWithType: FvVertex<TPosition>.IsBoundary()
  nameWithType.vb: FvVertex(Of TPosition).IsBoundary()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.IsBoundary*
  name: IsBoundary
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_IsBoundary_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.IsBoundary
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.IsBoundary
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).IsBoundary
  nameWithType: FvVertex<TPosition>.IsBoundary
  nameWithType.vb: FvVertex(Of TPosition).IsBoundary
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.IsConnected
  name: IsConnected()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_IsConnected
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.IsConnected
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.IsConnected()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).IsConnected()
  nameWithType: FvVertex<TPosition>.IsConnected()
  nameWithType.vb: FvVertex(Of TPosition).IsConnected()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.IsConnected*
  name: IsConnected
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_IsConnected_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.IsConnected
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.IsConnected
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).IsConnected
  nameWithType: FvVertex<TPosition>.IsConnected
  nameWithType.vb: FvVertex(Of TPosition).IsConnected
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.NeighbourVertices
  name: NeighbourVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_NeighbourVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.NeighbourVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.NeighbourVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).NeighbourVertices()
  nameWithType: FvVertex<TPosition>.NeighbourVertices()
  nameWithType.vb: FvVertex(Of TPosition).NeighbourVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.NeighbourVertices*
  name: NeighbourVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_NeighbourVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.NeighbourVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.NeighbourVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).NeighbourVertices
  nameWithType: FvVertex<TPosition>.NeighbourVertices
  nameWithType.vb: FvVertex(Of TPosition).NeighbourVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).ToString()
  nameWithType: FvVertex<TPosition>.ToString()
  nameWithType.vb: FvVertex(Of TPosition).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).ToString
  nameWithType: FvVertex<TPosition>.ToString
  nameWithType.vb: FvVertex(Of TPosition).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.Valence
  name: Valence()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_Valence
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.Valence
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.Valence()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).Valence()
  nameWithType: FvVertex<TPosition>.Valence()
  nameWithType.vb: FvVertex(Of TPosition).Valence()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.Valence*
  name: Valence
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_FaceVertexMesh_FvVertex_1_Valence_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex`1.Valence
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex<TPosition>.Valence
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.FaceVertexMesh.FvVertex(Of TPosition).Valence
  nameWithType: FvVertex<TPosition>.Valence
  nameWithType.vb: FvVertex(Of TPosition).Valence
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh
  name: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.html
  commentId: N:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh
  nameWithType: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1
  name: HeEdge<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1
  name.vb: HeEdge(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition)
  nameWithType: HeEdge<TPosition>
  nameWithType.vb: HeEdge(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge_1_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition).AdjacentFaces()
  nameWithType: HeEdge<TPosition>.AdjacentFaces()
  nameWithType.vb: HeEdge(Of TPosition).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge_1_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition).AdjacentFaces
  nameWithType: HeEdge<TPosition>.AdjacentFaces
  nameWithType.vb: HeEdge(Of TPosition).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge_1_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition).Equals(System.Object)
  nameWithType: HeEdge<TPosition>.Equals(Object)
  nameWithType.vb: HeEdge(Of TPosition).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge_1_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition).Equals
  nameWithType: HeEdge<TPosition>.Equals
  nameWithType.vb: HeEdge(Of TPosition).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge_1_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition).GetHashCode()
  nameWithType: HeEdge<TPosition>.GetHashCode()
  nameWithType.vb: HeEdge(Of TPosition).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge_1_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition).GetHashCode
  nameWithType: HeEdge<TPosition>.GetHashCode
  nameWithType.vb: HeEdge(Of TPosition).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.IsBoundary
  name: IsBoundary()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge_1_IsBoundary
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.IsBoundary
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>.IsBoundary()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition).IsBoundary()
  nameWithType: HeEdge<TPosition>.IsBoundary()
  nameWithType.vb: HeEdge(Of TPosition).IsBoundary()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.IsBoundary*
  name: IsBoundary
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge_1_IsBoundary_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.IsBoundary
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>.IsBoundary
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition).IsBoundary
  nameWithType: HeEdge<TPosition>.IsBoundary
  nameWithType.vb: HeEdge(Of TPosition).IsBoundary
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge_1_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition).ToString()
  nameWithType: HeEdge<TPosition>.ToString()
  nameWithType.vb: HeEdge(Of TPosition).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge_1_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge`1.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition).ToString
  nameWithType: HeEdge<TPosition>.ToString
  nameWithType.vb: HeEdge(Of TPosition).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1
  name: HeFace<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1
  name.vb: HeFace(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition)
  nameWithType: HeFace<TPosition>
  nameWithType.vb: HeFace(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).AdjacentFaces()
  nameWithType: HeFace<TPosition>.AdjacentFaces()
  nameWithType.vb: HeFace(Of TPosition).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).AdjacentFaces
  nameWithType: HeFace<TPosition>.AdjacentFaces
  nameWithType.vb: HeFace(Of TPosition).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.Equals(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace{`0})
  name: Equals(HeFace<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_Equals_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.Equals(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace{`0})
  name.vb: Equals(HeFace(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.Equals(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).Equals(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition))
  nameWithType: HeFace<TPosition>.Equals(HeFace<TPosition>)
  nameWithType.vb: HeFace(Of TPosition).Equals(HeFace(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).Equals(System.Object)
  nameWithType: HeFace<TPosition>.Equals(Object)
  nameWithType.vb: HeFace(Of TPosition).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).Equals
  nameWithType: HeFace<TPosition>.Equals
  nameWithType.vb: HeFace(Of TPosition).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceEdges
  name: FaceEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_FaceEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.FaceEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).FaceEdges()
  nameWithType: HeFace<TPosition>.FaceEdges()
  nameWithType.vb: HeFace(Of TPosition).FaceEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceEdges*
  name: FaceEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_FaceEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.FaceEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).FaceEdges
  nameWithType: HeFace<TPosition>.FaceEdges
  nameWithType.vb: HeFace(Of TPosition).FaceEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceHalfedges
  name: FaceHalfedges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_FaceHalfedges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceHalfedges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.FaceHalfedges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).FaceHalfedges()
  nameWithType: HeFace<TPosition>.FaceHalfedges()
  nameWithType.vb: HeFace(Of TPosition).FaceHalfedges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceHalfedges*
  name: FaceHalfedges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_FaceHalfedges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceHalfedges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.FaceHalfedges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).FaceHalfedges
  nameWithType: HeFace<TPosition>.FaceHalfedges
  nameWithType.vb: HeFace(Of TPosition).FaceHalfedges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceVertices
  name: FaceVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_FaceVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.FaceVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).FaceVertices()
  nameWithType: HeFace<TPosition>.FaceVertices()
  nameWithType.vb: HeFace(Of TPosition).FaceVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceVertices*
  name: FaceVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_FaceVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FaceVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.FaceVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).FaceVertices
  nameWithType: HeFace<TPosition>.FaceVertices
  nameWithType.vb: HeFace(Of TPosition).FaceVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FirstHalfedge
  name: FirstHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_FirstHalfedge
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FirstHalfedge
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.FirstHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).FirstHalfedge
  nameWithType: HeFace<TPosition>.FirstHalfedge
  nameWithType.vb: HeFace(Of TPosition).FirstHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FirstHalfedge*
  name: FirstHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_FirstHalfedge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.FirstHalfedge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.FirstHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).FirstHalfedge
  nameWithType: HeFace<TPosition>.FirstHalfedge
  nameWithType.vb: HeFace(Of TPosition).FirstHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).GetHashCode()
  nameWithType: HeFace<TPosition>.GetHashCode()
  nameWithType.vb: HeFace(Of TPosition).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).GetHashCode
  nameWithType: HeFace<TPosition>.GetHashCode
  nameWithType.vb: HeFace(Of TPosition).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).ToString()
  nameWithType: HeFace<TPosition>.ToString()
  nameWithType.vb: HeFace(Of TPosition).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace_1_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace`1.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition).ToString
  nameWithType: HeFace<TPosition>.ToString
  nameWithType.vb: HeFace(Of TPosition).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1
  name: HeHalfedge<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1
  name.vb: HeHalfedge(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition)
  nameWithType: HeHalfedge<TPosition>
  nameWithType.vb: HeHalfedge(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.AdjacentFace
  name: AdjacentFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_AdjacentFace
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.AdjacentFace
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.AdjacentFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).AdjacentFace
  nameWithType: HeHalfedge<TPosition>.AdjacentFace
  nameWithType.vb: HeHalfedge(Of TPosition).AdjacentFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.AdjacentFace*
  name: AdjacentFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_AdjacentFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.AdjacentFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.AdjacentFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).AdjacentFace
  nameWithType: HeHalfedge<TPosition>.AdjacentFace
  nameWithType.vb: HeHalfedge(Of TPosition).AdjacentFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.EndVertex
  name: EndVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_EndVertex
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.EndVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.EndVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).EndVertex
  nameWithType: HeHalfedge<TPosition>.EndVertex
  nameWithType.vb: HeHalfedge(Of TPosition).EndVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.EndVertex*
  name: EndVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_EndVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.EndVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.EndVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).EndVertex
  nameWithType: HeHalfedge<TPosition>.EndVertex
  nameWithType.vb: HeHalfedge(Of TPosition).EndVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.Equals(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge{`0})
  name: Equals(HeHalfedge<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_Equals_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.Equals(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge{`0})
  name.vb: Equals(HeHalfedge(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.Equals(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).Equals(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition))
  nameWithType: HeHalfedge<TPosition>.Equals(HeHalfedge<TPosition>)
  nameWithType.vb: HeHalfedge(Of TPosition).Equals(HeHalfedge(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).Equals(System.Object)
  nameWithType: HeHalfedge<TPosition>.Equals(Object)
  nameWithType.vb: HeHalfedge(Of TPosition).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).Equals
  nameWithType: HeHalfedge<TPosition>.Equals
  nameWithType.vb: HeHalfedge(Of TPosition).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.GetEdge
  name: GetEdge()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_GetEdge
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.GetEdge
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.GetEdge()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).GetEdge()
  nameWithType: HeHalfedge<TPosition>.GetEdge()
  nameWithType.vb: HeHalfedge(Of TPosition).GetEdge()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.GetEdge*
  name: GetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_GetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.GetEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.GetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).GetEdge
  nameWithType: HeHalfedge<TPosition>.GetEdge
  nameWithType.vb: HeHalfedge(Of TPosition).GetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).GetHashCode()
  nameWithType: HeHalfedge<TPosition>.GetHashCode()
  nameWithType.vb: HeHalfedge(Of TPosition).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).GetHashCode
  nameWithType: HeHalfedge<TPosition>.GetHashCode
  nameWithType.vb: HeHalfedge(Of TPosition).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.Index
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_Index
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.Index
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).Index
  nameWithType: HeHalfedge<TPosition>.Index
  nameWithType.vb: HeHalfedge(Of TPosition).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.Index*
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_Index_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.Index
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).Index
  nameWithType: HeHalfedge<TPosition>.Index
  nameWithType.vb: HeHalfedge(Of TPosition).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.IsBoundary
  name: IsBoundary()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_IsBoundary
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.IsBoundary
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.IsBoundary()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).IsBoundary()
  nameWithType: HeHalfedge<TPosition>.IsBoundary()
  nameWithType.vb: HeHalfedge(Of TPosition).IsBoundary()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.IsBoundary*
  name: IsBoundary
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_IsBoundary_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.IsBoundary
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.IsBoundary
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).IsBoundary
  nameWithType: HeHalfedge<TPosition>.IsBoundary
  nameWithType.vb: HeHalfedge(Of TPosition).IsBoundary
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.NextHalfedge
  name: NextHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_NextHalfedge
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.NextHalfedge
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.NextHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).NextHalfedge
  nameWithType: HeHalfedge<TPosition>.NextHalfedge
  nameWithType.vb: HeHalfedge(Of TPosition).NextHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.NextHalfedge*
  name: NextHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_NextHalfedge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.NextHalfedge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.NextHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).NextHalfedge
  nameWithType: HeHalfedge<TPosition>.NextHalfedge
  nameWithType.vb: HeHalfedge(Of TPosition).NextHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.PairHalfedge
  name: PairHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_PairHalfedge
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.PairHalfedge
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.PairHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).PairHalfedge
  nameWithType: HeHalfedge<TPosition>.PairHalfedge
  nameWithType.vb: HeHalfedge(Of TPosition).PairHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.PairHalfedge*
  name: PairHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_PairHalfedge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.PairHalfedge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.PairHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).PairHalfedge
  nameWithType: HeHalfedge<TPosition>.PairHalfedge
  nameWithType.vb: HeHalfedge(Of TPosition).PairHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.PrevHalfedge
  name: PrevHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_PrevHalfedge
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.PrevHalfedge
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.PrevHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).PrevHalfedge
  nameWithType: HeHalfedge<TPosition>.PrevHalfedge
  nameWithType.vb: HeHalfedge(Of TPosition).PrevHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.PrevHalfedge*
  name: PrevHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_PrevHalfedge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.PrevHalfedge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.PrevHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).PrevHalfedge
  nameWithType: HeHalfedge<TPosition>.PrevHalfedge
  nameWithType.vb: HeHalfedge(Of TPosition).PrevHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.StartVertex
  name: StartVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_StartVertex
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.StartVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.StartVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).StartVertex
  nameWithType: HeHalfedge<TPosition>.StartVertex
  nameWithType.vb: HeHalfedge(Of TPosition).StartVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.StartVertex*
  name: StartVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_StartVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.StartVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.StartVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).StartVertex
  nameWithType: HeHalfedge<TPosition>.StartVertex
  nameWithType.vb: HeHalfedge(Of TPosition).StartVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).ToString()
  nameWithType: HeHalfedge<TPosition>.ToString()
  nameWithType.vb: HeHalfedge(Of TPosition).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge_1_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge`1.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition).ToString
  nameWithType: HeHalfedge<TPosition>.ToString
  nameWithType.vb: HeHalfedge(Of TPosition).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1
  name: HeMesh<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1
  name.vb: HeMesh(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition)
  nameWithType: HeMesh<TPosition>
  nameWithType.vb: HeMesh(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.#ctor
  name: HeMesh()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1__ctor
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.#ctor
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.HeMesh()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).HeMesh()
  nameWithType: HeMesh<TPosition>.HeMesh()
  nameWithType.vb: HeMesh(Of TPosition).HeMesh()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.#ctor*
  name: HeMesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1__ctor_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.#ctor
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.HeMesh
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).HeMesh
  nameWithType: HeMesh<TPosition>.HeMesh
  nameWithType.vb: HeMesh(Of TPosition).HeMesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._faces
  name: _faces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1__faces
  commentId: F:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._faces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>._faces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition)._faces
  nameWithType: HeMesh<TPosition>._faces
  nameWithType.vb: HeMesh(Of TPosition)._faces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._halfedges
  name: _halfedges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1__halfedges
  commentId: F:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._halfedges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>._halfedges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition)._halfedges
  nameWithType: HeMesh<TPosition>._halfedges
  nameWithType.vb: HeMesh(Of TPosition)._halfedges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._newFaceIndex
  name: _newFaceIndex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1__newFaceIndex
  commentId: F:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._newFaceIndex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>._newFaceIndex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition)._newFaceIndex
  nameWithType: HeMesh<TPosition>._newFaceIndex
  nameWithType.vb: HeMesh(Of TPosition)._newFaceIndex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._newHalfedgeIndex
  name: _newHalfedgeIndex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1__newHalfedgeIndex
  commentId: F:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._newHalfedgeIndex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>._newHalfedgeIndex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition)._newHalfedgeIndex
  nameWithType: HeMesh<TPosition>._newHalfedgeIndex
  nameWithType.vb: HeMesh(Of TPosition)._newHalfedgeIndex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._newVertexIndex
  name: _newVertexIndex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1__newVertexIndex
  commentId: F:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._newVertexIndex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>._newVertexIndex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition)._newVertexIndex
  nameWithType: HeMesh<TPosition>._newVertexIndex
  nameWithType.vb: HeMesh(Of TPosition)._newVertexIndex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._vertices
  name: _vertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1__vertices
  commentId: F:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1._vertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>._vertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition)._vertices
  nameWithType: HeMesh<TPosition>._vertices
  nameWithType.vb: HeMesh(Of TPosition)._vertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.AddFace(List{BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0}})
  name: AddFace(List<HeVertex<TPosition>>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_AddFace_List_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex__0___
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.AddFace(List{BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0}})
  name.vb: AddFace(List(Of HeVertex(Of TPosition)))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.AddFace(List<BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).AddFace(List(Of BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition)))
  nameWithType: HeMesh<TPosition>.AddFace(List<HeVertex<TPosition>>)
  nameWithType.vb: HeMesh(Of TPosition).AddFace(List(Of HeVertex(Of TPosition)))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.AddFace*
  name: AddFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_AddFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.AddFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.AddFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).AddFace
  nameWithType: HeMesh<TPosition>.AddFace
  nameWithType.vb: HeMesh(Of TPosition).AddFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.AddVertex(`0)
  name: AddVertex(TPosition)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_AddVertex__0_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.AddVertex(`0)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.AddVertex(TPosition)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).AddVertex(TPosition)
  nameWithType: HeMesh<TPosition>.AddVertex(TPosition)
  nameWithType.vb: HeMesh(Of TPosition).AddVertex(TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.AddVertex*
  name: AddVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_AddVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.AddVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.AddVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).AddVertex
  nameWithType: HeMesh<TPosition>.AddVertex
  nameWithType.vb: HeMesh(Of TPosition).AddVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.CleanMesh(System.Boolean)
  name: CleanMesh(Boolean)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_CleanMesh_System_Boolean_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.CleanMesh(System.Boolean)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.CleanMesh(System.Boolean)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).CleanMesh(System.Boolean)
  nameWithType: HeMesh<TPosition>.CleanMesh(Boolean)
  nameWithType.vb: HeMesh(Of TPosition).CleanMesh(Boolean)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.CleanMesh*
  name: CleanMesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_CleanMesh_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.CleanMesh
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.CleanMesh
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).CleanMesh
  nameWithType: HeMesh<TPosition>.CleanMesh
  nameWithType.vb: HeMesh(Of TPosition).CleanMesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.Clone
  name: Clone()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_Clone
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.Clone
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.Clone()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).Clone()
  nameWithType: HeMesh<TPosition>.Clone()
  nameWithType.vb: HeMesh(Of TPosition).Clone()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.Clone*
  name: Clone
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_Clone_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.Clone
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.Clone
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).Clone
  nameWithType: HeMesh<TPosition>.Clone
  nameWithType.vb: HeMesh(Of TPosition).Clone
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EdgeBetween(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0},BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0})
  name: EdgeBetween(HeVertex<TPosition>, HeVertex<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EdgeBetween_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex__0__BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EdgeBetween(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0},BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0})
  name.vb: EdgeBetween(HeVertex(Of TPosition), HeVertex(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EdgeBetween(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>, BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EdgeBetween(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition), BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition))
  nameWithType: HeMesh<TPosition>.EdgeBetween(HeVertex<TPosition>, HeVertex<TPosition>)
  nameWithType.vb: HeMesh(Of TPosition).EdgeBetween(HeVertex(Of TPosition), HeVertex(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EdgeBetween*
  name: EdgeBetween
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EdgeBetween_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EdgeBetween
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EdgeBetween
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EdgeBetween
  nameWithType: HeMesh<TPosition>.EdgeBetween
  nameWithType.vb: HeMesh(Of TPosition).EdgeBetween
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EdgeCount
  name: EdgeCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EdgeCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EdgeCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EdgeCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EdgeCount
  nameWithType: HeMesh<TPosition>.EdgeCount
  nameWithType.vb: HeMesh(Of TPosition).EdgeCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EdgeCount*
  name: EdgeCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EdgeCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EdgeCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EdgeCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EdgeCount
  nameWithType: HeMesh<TPosition>.EdgeCount
  nameWithType.vb: HeMesh(Of TPosition).EdgeCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseEdge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge{`0})
  name: EraseEdge(HeEdge<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EraseEdge_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseEdge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge{`0})
  name.vb: EraseEdge(HeEdge(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EraseEdge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EraseEdge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition))
  nameWithType: HeMesh<TPosition>.EraseEdge(HeEdge<TPosition>)
  nameWithType.vb: HeMesh(Of TPosition).EraseEdge(HeEdge(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseEdge*
  name: EraseEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EraseEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EraseEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EraseEdge
  nameWithType: HeMesh<TPosition>.EraseEdge
  nameWithType.vb: HeMesh(Of TPosition).EraseEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseFace(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace{`0})
  name: EraseFace(HeFace<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EraseFace_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseFace(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace{`0})
  name.vb: EraseFace(HeFace(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EraseFace(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EraseFace(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition))
  nameWithType: HeMesh<TPosition>.EraseFace(HeFace<TPosition>)
  nameWithType.vb: HeMesh(Of TPosition).EraseFace(HeFace(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseFace*
  name: EraseFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EraseFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EraseFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EraseFace
  nameWithType: HeMesh<TPosition>.EraseFace
  nameWithType.vb: HeMesh(Of TPosition).EraseFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseHalfedge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge{`0})
  name: EraseHalfedge(HeHalfedge<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EraseHalfedge_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseHalfedge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge{`0})
  name.vb: EraseHalfedge(HeHalfedge(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EraseHalfedge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EraseHalfedge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition))
  nameWithType: HeMesh<TPosition>.EraseHalfedge(HeHalfedge<TPosition>)
  nameWithType.vb: HeMesh(Of TPosition).EraseHalfedge(HeHalfedge(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseHalfedge*
  name: EraseHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EraseHalfedge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseHalfedge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EraseHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EraseHalfedge
  nameWithType: HeMesh<TPosition>.EraseHalfedge
  nameWithType.vb: HeMesh(Of TPosition).EraseHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseVertex(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0})
  name: EraseVertex(HeVertex<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EraseVertex_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseVertex(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0})
  name.vb: EraseVertex(HeVertex(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EraseVertex(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EraseVertex(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition))
  nameWithType: HeMesh<TPosition>.EraseVertex(HeVertex<TPosition>)
  nameWithType.vb: HeMesh(Of TPosition).EraseVertex(HeVertex(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseVertex*
  name: EraseVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_EraseVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.EraseVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.EraseVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).EraseVertex
  nameWithType: HeMesh<TPosition>.EraseVertex
  nameWithType.vb: HeMesh(Of TPosition).EraseVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.FaceCount
  name: FaceCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_FaceCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.FaceCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.FaceCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).FaceCount
  nameWithType: HeMesh<TPosition>.FaceCount
  nameWithType.vb: HeMesh(Of TPosition).FaceCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.FaceCount*
  name: FaceCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_FaceCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.FaceCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.FaceCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).FaceCount
  nameWithType: HeMesh<TPosition>.FaceCount
  nameWithType.vb: HeMesh(Of TPosition).FaceCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetEdge(System.Int32)
  name: GetEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetEdge(System.Int32)
  nameWithType: HeMesh<TPosition>.GetEdge(Int32)
  nameWithType.vb: HeMesh(Of TPosition).GetEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetEdge*
  name: GetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetEdge
  nameWithType: HeMesh<TPosition>.GetEdge
  nameWithType.vb: HeMesh(Of TPosition).GetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetEdges
  name: GetEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetEdges()
  nameWithType: HeMesh<TPosition>.GetEdges()
  nameWithType.vb: HeMesh(Of TPosition).GetEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetEdges*
  name: GetEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetEdges
  nameWithType: HeMesh<TPosition>.GetEdges
  nameWithType.vb: HeMesh(Of TPosition).GetEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetFace(System.Int32)
  name: GetFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetFace(System.Int32)
  nameWithType: HeMesh<TPosition>.GetFace(Int32)
  nameWithType.vb: HeMesh(Of TPosition).GetFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetFace*
  name: GetFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetFace
  nameWithType: HeMesh<TPosition>.GetFace
  nameWithType.vb: HeMesh(Of TPosition).GetFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetFaces
  name: GetFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetFaces()
  nameWithType: HeMesh<TPosition>.GetFaces()
  nameWithType.vb: HeMesh(Of TPosition).GetFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetFaces*
  name: GetFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetFaces
  nameWithType: HeMesh<TPosition>.GetFaces
  nameWithType.vb: HeMesh(Of TPosition).GetFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetHalfedge(System.Int32)
  name: GetHalfedge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetHalfedge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetHalfedge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetHalfedge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetHalfedge(System.Int32)
  nameWithType: HeMesh<TPosition>.GetHalfedge(Int32)
  nameWithType.vb: HeMesh(Of TPosition).GetHalfedge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetHalfedge*
  name: GetHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetHalfedge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetHalfedge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetHalfedge
  nameWithType: HeMesh<TPosition>.GetHalfedge
  nameWithType.vb: HeMesh(Of TPosition).GetHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetHalfedges
  name: GetHalfedges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetHalfedges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetHalfedges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetHalfedges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetHalfedges()
  nameWithType: HeMesh<TPosition>.GetHalfedges()
  nameWithType.vb: HeMesh(Of TPosition).GetHalfedges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetHalfedges*
  name: GetHalfedges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetHalfedges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetHalfedges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetHalfedges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetHalfedges
  nameWithType: HeMesh<TPosition>.GetHalfedges
  nameWithType.vb: HeMesh(Of TPosition).GetHalfedges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetVertex(System.Int32)
  name: GetVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetVertex(System.Int32)
  nameWithType: HeMesh<TPosition>.GetVertex(Int32)
  nameWithType.vb: HeMesh(Of TPosition).GetVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetVertex*
  name: GetVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetVertex
  nameWithType: HeMesh<TPosition>.GetVertex
  nameWithType.vb: HeMesh(Of TPosition).GetVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetVertices
  name: GetVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetVertices()
  nameWithType: HeMesh<TPosition>.GetVertices()
  nameWithType.vb: HeMesh(Of TPosition).GetVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetVertices*
  name: GetVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_GetVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.GetVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.GetVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).GetVertices
  nameWithType: HeMesh<TPosition>.GetVertices
  nameWithType.vb: HeMesh(Of TPosition).GetVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.HalfedgeBetween(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0},BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0})
  name: HalfedgeBetween(HeVertex<TPosition>, HeVertex<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_HalfedgeBetween_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex__0__BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.HalfedgeBetween(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0},BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0})
  name.vb: HalfedgeBetween(HeVertex(Of TPosition), HeVertex(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.HalfedgeBetween(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>, BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).HalfedgeBetween(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition), BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition))
  nameWithType: HeMesh<TPosition>.HalfedgeBetween(HeVertex<TPosition>, HeVertex<TPosition>)
  nameWithType.vb: HeMesh(Of TPosition).HalfedgeBetween(HeVertex(Of TPosition), HeVertex(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.HalfedgeBetween*
  name: HalfedgeBetween
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_HalfedgeBetween_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.HalfedgeBetween
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.HalfedgeBetween
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).HalfedgeBetween
  nameWithType: HeMesh<TPosition>.HalfedgeBetween
  nameWithType.vb: HeMesh(Of TPosition).HalfedgeBetween
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.HalfedgeCount
  name: HalfedgeCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_HalfedgeCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.HalfedgeCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.HalfedgeCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).HalfedgeCount
  nameWithType: HeMesh<TPosition>.HalfedgeCount
  nameWithType.vb: HeMesh(Of TPosition).HalfedgeCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.HalfedgeCount*
  name: HalfedgeCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_HalfedgeCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.HalfedgeCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.HalfedgeCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).HalfedgeCount
  nameWithType: HeMesh<TPosition>.HalfedgeCount
  nameWithType.vb: HeMesh(Of TPosition).HalfedgeCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveEdge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge{`0})
  name: RemoveEdge(HeEdge<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_RemoveEdge_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeEdge__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveEdge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge{`0})
  name.vb: RemoveEdge(HeEdge(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.RemoveEdge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).RemoveEdge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeEdge(Of TPosition))
  nameWithType: HeMesh<TPosition>.RemoveEdge(HeEdge<TPosition>)
  nameWithType.vb: HeMesh(Of TPosition).RemoveEdge(HeEdge(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveEdge*
  name: RemoveEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_RemoveEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.RemoveEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).RemoveEdge
  nameWithType: HeMesh<TPosition>.RemoveEdge
  nameWithType.vb: HeMesh(Of TPosition).RemoveEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveFace(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace{`0})
  name: RemoveFace(HeFace<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_RemoveFace_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeFace__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveFace(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace{`0})
  name.vb: RemoveFace(HeFace(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.RemoveFace(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).RemoveFace(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeFace(Of TPosition))
  nameWithType: HeMesh<TPosition>.RemoveFace(HeFace<TPosition>)
  nameWithType.vb: HeMesh(Of TPosition).RemoveFace(HeFace(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveFace*
  name: RemoveFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_RemoveFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.RemoveFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).RemoveFace
  nameWithType: HeMesh<TPosition>.RemoveFace
  nameWithType.vb: HeMesh(Of TPosition).RemoveFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveHalfedge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge{`0})
  name: RemoveHalfedge(HeHalfedge<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_RemoveHalfedge_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeHalfedge__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveHalfedge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge{`0})
  name.vb: RemoveHalfedge(HeHalfedge(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.RemoveHalfedge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).RemoveHalfedge(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeHalfedge(Of TPosition))
  nameWithType: HeMesh<TPosition>.RemoveHalfedge(HeHalfedge<TPosition>)
  nameWithType.vb: HeMesh(Of TPosition).RemoveHalfedge(HeHalfedge(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveHalfedge*
  name: RemoveHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_RemoveHalfedge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveHalfedge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.RemoveHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).RemoveHalfedge
  nameWithType: HeMesh<TPosition>.RemoveHalfedge
  nameWithType.vb: HeMesh(Of TPosition).RemoveHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveVertex(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0})
  name: RemoveVertex(HeVertex<TPosition>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_RemoveVertex_BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex__0__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveVertex(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex{`0})
  name.vb: RemoveVertex(HeVertex(Of TPosition))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.RemoveVertex(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).RemoveVertex(BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition))
  nameWithType: HeMesh<TPosition>.RemoveVertex(HeVertex<TPosition>)
  nameWithType.vb: HeMesh(Of TPosition).RemoveVertex(HeVertex(Of TPosition))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveVertex*
  name: RemoveVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_RemoveVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.RemoveVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.RemoveVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).RemoveVertex
  nameWithType: HeMesh<TPosition>.RemoveVertex
  nameWithType.vb: HeMesh(Of TPosition).RemoveVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.ToFaceVertexMesh
  name: ToFaceVertexMesh()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_ToFaceVertexMesh
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.ToFaceVertexMesh
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.ToFaceVertexMesh()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).ToFaceVertexMesh()
  nameWithType: HeMesh<TPosition>.ToFaceVertexMesh()
  nameWithType.vb: HeMesh(Of TPosition).ToFaceVertexMesh()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.ToFaceVertexMesh*
  name: ToFaceVertexMesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_ToFaceVertexMesh_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.ToFaceVertexMesh
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.ToFaceVertexMesh
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).ToFaceVertexMesh
  nameWithType: HeMesh<TPosition>.ToFaceVertexMesh
  nameWithType.vb: HeMesh(Of TPosition).ToFaceVertexMesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).ToString()
  nameWithType: HeMesh<TPosition>.ToString()
  nameWithType.vb: HeMesh(Of TPosition).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).ToString
  nameWithType: HeMesh<TPosition>.ToString
  nameWithType.vb: HeMesh(Of TPosition).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetEdge(System.Int32)
  name: TryGetEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_TryGetEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.TryGetEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).TryGetEdge(System.Int32)
  nameWithType: HeMesh<TPosition>.TryGetEdge(Int32)
  nameWithType.vb: HeMesh(Of TPosition).TryGetEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetEdge*
  name: TryGetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_TryGetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.TryGetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).TryGetEdge
  nameWithType: HeMesh<TPosition>.TryGetEdge
  nameWithType.vb: HeMesh(Of TPosition).TryGetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetFace(System.Int32)
  name: TryGetFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_TryGetFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.TryGetFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).TryGetFace(System.Int32)
  nameWithType: HeMesh<TPosition>.TryGetFace(Int32)
  nameWithType.vb: HeMesh(Of TPosition).TryGetFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetFace*
  name: TryGetFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_TryGetFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.TryGetFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).TryGetFace
  nameWithType: HeMesh<TPosition>.TryGetFace
  nameWithType.vb: HeMesh(Of TPosition).TryGetFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetHalfedge(System.Int32)
  name: TryGetHalfedge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_TryGetHalfedge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetHalfedge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.TryGetHalfedge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).TryGetHalfedge(System.Int32)
  nameWithType: HeMesh<TPosition>.TryGetHalfedge(Int32)
  nameWithType.vb: HeMesh(Of TPosition).TryGetHalfedge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetHalfedge*
  name: TryGetHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_TryGetHalfedge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetHalfedge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.TryGetHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).TryGetHalfedge
  nameWithType: HeMesh<TPosition>.TryGetHalfedge
  nameWithType.vb: HeMesh(Of TPosition).TryGetHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetVertex(System.Int32)
  name: TryGetVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_TryGetVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.TryGetVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).TryGetVertex(System.Int32)
  nameWithType: HeMesh<TPosition>.TryGetVertex(Int32)
  nameWithType.vb: HeMesh(Of TPosition).TryGetVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetVertex*
  name: TryGetVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_TryGetVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.TryGetVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.TryGetVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).TryGetVertex
  nameWithType: HeMesh<TPosition>.TryGetVertex
  nameWithType.vb: HeMesh(Of TPosition).TryGetVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.VertexCount
  name: VertexCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_VertexCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.VertexCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.VertexCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).VertexCount
  nameWithType: HeMesh<TPosition>.VertexCount
  nameWithType.vb: HeMesh(Of TPosition).VertexCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.VertexCount*
  name: VertexCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeMesh_1_VertexCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh`1.VertexCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh<TPosition>.VertexCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeMesh(Of TPosition).VertexCount
  nameWithType: HeMesh<TPosition>.VertexCount
  nameWithType.vb: HeMesh(Of TPosition).VertexCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1
  name: HeVertex<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1
  name.vb: HeVertex(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition)
  nameWithType: HeVertex<TPosition>
  nameWithType.vb: HeVertex(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).AdjacentFaces()
  nameWithType: HeVertex<TPosition>.AdjacentFaces()
  nameWithType.vb: HeVertex(Of TPosition).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).AdjacentFaces
  nameWithType: HeVertex<TPosition>.AdjacentFaces
  nameWithType.vb: HeVertex(Of TPosition).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.ConnectedEdges
  name: ConnectedEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_ConnectedEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.ConnectedEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.ConnectedEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).ConnectedEdges()
  nameWithType: HeVertex<TPosition>.ConnectedEdges()
  nameWithType.vb: HeVertex(Of TPosition).ConnectedEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.ConnectedEdges*
  name: ConnectedEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_ConnectedEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.ConnectedEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.ConnectedEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).ConnectedEdges
  nameWithType: HeVertex<TPosition>.ConnectedEdges
  nameWithType.vb: HeVertex(Of TPosition).ConnectedEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_Equals_System_Object_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.Equals(System.Object)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.Equals(System.Object)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).Equals(System.Object)
  nameWithType: HeVertex<TPosition>.Equals(Object)
  nameWithType.vb: HeVertex(Of TPosition).Equals(Object)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.Equals*
  name: Equals
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_Equals_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.Equals
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.Equals
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).Equals
  nameWithType: HeVertex<TPosition>.Equals
  nameWithType.vb: HeVertex(Of TPosition).Equals
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_GetHashCode
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.GetHashCode
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.GetHashCode()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).GetHashCode()
  nameWithType: HeVertex<TPosition>.GetHashCode()
  nameWithType.vb: HeVertex(Of TPosition).GetHashCode()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_GetHashCode_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.GetHashCode
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).GetHashCode
  nameWithType: HeVertex<TPosition>.GetHashCode
  nameWithType.vb: HeVertex(Of TPosition).GetHashCode
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IncomingHalfedges
  name: IncomingHalfedges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_IncomingHalfedges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IncomingHalfedges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.IncomingHalfedges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).IncomingHalfedges()
  nameWithType: HeVertex<TPosition>.IncomingHalfedges()
  nameWithType.vb: HeVertex(Of TPosition).IncomingHalfedges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IncomingHalfedges*
  name: IncomingHalfedges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_IncomingHalfedges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IncomingHalfedges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.IncomingHalfedges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).IncomingHalfedges
  nameWithType: HeVertex<TPosition>.IncomingHalfedges
  nameWithType.vb: HeVertex(Of TPosition).IncomingHalfedges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IsBoundary
  name: IsBoundary()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_IsBoundary
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IsBoundary
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.IsBoundary()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).IsBoundary()
  nameWithType: HeVertex<TPosition>.IsBoundary()
  nameWithType.vb: HeVertex(Of TPosition).IsBoundary()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IsBoundary*
  name: IsBoundary
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_IsBoundary_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IsBoundary
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.IsBoundary
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).IsBoundary
  nameWithType: HeVertex<TPosition>.IsBoundary
  nameWithType.vb: HeVertex(Of TPosition).IsBoundary
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IsConnected
  name: IsConnected()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_IsConnected
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IsConnected
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.IsConnected()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).IsConnected()
  nameWithType: HeVertex<TPosition>.IsConnected()
  nameWithType.vb: HeVertex(Of TPosition).IsConnected()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IsConnected*
  name: IsConnected
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_IsConnected_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.IsConnected
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.IsConnected
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).IsConnected
  nameWithType: HeVertex<TPosition>.IsConnected
  nameWithType.vb: HeVertex(Of TPosition).IsConnected
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.NeighbourVertices
  name: NeighbourVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_NeighbourVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.NeighbourVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.NeighbourVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).NeighbourVertices()
  nameWithType: HeVertex<TPosition>.NeighbourVertices()
  nameWithType.vb: HeVertex(Of TPosition).NeighbourVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.NeighbourVertices*
  name: NeighbourVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_NeighbourVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.NeighbourVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.NeighbourVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).NeighbourVertices
  nameWithType: HeVertex<TPosition>.NeighbourVertices
  nameWithType.vb: HeVertex(Of TPosition).NeighbourVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.OutgoingHalfedge
  name: OutgoingHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_OutgoingHalfedge
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.OutgoingHalfedge
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.OutgoingHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).OutgoingHalfedge
  nameWithType: HeVertex<TPosition>.OutgoingHalfedge
  nameWithType.vb: HeVertex(Of TPosition).OutgoingHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.OutgoingHalfedge*
  name: OutgoingHalfedge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_OutgoingHalfedge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.OutgoingHalfedge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.OutgoingHalfedge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).OutgoingHalfedge
  nameWithType: HeVertex<TPosition>.OutgoingHalfedge
  nameWithType.vb: HeVertex(Of TPosition).OutgoingHalfedge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.OutgoingHalfedges
  name: OutgoingHalfedges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_OutgoingHalfedges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.OutgoingHalfedges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.OutgoingHalfedges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).OutgoingHalfedges()
  nameWithType: HeVertex<TPosition>.OutgoingHalfedges()
  nameWithType.vb: HeVertex(Of TPosition).OutgoingHalfedges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.OutgoingHalfedges*
  name: OutgoingHalfedges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_OutgoingHalfedges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.OutgoingHalfedges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.OutgoingHalfedges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).OutgoingHalfedges
  nameWithType: HeVertex<TPosition>.OutgoingHalfedges
  nameWithType.vb: HeVertex(Of TPosition).OutgoingHalfedges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.ToString
  name: ToString()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_ToString
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.ToString
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.ToString()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).ToString()
  nameWithType: HeVertex<TPosition>.ToString()
  nameWithType.vb: HeVertex(Of TPosition).ToString()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.ToString*
  name: ToString
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_ToString_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.ToString
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.ToString
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).ToString
  nameWithType: HeVertex<TPosition>.ToString
  nameWithType.vb: HeVertex(Of TPosition).ToString
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.Valence
  name: Valence()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_Valence
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.Valence
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.Valence()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).Valence()
  nameWithType: HeVertex<TPosition>.Valence()
  nameWithType.vb: HeVertex(Of TPosition).Valence()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.Valence*
  name: Valence
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_HalfedgeMesh_HeVertex_1_Valence_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex`1.Valence
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex<TPosition>.Valence
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.HalfedgeMesh.HeVertex(Of TPosition).Valence
  nameWithType: HeVertex<TPosition>.Valence
  nameWithType.vb: HeVertex(Of TPosition).Valence
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1
  name: IEdge<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1
  name.vb: IEdge(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition)
  nameWithType: IEdge<TPosition>
  nameWithType.vb: IEdge(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IEdge_1_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition).AdjacentFaces()
  nameWithType: IEdge<TPosition>.AdjacentFaces()
  nameWithType.vb: IEdge(Of TPosition).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IEdge_1_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition).AdjacentFaces
  nameWithType: IEdge<TPosition>.AdjacentFaces
  nameWithType.vb: IEdge(Of TPosition).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.EndVertex
  name: EndVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IEdge_1_EndVertex
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.EndVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.EndVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition).EndVertex
  nameWithType: IEdge<TPosition>.EndVertex
  nameWithType.vb: IEdge(Of TPosition).EndVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.EndVertex*
  name: EndVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IEdge_1_EndVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.EndVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.EndVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition).EndVertex
  nameWithType: IEdge<TPosition>.EndVertex
  nameWithType.vb: IEdge(Of TPosition).EndVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.Index
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IEdge_1_Index
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.Index
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition).Index
  nameWithType: IEdge<TPosition>.Index
  nameWithType.vb: IEdge(Of TPosition).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.Index*
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IEdge_1_Index_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.Index
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition).Index
  nameWithType: IEdge<TPosition>.Index
  nameWithType.vb: IEdge(Of TPosition).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.IsBoundary
  name: IsBoundary()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IEdge_1_IsBoundary
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.IsBoundary
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.IsBoundary()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition).IsBoundary()
  nameWithType: IEdge<TPosition>.IsBoundary()
  nameWithType.vb: IEdge(Of TPosition).IsBoundary()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.IsBoundary*
  name: IsBoundary
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IEdge_1_IsBoundary_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.IsBoundary
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.IsBoundary
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition).IsBoundary
  nameWithType: IEdge<TPosition>.IsBoundary
  nameWithType.vb: IEdge(Of TPosition).IsBoundary
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.StartVertex
  name: StartVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IEdge_1_StartVertex
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.StartVertex
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.StartVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition).StartVertex
  nameWithType: IEdge<TPosition>.StartVertex
  nameWithType.vb: IEdge(Of TPosition).StartVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.StartVertex*
  name: StartVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IEdge-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IEdge_1_StartVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IEdge`1.StartVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IEdge<TPosition>.StartVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IEdge(Of TPosition).StartVertex
  nameWithType: IEdge<TPosition>.StartVertex
  nameWithType.vb: IEdge(Of TPosition).StartVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IFace`1
  name: IFace<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IFace-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.IFace`1
  name.vb: IFace(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace(Of TPosition)
  nameWithType: IFace<TPosition>
  nameWithType.vb: IFace(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IFace_1_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace(Of TPosition).AdjacentFaces()
  nameWithType: IFace<TPosition>.AdjacentFaces()
  nameWithType.vb: IFace(Of TPosition).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IFace_1_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace(Of TPosition).AdjacentFaces
  nameWithType: IFace<TPosition>.AdjacentFaces
  nameWithType.vb: IFace(Of TPosition).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.FaceEdges
  name: FaceEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IFace_1_FaceEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.FaceEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace(Of TPosition).FaceEdges()
  nameWithType: IFace<TPosition>.FaceEdges()
  nameWithType.vb: IFace(Of TPosition).FaceEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.FaceEdges*
  name: FaceEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IFace_1_FaceEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.FaceEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace(Of TPosition).FaceEdges
  nameWithType: IFace<TPosition>.FaceEdges
  nameWithType.vb: IFace(Of TPosition).FaceEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.FaceVertices
  name: FaceVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IFace_1_FaceVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.FaceVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace(Of TPosition).FaceVertices()
  nameWithType: IFace<TPosition>.FaceVertices()
  nameWithType.vb: IFace(Of TPosition).FaceVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.FaceVertices*
  name: FaceVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IFace_1_FaceVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.FaceVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.FaceVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace(Of TPosition).FaceVertices
  nameWithType: IFace<TPosition>.FaceVertices
  nameWithType.vb: IFace(Of TPosition).FaceVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.Index
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IFace_1_Index
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.Index
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace(Of TPosition).Index
  nameWithType: IFace<TPosition>.Index
  nameWithType.vb: IFace(Of TPosition).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.Index*
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IFace-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IFace_1_Index_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IFace`1.Index
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IFace<TPosition>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IFace(Of TPosition).Index
  nameWithType: IFace<TPosition>.Index
  nameWithType.vb: IFace(Of TPosition).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1
  name: IMesh<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1
  name.vb: IMesh(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition)
  nameWithType: IMesh<TPosition>
  nameWithType.vb: IMesh(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddEdge(System.Int32,System.Int32)
  name: AddEdge(Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_AddEdge_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddEdge(System.Int32,System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddEdge(System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).AddEdge(System.Int32, System.Int32)
  nameWithType: IMesh<TPosition>.AddEdge(Int32, Int32)
  nameWithType.vb: IMesh(Of TPosition).AddEdge(Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddEdge*
  name: AddEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_AddEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).AddEdge
  nameWithType: IMesh<TPosition>.AddEdge
  nameWithType.vb: IMesh(Of TPosition).AddEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddFace(List{System.Int32})
  name: AddFace(List<Int32>)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_AddFace_List_System_Int32__
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddFace(List{System.Int32})
  name.vb: AddFace(List(Of Int32))
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(List<System.Int32>)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).AddFace(List(Of System.Int32))
  nameWithType: IMesh<TPosition>.AddFace(List<Int32>)
  nameWithType.vb: IMesh(Of TPosition).AddFace(List(Of Int32))
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddFace(System.Int32,System.Int32,System.Int32)
  name: AddFace(Int32, Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_AddFace_System_Int32_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddFace(System.Int32,System.Int32,System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(System.Int32, System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).AddFace(System.Int32, System.Int32, System.Int32)
  nameWithType: IMesh<TPosition>.AddFace(Int32, Int32, Int32)
  nameWithType.vb: IMesh(Of TPosition).AddFace(Int32, Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddFace(System.Int32,System.Int32,System.Int32,System.Int32)
  name: AddFace(Int32, Int32, Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_AddFace_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddFace(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace(System.Int32, System.Int32, System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).AddFace(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: IMesh<TPosition>.AddFace(Int32, Int32, Int32, Int32)
  nameWithType.vb: IMesh(Of TPosition).AddFace(Int32, Int32, Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddFace*
  name: AddFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_AddFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).AddFace
  nameWithType: IMesh<TPosition>.AddFace
  nameWithType.vb: IMesh(Of TPosition).AddFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddVertex(`0)
  name: AddVertex(TPosition)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_AddVertex__0_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddVertex(`0)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddVertex(TPosition)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).AddVertex(TPosition)
  nameWithType: IMesh<TPosition>.AddVertex(TPosition)
  nameWithType.vb: IMesh(Of TPosition).AddVertex(TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddVertex*
  name: AddVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_AddVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.AddVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.AddVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).AddVertex
  nameWithType: IMesh<TPosition>.AddVertex
  nameWithType.vb: IMesh(Of TPosition).AddVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.CleanMesh(System.Boolean)
  name: CleanMesh(Boolean)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_CleanMesh_System_Boolean_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.CleanMesh(System.Boolean)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.CleanMesh(System.Boolean)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).CleanMesh(System.Boolean)
  nameWithType: IMesh<TPosition>.CleanMesh(Boolean)
  nameWithType.vb: IMesh(Of TPosition).CleanMesh(Boolean)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.CleanMesh*
  name: CleanMesh
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_CleanMesh_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.CleanMesh
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.CleanMesh
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).CleanMesh
  nameWithType: IMesh<TPosition>.CleanMesh
  nameWithType.vb: IMesh(Of TPosition).CleanMesh
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EdgeBetween(System.Int32,System.Int32)
  name: EdgeBetween(Int32, Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_EdgeBetween_System_Int32_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EdgeBetween(System.Int32,System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeBetween(System.Int32, System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).EdgeBetween(System.Int32, System.Int32)
  nameWithType: IMesh<TPosition>.EdgeBetween(Int32, Int32)
  nameWithType.vb: IMesh(Of TPosition).EdgeBetween(Int32, Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EdgeBetween*
  name: EdgeBetween
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_EdgeBetween_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EdgeBetween
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeBetween
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).EdgeBetween
  nameWithType: IMesh<TPosition>.EdgeBetween
  nameWithType.vb: IMesh(Of TPosition).EdgeBetween
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EdgeCount
  name: EdgeCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_EdgeCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EdgeCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).EdgeCount
  nameWithType: IMesh<TPosition>.EdgeCount
  nameWithType.vb: IMesh(Of TPosition).EdgeCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EdgeCount*
  name: EdgeCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_EdgeCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EdgeCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EdgeCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).EdgeCount
  nameWithType: IMesh<TPosition>.EdgeCount
  nameWithType.vb: IMesh(Of TPosition).EdgeCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseEdge(System.Int32)
  name: EraseEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_EraseEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EraseEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).EraseEdge(System.Int32)
  nameWithType: IMesh<TPosition>.EraseEdge(Int32)
  nameWithType.vb: IMesh(Of TPosition).EraseEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseEdge*
  name: EraseEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_EraseEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EraseEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).EraseEdge
  nameWithType: IMesh<TPosition>.EraseEdge
  nameWithType.vb: IMesh(Of TPosition).EraseEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseFace(System.Int32)
  name: EraseFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_EraseFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EraseFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).EraseFace(System.Int32)
  nameWithType: IMesh<TPosition>.EraseFace(Int32)
  nameWithType.vb: IMesh(Of TPosition).EraseFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseFace*
  name: EraseFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_EraseFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EraseFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).EraseFace
  nameWithType: IMesh<TPosition>.EraseFace
  nameWithType.vb: IMesh(Of TPosition).EraseFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseVertex(System.Int32)
  name: EraseVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_EraseVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EraseVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).EraseVertex(System.Int32)
  nameWithType: IMesh<TPosition>.EraseVertex(Int32)
  nameWithType.vb: IMesh(Of TPosition).EraseVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseVertex*
  name: EraseVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_EraseVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.EraseVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.EraseVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).EraseVertex
  nameWithType: IMesh<TPosition>.EraseVertex
  nameWithType.vb: IMesh(Of TPosition).EraseVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.FaceCount
  name: FaceCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_FaceCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.FaceCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.FaceCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).FaceCount
  nameWithType: IMesh<TPosition>.FaceCount
  nameWithType.vb: IMesh(Of TPosition).FaceCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.FaceCount*
  name: FaceCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_FaceCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.FaceCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.FaceCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).FaceCount
  nameWithType: IMesh<TPosition>.FaceCount
  nameWithType.vb: IMesh(Of TPosition).FaceCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetEdge(System.Int32)
  name: GetEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetEdge(System.Int32)
  nameWithType: IMesh<TPosition>.GetEdge(Int32)
  nameWithType.vb: IMesh(Of TPosition).GetEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetEdge*
  name: GetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetEdge
  nameWithType: IMesh<TPosition>.GetEdge
  nameWithType.vb: IMesh(Of TPosition).GetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetEdges
  name: GetEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetEdges()
  nameWithType: IMesh<TPosition>.GetEdges()
  nameWithType.vb: IMesh(Of TPosition).GetEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetEdges*
  name: GetEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetEdges
  nameWithType: IMesh<TPosition>.GetEdges
  nameWithType.vb: IMesh(Of TPosition).GetEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetFace(System.Int32)
  name: GetFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetFace(System.Int32)
  nameWithType: IMesh<TPosition>.GetFace(Int32)
  nameWithType.vb: IMesh(Of TPosition).GetFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetFace*
  name: GetFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetFace
  nameWithType: IMesh<TPosition>.GetFace
  nameWithType.vb: IMesh(Of TPosition).GetFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetFaces
  name: GetFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetFaces()
  nameWithType: IMesh<TPosition>.GetFaces()
  nameWithType.vb: IMesh(Of TPosition).GetFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetFaces*
  name: GetFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetFaces
  nameWithType: IMesh<TPosition>.GetFaces
  nameWithType.vb: IMesh(Of TPosition).GetFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetVertex(System.Int32)
  name: GetVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetVertex(System.Int32)
  nameWithType: IMesh<TPosition>.GetVertex(Int32)
  nameWithType.vb: IMesh(Of TPosition).GetVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetVertex*
  name: GetVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetVertex
  nameWithType: IMesh<TPosition>.GetVertex
  nameWithType.vb: IMesh(Of TPosition).GetVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetVertices
  name: GetVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetVertices()
  nameWithType: IMesh<TPosition>.GetVertices()
  nameWithType.vb: IMesh(Of TPosition).GetVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetVertices*
  name: GetVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_GetVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.GetVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.GetVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).GetVertices
  nameWithType: IMesh<TPosition>.GetVertices
  nameWithType.vb: IMesh(Of TPosition).GetVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveEdge(System.Int32)
  name: RemoveEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_RemoveEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.RemoveEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).RemoveEdge(System.Int32)
  nameWithType: IMesh<TPosition>.RemoveEdge(Int32)
  nameWithType.vb: IMesh(Of TPosition).RemoveEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveEdge*
  name: RemoveEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_RemoveEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.RemoveEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).RemoveEdge
  nameWithType: IMesh<TPosition>.RemoveEdge
  nameWithType.vb: IMesh(Of TPosition).RemoveEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveFace(System.Int32)
  name: RemoveFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_RemoveFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.RemoveFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).RemoveFace(System.Int32)
  nameWithType: IMesh<TPosition>.RemoveFace(Int32)
  nameWithType.vb: IMesh(Of TPosition).RemoveFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveFace*
  name: RemoveFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_RemoveFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.RemoveFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).RemoveFace
  nameWithType: IMesh<TPosition>.RemoveFace
  nameWithType.vb: IMesh(Of TPosition).RemoveFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveVertex(System.Int32)
  name: RemoveVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_RemoveVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.RemoveVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).RemoveVertex(System.Int32)
  nameWithType: IMesh<TPosition>.RemoveVertex(Int32)
  nameWithType.vb: IMesh(Of TPosition).RemoveVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveVertex*
  name: RemoveVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_RemoveVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.RemoveVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.RemoveVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).RemoveVertex
  nameWithType: IMesh<TPosition>.RemoveVertex
  nameWithType.vb: IMesh(Of TPosition).RemoveVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetEdge(System.Int32)
  name: TryGetEdge(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_TryGetEdge_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetEdge(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetEdge(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).TryGetEdge(System.Int32)
  nameWithType: IMesh<TPosition>.TryGetEdge(Int32)
  nameWithType.vb: IMesh(Of TPosition).TryGetEdge(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetEdge*
  name: TryGetEdge
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_TryGetEdge_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetEdge
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetEdge
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).TryGetEdge
  nameWithType: IMesh<TPosition>.TryGetEdge
  nameWithType.vb: IMesh(Of TPosition).TryGetEdge
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetFace(System.Int32)
  name: TryGetFace(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_TryGetFace_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetFace(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetFace(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).TryGetFace(System.Int32)
  nameWithType: IMesh<TPosition>.TryGetFace(Int32)
  nameWithType.vb: IMesh(Of TPosition).TryGetFace(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetFace*
  name: TryGetFace
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_TryGetFace_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetFace
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetFace
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).TryGetFace
  nameWithType: IMesh<TPosition>.TryGetFace
  nameWithType.vb: IMesh(Of TPosition).TryGetFace
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetVertex(System.Int32)
  name: TryGetVertex(Int32)
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_TryGetVertex_System_Int32_
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetVertex(System.Int32)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetVertex(System.Int32)
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).TryGetVertex(System.Int32)
  nameWithType: IMesh<TPosition>.TryGetVertex(Int32)
  nameWithType.vb: IMesh(Of TPosition).TryGetVertex(Int32)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetVertex*
  name: TryGetVertex
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_TryGetVertex_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.TryGetVertex
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.TryGetVertex
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).TryGetVertex
  nameWithType: IMesh<TPosition>.TryGetVertex
  nameWithType.vb: IMesh(Of TPosition).TryGetVertex
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.VertexCount
  name: VertexCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_VertexCount
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.VertexCount
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.VertexCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).VertexCount
  nameWithType: IMesh<TPosition>.VertexCount
  nameWithType.vb: IMesh(Of TPosition).VertexCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.VertexCount*
  name: VertexCount
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IMesh-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IMesh_1_VertexCount_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IMesh`1.VertexCount
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IMesh<TPosition>.VertexCount
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IMesh(Of TPosition).VertexCount
  nameWithType: IMesh<TPosition>.VertexCount
  nameWithType.vb: IMesh(Of TPosition).VertexCount
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1
  name: IVertex<TPosition>
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html
  commentId: T:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1
  name.vb: IVertex(Of TPosition)
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition)
  nameWithType: IVertex<TPosition>
  nameWithType.vb: IVertex(Of TPosition)
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.AdjacentFaces
  name: AdjacentFaces()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_AdjacentFaces
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.AdjacentFaces
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.AdjacentFaces()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).AdjacentFaces()
  nameWithType: IVertex<TPosition>.AdjacentFaces()
  nameWithType.vb: IVertex(Of TPosition).AdjacentFaces()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.AdjacentFaces*
  name: AdjacentFaces
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_AdjacentFaces_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.AdjacentFaces
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.AdjacentFaces
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).AdjacentFaces
  nameWithType: IVertex<TPosition>.AdjacentFaces
  nameWithType.vb: IVertex(Of TPosition).AdjacentFaces
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.ConnectedEdges
  name: ConnectedEdges()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_ConnectedEdges
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.ConnectedEdges
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.ConnectedEdges()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).ConnectedEdges()
  nameWithType: IVertex<TPosition>.ConnectedEdges()
  nameWithType.vb: IVertex(Of TPosition).ConnectedEdges()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.ConnectedEdges*
  name: ConnectedEdges
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_ConnectedEdges_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.ConnectedEdges
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.ConnectedEdges
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).ConnectedEdges
  nameWithType: IVertex<TPosition>.ConnectedEdges
  nameWithType.vb: IVertex(Of TPosition).ConnectedEdges
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Index
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_Index
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Index
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).Index
  nameWithType: IVertex<TPosition>.Index
  nameWithType.vb: IVertex(Of TPosition).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Index*
  name: Index
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_Index_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Index
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.Index
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).Index
  nameWithType: IVertex<TPosition>.Index
  nameWithType.vb: IVertex(Of TPosition).Index
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.IsBoundary
  name: IsBoundary()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_IsBoundary
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.IsBoundary
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.IsBoundary()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).IsBoundary()
  nameWithType: IVertex<TPosition>.IsBoundary()
  nameWithType.vb: IVertex(Of TPosition).IsBoundary()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.IsBoundary*
  name: IsBoundary
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_IsBoundary_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.IsBoundary
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.IsBoundary
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).IsBoundary
  nameWithType: IVertex<TPosition>.IsBoundary
  nameWithType.vb: IVertex(Of TPosition).IsBoundary
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.IsConnected
  name: IsConnected()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_IsConnected
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.IsConnected
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.IsConnected()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).IsConnected()
  nameWithType: IVertex<TPosition>.IsConnected()
  nameWithType.vb: IVertex(Of TPosition).IsConnected()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.IsConnected*
  name: IsConnected
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_IsConnected_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.IsConnected
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.IsConnected
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).IsConnected
  nameWithType: IVertex<TPosition>.IsConnected
  nameWithType.vb: IVertex(Of TPosition).IsConnected
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.NeighbourVertices
  name: NeighbourVertices()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_NeighbourVertices
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.NeighbourVertices
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.NeighbourVertices()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).NeighbourVertices()
  nameWithType: IVertex<TPosition>.NeighbourVertices()
  nameWithType.vb: IVertex(Of TPosition).NeighbourVertices()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.NeighbourVertices*
  name: NeighbourVertices
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_NeighbourVertices_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.NeighbourVertices
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.NeighbourVertices
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).NeighbourVertices
  nameWithType: IVertex<TPosition>.NeighbourVertices
  nameWithType.vb: IVertex(Of TPosition).NeighbourVertices
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Position
  name: Position
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_Position
  commentId: P:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Position
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.Position
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).Position
  nameWithType: IVertex<TPosition>.Position
  nameWithType.vb: IVertex(Of TPosition).Position
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Position*
  name: Position
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_Position_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Position
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.Position
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).Position
  nameWithType: IVertex<TPosition>.Position
  nameWithType.vb: IVertex(Of TPosition).Position
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Valence
  name: Valence()
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_Valence
  commentId: M:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Valence
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.Valence()
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).Valence()
  nameWithType: IVertex<TPosition>.Valence()
  nameWithType.vb: IVertex(Of TPosition).Valence()
- uid: BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Valence*
  name: Valence
  href: api/BRIDGES.DataStructures.PolyhedralMeshes.IVertex-1.html#BRIDGES_DataStructures_PolyhedralMeshes_IVertex_1_Valence_
  commentId: Overload:BRIDGES.DataStructures.PolyhedralMeshes.IVertex`1.Valence
  isSpec: "True"
  fullName: BRIDGES.DataStructures.PolyhedralMeshes.IVertex<TPosition>.Valence
  fullName.vb: BRIDGES.DataStructures.PolyhedralMeshes.IVertex(Of TPosition).Valence
  nameWithType: IVertex<TPosition>.Valence
  nameWithType.vb: IVertex(Of TPosition).Valence
- uid: BRIDGES.Geometry.Euclidean3D
  name: BRIDGES.Geometry.Euclidean3D
  href: api/BRIDGES.Geometry.Euclidean3D.html
  commentId: N:BRIDGES.Geometry.Euclidean3D
  fullName: BRIDGES.Geometry.Euclidean3D
  nameWithType: BRIDGES.Geometry.Euclidean3D
- uid: BRIDGES.Geometry.Euclidean3D.Basis
  name: Basis
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Basis
  fullName: BRIDGES.Geometry.Euclidean3D.Basis
  nameWithType: Basis
- uid: BRIDGES.Geometry.Euclidean3D.Basis.#ctor(BRIDGES.Geometry.Euclidean3D.Basis)
  name: Basis(Basis)
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis__ctor_BRIDGES_Geometry_Euclidean3D_Basis_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Basis.#ctor(BRIDGES.Geometry.Euclidean3D.Basis)
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Basis(BRIDGES.Geometry.Euclidean3D.Basis)
  nameWithType: Basis.Basis(Basis)
- uid: BRIDGES.Geometry.Euclidean3D.Basis.#ctor(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Basis(Vector, Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis__ctor_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Basis.#ctor(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Basis(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Basis.Basis(Vector, Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Basis.#ctor(BRIDGES.Geometry.Euclidean3D.Vector[])
  name: Basis(Vector[])
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis__ctor_BRIDGES_Geometry_Euclidean3D_Vector___
  commentId: M:BRIDGES.Geometry.Euclidean3D.Basis.#ctor(BRIDGES.Geometry.Euclidean3D.Vector[])
  name.vb: Basis(Vector())
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Basis(BRIDGES.Geometry.Euclidean3D.Vector[])
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Basis.Basis(BRIDGES.Geometry.Euclidean3D.Vector())
  nameWithType: Basis.Basis(Vector[])
  nameWithType.vb: Basis.Basis(Vector())
- uid: BRIDGES.Geometry.Euclidean3D.Basis.#ctor*
  name: Basis
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Basis.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Basis
  nameWithType: Basis.Basis
- uid: BRIDGES.Geometry.Euclidean3D.Basis.Dimension
  name: Dimension
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_Dimension
  commentId: P:BRIDGES.Geometry.Euclidean3D.Basis.Dimension
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Dimension
  nameWithType: Basis.Dimension
- uid: BRIDGES.Geometry.Euclidean3D.Basis.Dimension*
  name: Dimension
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_Dimension_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Basis.Dimension
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Dimension
  nameWithType: Basis.Dimension
- uid: BRIDGES.Geometry.Euclidean3D.Basis.Equals(BRIDGES.Geometry.Euclidean3D.Basis)
  name: Equals(Basis)
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_Equals_BRIDGES_Geometry_Euclidean3D_Basis_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Basis.Equals(BRIDGES.Geometry.Euclidean3D.Basis)
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Equals(BRIDGES.Geometry.Euclidean3D.Basis)
  nameWithType: Basis.Equals(Basis)
- uid: BRIDGES.Geometry.Euclidean3D.Basis.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Basis.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Equals(System.Object)
  nameWithType: Basis.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Basis.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Basis.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Equals
  nameWithType: Basis.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Basis.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Basis.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.GetHashCode()
  nameWithType: Basis.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Basis.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Basis.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.GetHashCode
  nameWithType: Basis.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Basis.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_Item_System_Int32_
  commentId: P:BRIDGES.Geometry.Euclidean3D.Basis.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Item[System.Int32]
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Basis.Item(System.Int32)
  nameWithType: Basis.Item[Int32]
  nameWithType.vb: Basis.Item(Int32)
- uid: BRIDGES.Geometry.Euclidean3D.Basis.Item*
  name: Item
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_Item_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Basis.Item
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.Item
  nameWithType: Basis.Item
- uid: BRIDGES.Geometry.Euclidean3D.Basis.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Basis.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.ToString()
  nameWithType: Basis.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Basis.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Basis.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.ToString
  nameWithType: Basis.ToString
- uid: BRIDGES.Geometry.Euclidean3D.Basis.XAxis
  name: XAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_XAxis
  commentId: P:BRIDGES.Geometry.Euclidean3D.Basis.XAxis
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.XAxis
  nameWithType: Basis.XAxis
- uid: BRIDGES.Geometry.Euclidean3D.Basis.XAxis*
  name: XAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_XAxis_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Basis.XAxis
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.XAxis
  nameWithType: Basis.XAxis
- uid: BRIDGES.Geometry.Euclidean3D.Basis.YAxis
  name: YAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_YAxis
  commentId: P:BRIDGES.Geometry.Euclidean3D.Basis.YAxis
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.YAxis
  nameWithType: Basis.YAxis
- uid: BRIDGES.Geometry.Euclidean3D.Basis.YAxis*
  name: YAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_YAxis_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Basis.YAxis
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.YAxis
  nameWithType: Basis.YAxis
- uid: BRIDGES.Geometry.Euclidean3D.Basis.ZAxis
  name: ZAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_ZAxis
  commentId: P:BRIDGES.Geometry.Euclidean3D.Basis.ZAxis
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.ZAxis
  nameWithType: Basis.ZAxis
- uid: BRIDGES.Geometry.Euclidean3D.Basis.ZAxis*
  name: ZAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Basis.html#BRIDGES_Geometry_Euclidean3D_Basis_ZAxis_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Basis.ZAxis
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Basis.ZAxis
  nameWithType: Basis.ZAxis
- uid: BRIDGES.Geometry.Euclidean3D.BSplineCurve
  name: BSplineCurve
  href: api/BRIDGES.Geometry.Euclidean3D.BSplineCurve.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.BSplineCurve
  fullName: BRIDGES.Geometry.Euclidean3D.BSplineCurve
  nameWithType: BSplineCurve
- uid: BRIDGES.Geometry.Euclidean3D.BSplineCurve.#ctor(System.Int32,IEnumerable{BRIDGES.Geometry.Euclidean3D.Point})
  name: BSplineCurve(Int32, IEnumerable<Point>)
  href: api/BRIDGES.Geometry.Euclidean3D.BSplineCurve.html#BRIDGES_Geometry_Euclidean3D_BSplineCurve__ctor_System_Int32_IEnumerable_BRIDGES_Geometry_Euclidean3D_Point__
  commentId: M:BRIDGES.Geometry.Euclidean3D.BSplineCurve.#ctor(System.Int32,IEnumerable{BRIDGES.Geometry.Euclidean3D.Point})
  name.vb: BSplineCurve(Int32, IEnumerable(Of Point))
  fullName: BRIDGES.Geometry.Euclidean3D.BSplineCurve.BSplineCurve(System.Int32, IEnumerable<BRIDGES.Geometry.Euclidean3D.Point>)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.BSplineCurve.BSplineCurve(System.Int32, IEnumerable(Of BRIDGES.Geometry.Euclidean3D.Point))
  nameWithType: BSplineCurve.BSplineCurve(Int32, IEnumerable<Point>)
  nameWithType.vb: BSplineCurve.BSplineCurve(Int32, IEnumerable(Of Point))
- uid: BRIDGES.Geometry.Euclidean3D.BSplineCurve.#ctor(System.Int32,IEnumerable{System.Double},IEnumerable{BRIDGES.Geometry.Euclidean3D.Point})
  name: BSplineCurve(Int32, IEnumerable<Double>, IEnumerable<Point>)
  href: api/BRIDGES.Geometry.Euclidean3D.BSplineCurve.html#BRIDGES_Geometry_Euclidean3D_BSplineCurve__ctor_System_Int32_IEnumerable_System_Double__IEnumerable_BRIDGES_Geometry_Euclidean3D_Point__
  commentId: M:BRIDGES.Geometry.Euclidean3D.BSplineCurve.#ctor(System.Int32,IEnumerable{System.Double},IEnumerable{BRIDGES.Geometry.Euclidean3D.Point})
  name.vb: BSplineCurve(Int32, IEnumerable(Of Double), IEnumerable(Of Point))
  fullName: BRIDGES.Geometry.Euclidean3D.BSplineCurve.BSplineCurve(System.Int32, IEnumerable<System.Double>, IEnumerable<BRIDGES.Geometry.Euclidean3D.Point>)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.BSplineCurve.BSplineCurve(System.Int32, IEnumerable(Of System.Double), IEnumerable(Of BRIDGES.Geometry.Euclidean3D.Point))
  nameWithType: BSplineCurve.BSplineCurve(Int32, IEnumerable<Double>, IEnumerable<Point>)
  nameWithType.vb: BSplineCurve.BSplineCurve(Int32, IEnumerable(Of Double), IEnumerable(Of Point))
- uid: BRIDGES.Geometry.Euclidean3D.BSplineCurve.#ctor*
  name: BSplineCurve
  href: api/BRIDGES.Geometry.Euclidean3D.BSplineCurve.html#BRIDGES_Geometry_Euclidean3D_BSplineCurve__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.BSplineCurve.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.BSplineCurve.BSplineCurve
  nameWithType: BSplineCurve.BSplineCurve
- uid: BRIDGES.Geometry.Euclidean3D.BSplineSurface
  name: BSplineSurface
  href: api/BRIDGES.Geometry.Euclidean3D.BSplineSurface.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.BSplineSurface
  fullName: BRIDGES.Geometry.Euclidean3D.BSplineSurface
  nameWithType: BSplineSurface
- uid: BRIDGES.Geometry.Euclidean3D.BSplineSurface.#ctor(System.Int32,System.Int32,BRIDGES.Geometry.Euclidean3D.Point[0:,0:])
  name: BSplineSurface(Int32, Int32, Point[,])
  href: api/BRIDGES.Geometry.Euclidean3D.BSplineSurface.html#BRIDGES_Geometry_Euclidean3D_BSplineSurface__ctor_System_Int32_System_Int32_BRIDGES_Geometry_Euclidean3D_Point_0__0___
  commentId: M:BRIDGES.Geometry.Euclidean3D.BSplineSurface.#ctor(System.Int32,System.Int32,BRIDGES.Geometry.Euclidean3D.Point[0:,0:])
  name.vb: BSplineSurface(Int32, Int32, Point(,))
  fullName: BRIDGES.Geometry.Euclidean3D.BSplineSurface.BSplineSurface(System.Int32, System.Int32, BRIDGES.Geometry.Euclidean3D.Point[,])
  fullName.vb: BRIDGES.Geometry.Euclidean3D.BSplineSurface.BSplineSurface(System.Int32, System.Int32, BRIDGES.Geometry.Euclidean3D.Point(,))
  nameWithType: BSplineSurface.BSplineSurface(Int32, Int32, Point[,])
  nameWithType.vb: BSplineSurface.BSplineSurface(Int32, Int32, Point(,))
- uid: BRIDGES.Geometry.Euclidean3D.BSplineSurface.#ctor*
  name: BSplineSurface
  href: api/BRIDGES.Geometry.Euclidean3D.BSplineSurface.html#BRIDGES_Geometry_Euclidean3D_BSplineSurface__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.BSplineSurface.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.BSplineSurface.BSplineSurface
  nameWithType: BSplineSurface.BSplineSurface
- uid: BRIDGES.Geometry.Euclidean3D.Circle
  name: Circle
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Circle
  fullName: BRIDGES.Geometry.Euclidean3D.Circle
  nameWithType: Circle
- uid: BRIDGES.Geometry.Euclidean3D.Circle.#ctor(BRIDGES.Geometry.Euclidean3D.Plane,System.Double)
  name: Circle(Plane, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle__ctor_BRIDGES_Geometry_Euclidean3D_Plane_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Circle.#ctor(BRIDGES.Geometry.Euclidean3D.Plane,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Circle(BRIDGES.Geometry.Euclidean3D.Plane, System.Double)
  nameWithType: Circle.Circle(Plane, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Circle.#ctor(BRIDGES.Geometry.Euclidean3D.Point,System.Double)
  name: Circle(Point, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle__ctor_BRIDGES_Geometry_Euclidean3D_Point_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Circle.#ctor(BRIDGES.Geometry.Euclidean3D.Point,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Circle(BRIDGES.Geometry.Euclidean3D.Point, System.Double)
  nameWithType: Circle.Circle(Point, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Circle.#ctor*
  name: Circle
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Circle.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Circle
  nameWithType: Circle.Circle
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Centre
  name: Centre
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Centre
  commentId: P:BRIDGES.Geometry.Euclidean3D.Circle.Centre
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Centre
  nameWithType: Circle.Centre
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Centre*
  name: Centre
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Centre_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Circle.Centre
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Centre
  nameWithType: Circle.Centre
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Equals(BRIDGES.Geometry.Euclidean3D.Circle)
  name: Equals(Circle)
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Equals_BRIDGES_Geometry_Euclidean3D_Circle_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Circle.Equals(BRIDGES.Geometry.Euclidean3D.Circle)
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Equals(BRIDGES.Geometry.Euclidean3D.Circle)
  nameWithType: Circle.Equals(Circle)
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Circle.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Equals(System.Object)
  nameWithType: Circle.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Circle.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Equals
  nameWithType: Circle.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Flip
  name: Flip()
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Flip
  commentId: M:BRIDGES.Geometry.Euclidean3D.Circle.Flip
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Flip()
  nameWithType: Circle.Flip()
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Flip*
  name: Flip
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Flip_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Circle.Flip
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Flip
  nameWithType: Circle.Flip
- uid: BRIDGES.Geometry.Euclidean3D.Circle.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Circle.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.GetHashCode()
  nameWithType: Circle.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Circle.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Circle.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.GetHashCode
  nameWithType: Circle.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Circle.IsClosed
  name: IsClosed
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_IsClosed
  commentId: P:BRIDGES.Geometry.Euclidean3D.Circle.IsClosed
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.IsClosed
  nameWithType: Circle.IsClosed
- uid: BRIDGES.Geometry.Euclidean3D.Circle.IsClosed*
  name: IsClosed
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_IsClosed_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Circle.IsClosed
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.IsClosed
  nameWithType: Circle.IsClosed
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Normal
  name: Normal
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Normal
  commentId: P:BRIDGES.Geometry.Euclidean3D.Circle.Normal
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Normal
  nameWithType: Circle.Normal
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Normal*
  name: Normal
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Normal_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Circle.Normal
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Normal
  nameWithType: Circle.Normal
- uid: BRIDGES.Geometry.Euclidean3D.Circle.PointAt(System.Double)
  name: PointAt(Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_PointAt_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Circle.PointAt(System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.PointAt(System.Double)
  nameWithType: Circle.PointAt(Double)
- uid: BRIDGES.Geometry.Euclidean3D.Circle.PointAt(System.Double,BRIDGES.Geometry.Kernel.CurveParameterFormat)
  name: PointAt(Double, CurveParameterFormat)
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_PointAt_System_Double_BRIDGES_Geometry_Kernel_CurveParameterFormat_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Circle.PointAt(System.Double,BRIDGES.Geometry.Kernel.CurveParameterFormat)
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.PointAt(System.Double, BRIDGES.Geometry.Kernel.CurveParameterFormat)
  nameWithType: Circle.PointAt(Double, CurveParameterFormat)
- uid: BRIDGES.Geometry.Euclidean3D.Circle.PointAt*
  name: PointAt
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_PointAt_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Circle.PointAt
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.PointAt
  nameWithType: Circle.PointAt
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Radius
  name: Radius
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Radius
  commentId: P:BRIDGES.Geometry.Euclidean3D.Circle.Radius
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Radius
  nameWithType: Circle.Radius
- uid: BRIDGES.Geometry.Euclidean3D.Circle.Radius*
  name: Radius
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_Radius_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Circle.Radius
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.Radius
  nameWithType: Circle.Radius
- uid: BRIDGES.Geometry.Euclidean3D.Circle.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Circle.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.ToString()
  nameWithType: Circle.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Circle.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Circle.html#BRIDGES_Geometry_Euclidean3D_Circle_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Circle.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Circle.ToString
  nameWithType: Circle.ToString
- uid: BRIDGES.Geometry.Euclidean3D.Frame
  name: Frame
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Frame
  fullName: BRIDGES.Geometry.Euclidean3D.Frame
  nameWithType: Frame
- uid: BRIDGES.Geometry.Euclidean3D.Frame.#ctor(BRIDGES.Geometry.Euclidean3D.Frame)
  name: Frame(Frame)
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame__ctor_BRIDGES_Geometry_Euclidean3D_Frame_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Frame.#ctor(BRIDGES.Geometry.Euclidean3D.Frame)
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Frame(BRIDGES.Geometry.Euclidean3D.Frame)
  nameWithType: Frame.Frame(Frame)
- uid: BRIDGES.Geometry.Euclidean3D.Frame.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Frame(Point, Vector, Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame__ctor_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Frame.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Frame(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Frame.Frame(Point, Vector, Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Frame.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector[])
  name: Frame(Point, Vector[])
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame__ctor_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Vector___
  commentId: M:BRIDGES.Geometry.Euclidean3D.Frame.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector[])
  name.vb: Frame(Point, Vector())
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Frame(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector[])
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Frame.Frame(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector())
  nameWithType: Frame.Frame(Point, Vector[])
  nameWithType.vb: Frame.Frame(Point, Vector())
- uid: BRIDGES.Geometry.Euclidean3D.Frame.#ctor*
  name: Frame
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Frame.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Frame
  nameWithType: Frame.Frame
- uid: BRIDGES.Geometry.Euclidean3D.Frame.Dimension
  name: Dimension
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_Dimension
  commentId: P:BRIDGES.Geometry.Euclidean3D.Frame.Dimension
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Dimension
  nameWithType: Frame.Dimension
- uid: BRIDGES.Geometry.Euclidean3D.Frame.Dimension*
  name: Dimension
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_Dimension_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Frame.Dimension
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Dimension
  nameWithType: Frame.Dimension
- uid: BRIDGES.Geometry.Euclidean3D.Frame.Equals(BRIDGES.Geometry.Euclidean3D.Frame)
  name: Equals(Frame)
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_Equals_BRIDGES_Geometry_Euclidean3D_Frame_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Frame.Equals(BRIDGES.Geometry.Euclidean3D.Frame)
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Equals(BRIDGES.Geometry.Euclidean3D.Frame)
  nameWithType: Frame.Equals(Frame)
- uid: BRIDGES.Geometry.Euclidean3D.Frame.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Frame.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Equals(System.Object)
  nameWithType: Frame.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Frame.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Frame.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Equals
  nameWithType: Frame.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Frame.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Frame.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.GetHashCode()
  nameWithType: Frame.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Frame.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Frame.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.GetHashCode
  nameWithType: Frame.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Frame.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_Item_System_Int32_
  commentId: P:BRIDGES.Geometry.Euclidean3D.Frame.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Item[System.Int32]
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Frame.Item(System.Int32)
  nameWithType: Frame.Item[Int32]
  nameWithType.vb: Frame.Item(Int32)
- uid: BRIDGES.Geometry.Euclidean3D.Frame.Item*
  name: Item
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_Item_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Frame.Item
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Item
  nameWithType: Frame.Item
- uid: BRIDGES.Geometry.Euclidean3D.Frame.Origin
  name: Origin
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_Origin
  commentId: P:BRIDGES.Geometry.Euclidean3D.Frame.Origin
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Origin
  nameWithType: Frame.Origin
- uid: BRIDGES.Geometry.Euclidean3D.Frame.Origin*
  name: Origin
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_Origin_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Frame.Origin
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.Origin
  nameWithType: Frame.Origin
- uid: BRIDGES.Geometry.Euclidean3D.Frame.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Frame.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.ToString()
  nameWithType: Frame.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Frame.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Frame.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.ToString
  nameWithType: Frame.ToString
- uid: BRIDGES.Geometry.Euclidean3D.Frame.XAxis
  name: XAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_XAxis
  commentId: P:BRIDGES.Geometry.Euclidean3D.Frame.XAxis
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.XAxis
  nameWithType: Frame.XAxis
- uid: BRIDGES.Geometry.Euclidean3D.Frame.XAxis*
  name: XAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_XAxis_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Frame.XAxis
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.XAxis
  nameWithType: Frame.XAxis
- uid: BRIDGES.Geometry.Euclidean3D.Frame.YAxis
  name: YAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_YAxis
  commentId: P:BRIDGES.Geometry.Euclidean3D.Frame.YAxis
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.YAxis
  nameWithType: Frame.YAxis
- uid: BRIDGES.Geometry.Euclidean3D.Frame.YAxis*
  name: YAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_YAxis_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Frame.YAxis
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.YAxis
  nameWithType: Frame.YAxis
- uid: BRIDGES.Geometry.Euclidean3D.Frame.ZAxis
  name: ZAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_ZAxis
  commentId: P:BRIDGES.Geometry.Euclidean3D.Frame.ZAxis
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.ZAxis
  nameWithType: Frame.ZAxis
- uid: BRIDGES.Geometry.Euclidean3D.Frame.ZAxis*
  name: ZAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Frame.html#BRIDGES_Geometry_Euclidean3D_Frame_ZAxis_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Frame.ZAxis
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Frame.ZAxis
  nameWithType: Frame.ZAxis
- uid: BRIDGES.Geometry.Euclidean3D.Line
  name: Line
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Line
  fullName: BRIDGES.Geometry.Euclidean3D.Line
  nameWithType: Line
- uid: BRIDGES.Geometry.Euclidean3D.Line.#ctor(BRIDGES.Geometry.Euclidean3D.Line)
  name: Line(Line)
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line__ctor_BRIDGES_Geometry_Euclidean3D_Line_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Line.#ctor(BRIDGES.Geometry.Euclidean3D.Line)
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Line(BRIDGES.Geometry.Euclidean3D.Line)
  nameWithType: Line.Line(Line)
- uid: BRIDGES.Geometry.Euclidean3D.Line.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Line(Point, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line__ctor_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Line.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Line(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Line.Line(Point, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Line.#ctor*
  name: Line
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Line.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Line
  nameWithType: Line.Line
- uid: BRIDGES.Geometry.Euclidean3D.Line.Axis
  name: Axis
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_Axis
  commentId: P:BRIDGES.Geometry.Euclidean3D.Line.Axis
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Axis
  nameWithType: Line.Axis
- uid: BRIDGES.Geometry.Euclidean3D.Line.Axis*
  name: Axis
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_Axis_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Line.Axis
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Axis
  nameWithType: Line.Axis
- uid: BRIDGES.Geometry.Euclidean3D.Line.Equals(BRIDGES.Geometry.Euclidean3D.Line)
  name: Equals(Line)
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_Equals_BRIDGES_Geometry_Euclidean3D_Line_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Line.Equals(BRIDGES.Geometry.Euclidean3D.Line)
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Equals(BRIDGES.Geometry.Euclidean3D.Line)
  nameWithType: Line.Equals(Line)
- uid: BRIDGES.Geometry.Euclidean3D.Line.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Line.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Equals(System.Object)
  nameWithType: Line.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Line.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Line.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Equals
  nameWithType: Line.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Line.Flip
  name: Flip()
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_Flip
  commentId: M:BRIDGES.Geometry.Euclidean3D.Line.Flip
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Flip()
  nameWithType: Line.Flip()
- uid: BRIDGES.Geometry.Euclidean3D.Line.Flip*
  name: Flip
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_Flip_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Line.Flip
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Flip
  nameWithType: Line.Flip
- uid: BRIDGES.Geometry.Euclidean3D.Line.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Line.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Line.GetHashCode()
  nameWithType: Line.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Line.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Line.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Line.GetHashCode
  nameWithType: Line.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Line.Origin
  name: Origin
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_Origin
  commentId: P:BRIDGES.Geometry.Euclidean3D.Line.Origin
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Origin
  nameWithType: Line.Origin
- uid: BRIDGES.Geometry.Euclidean3D.Line.Origin*
  name: Origin
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_Origin_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Line.Origin
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Line.Origin
  nameWithType: Line.Origin
- uid: BRIDGES.Geometry.Euclidean3D.Line.PointAt(System.Double)
  name: PointAt(Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_PointAt_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Line.PointAt(System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Line.PointAt(System.Double)
  nameWithType: Line.PointAt(Double)
- uid: BRIDGES.Geometry.Euclidean3D.Line.PointAt*
  name: PointAt
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_PointAt_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Line.PointAt
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Line.PointAt
  nameWithType: Line.PointAt
- uid: BRIDGES.Geometry.Euclidean3D.Line.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Line.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Line.ToString()
  nameWithType: Line.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Line.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Line.html#BRIDGES_Geometry_Euclidean3D_Line_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Line.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Line.ToString
  nameWithType: Line.ToString
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve
  name: NurbsCurve
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.NurbsCurve
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve
  nameWithType: NurbsCurve
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.#ctor(System.Int32,IEnumerable{BRIDGES.Geometry.Euclidean3D.Point})
  name: NurbsCurve(Int32, IEnumerable<Point>)
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve__ctor_System_Int32_IEnumerable_BRIDGES_Geometry_Euclidean3D_Point__
  commentId: M:BRIDGES.Geometry.Euclidean3D.NurbsCurve.#ctor(System.Int32,IEnumerable{BRIDGES.Geometry.Euclidean3D.Point})
  name.vb: NurbsCurve(Int32, IEnumerable(Of Point))
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.NurbsCurve(System.Int32, IEnumerable<BRIDGES.Geometry.Euclidean3D.Point>)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.NurbsCurve.NurbsCurve(System.Int32, IEnumerable(Of BRIDGES.Geometry.Euclidean3D.Point))
  nameWithType: NurbsCurve.NurbsCurve(Int32, IEnumerable<Point>)
  nameWithType.vb: NurbsCurve.NurbsCurve(Int32, IEnumerable(Of Point))
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.#ctor(System.Int32,IEnumerable{System.Double},IEnumerable{BRIDGES.Geometry.Euclidean3D.Point},IEnumerable{System.Double})
  name: NurbsCurve(Int32, IEnumerable<Double>, IEnumerable<Point>, IEnumerable<Double>)
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve__ctor_System_Int32_IEnumerable_System_Double__IEnumerable_BRIDGES_Geometry_Euclidean3D_Point__IEnumerable_System_Double__
  commentId: M:BRIDGES.Geometry.Euclidean3D.NurbsCurve.#ctor(System.Int32,IEnumerable{System.Double},IEnumerable{BRIDGES.Geometry.Euclidean3D.Point},IEnumerable{System.Double})
  name.vb: NurbsCurve(Int32, IEnumerable(Of Double), IEnumerable(Of Point), IEnumerable(Of Double))
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.NurbsCurve(System.Int32, IEnumerable<System.Double>, IEnumerable<BRIDGES.Geometry.Euclidean3D.Point>, IEnumerable<System.Double>)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.NurbsCurve.NurbsCurve(System.Int32, IEnumerable(Of System.Double), IEnumerable(Of BRIDGES.Geometry.Euclidean3D.Point), IEnumerable(Of System.Double))
  nameWithType: NurbsCurve.NurbsCurve(Int32, IEnumerable<Double>, IEnumerable<Point>, IEnumerable<Double>)
  nameWithType.vb: NurbsCurve.NurbsCurve(Int32, IEnumerable(Of Double), IEnumerable(Of Point), IEnumerable(Of Double))
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.#ctor*
  name: NurbsCurve
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.NurbsCurve.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.NurbsCurve
  nameWithType: NurbsCurve.NurbsCurve
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints(IEnumerable{BRIDGES.Geometry.Euclidean3D.Point})
  name: ConvertControlPoints(IEnumerable<Point>)
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve_ConvertControlPoints_IEnumerable_BRIDGES_Geometry_Euclidean3D_Point__
  commentId: M:BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints(IEnumerable{BRIDGES.Geometry.Euclidean3D.Point})
  name.vb: ConvertControlPoints(IEnumerable(Of Point))
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints(IEnumerable<BRIDGES.Geometry.Euclidean3D.Point>)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints(IEnumerable(Of BRIDGES.Geometry.Euclidean3D.Point))
  nameWithType: NurbsCurve.ConvertControlPoints(IEnumerable<Point>)
  nameWithType.vb: NurbsCurve.ConvertControlPoints(IEnumerable(Of Point))
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints(IEnumerable{BRIDGES.Geometry.Euclidean3D.Point},IEnumerable{System.Double})
  name: ConvertControlPoints(IEnumerable<Point>, IEnumerable<Double>)
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve_ConvertControlPoints_IEnumerable_BRIDGES_Geometry_Euclidean3D_Point__IEnumerable_System_Double__
  commentId: M:BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints(IEnumerable{BRIDGES.Geometry.Euclidean3D.Point},IEnumerable{System.Double})
  name.vb: ConvertControlPoints(IEnumerable(Of Point), IEnumerable(Of Double))
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints(IEnumerable<BRIDGES.Geometry.Euclidean3D.Point>, IEnumerable<System.Double>)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints(IEnumerable(Of BRIDGES.Geometry.Euclidean3D.Point), IEnumerable(Of System.Double))
  nameWithType: NurbsCurve.ConvertControlPoints(IEnumerable<Point>, IEnumerable<Double>)
  nameWithType.vb: NurbsCurve.ConvertControlPoints(IEnumerable(Of Point), IEnumerable(Of Double))
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints*
  name: ConvertControlPoints
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve_ConvertControlPoints_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.ConvertControlPoints
  nameWithType: NurbsCurve.ConvertControlPoints
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.EndPoint
  name: EndPoint
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve_EndPoint
  commentId: P:BRIDGES.Geometry.Euclidean3D.NurbsCurve.EndPoint
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.EndPoint
  nameWithType: NurbsCurve.EndPoint
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.EndPoint*
  name: EndPoint
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve_EndPoint_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.NurbsCurve.EndPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.EndPoint
  nameWithType: NurbsCurve.EndPoint
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.PointAt(System.Double,BRIDGES.Geometry.Kernel.CurveParameterFormat)
  name: PointAt(Double, CurveParameterFormat)
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve_PointAt_System_Double_BRIDGES_Geometry_Kernel_CurveParameterFormat_
  commentId: M:BRIDGES.Geometry.Euclidean3D.NurbsCurve.PointAt(System.Double,BRIDGES.Geometry.Kernel.CurveParameterFormat)
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.PointAt(System.Double, BRIDGES.Geometry.Kernel.CurveParameterFormat)
  nameWithType: NurbsCurve.PointAt(Double, CurveParameterFormat)
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.PointAt*
  name: PointAt
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve_PointAt_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.NurbsCurve.PointAt
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.PointAt
  nameWithType: NurbsCurve.PointAt
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.StartPoint
  name: StartPoint
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve_StartPoint
  commentId: P:BRIDGES.Geometry.Euclidean3D.NurbsCurve.StartPoint
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.StartPoint
  nameWithType: NurbsCurve.StartPoint
- uid: BRIDGES.Geometry.Euclidean3D.NurbsCurve.StartPoint*
  name: StartPoint
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsCurve.html#BRIDGES_Geometry_Euclidean3D_NurbsCurve_StartPoint_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.NurbsCurve.StartPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsCurve.StartPoint
  nameWithType: NurbsCurve.StartPoint
- uid: BRIDGES.Geometry.Euclidean3D.NurbsSurface
  name: NurbsSurface
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsSurface.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.NurbsSurface
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsSurface
  nameWithType: NurbsSurface
- uid: BRIDGES.Geometry.Euclidean3D.NurbsSurface.#ctor(System.Int32,System.Int32,BRIDGES.Geometry.Euclidean3D.Point[0:,0:])
  name: NurbsSurface(Int32, Int32, Point[,])
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsSurface.html#BRIDGES_Geometry_Euclidean3D_NurbsSurface__ctor_System_Int32_System_Int32_BRIDGES_Geometry_Euclidean3D_Point_0__0___
  commentId: M:BRIDGES.Geometry.Euclidean3D.NurbsSurface.#ctor(System.Int32,System.Int32,BRIDGES.Geometry.Euclidean3D.Point[0:,0:])
  name.vb: NurbsSurface(Int32, Int32, Point(,))
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsSurface.NurbsSurface(System.Int32, System.Int32, BRIDGES.Geometry.Euclidean3D.Point[,])
  fullName.vb: BRIDGES.Geometry.Euclidean3D.NurbsSurface.NurbsSurface(System.Int32, System.Int32, BRIDGES.Geometry.Euclidean3D.Point(,))
  nameWithType: NurbsSurface.NurbsSurface(Int32, Int32, Point[,])
  nameWithType.vb: NurbsSurface.NurbsSurface(Int32, Int32, Point(,))
- uid: BRIDGES.Geometry.Euclidean3D.NurbsSurface.#ctor*
  name: NurbsSurface
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsSurface.html#BRIDGES_Geometry_Euclidean3D_NurbsSurface__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.NurbsSurface.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsSurface.NurbsSurface
  nameWithType: NurbsSurface.NurbsSurface
- uid: BRIDGES.Geometry.Euclidean3D.NurbsSurface.PointAt(System.ValueTuple{System.Double,System.Double})
  name: PointAt((Double, Double))
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsSurface.html#BRIDGES_Geometry_Euclidean3D_NurbsSurface_PointAt_System_ValueTuple_System_Double_System_Double__
  commentId: M:BRIDGES.Geometry.Euclidean3D.NurbsSurface.PointAt(System.ValueTuple{System.Double,System.Double})
  name.vb: PointAt((Double, Double)(Of Double, Double))
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsSurface.PointAt(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.NurbsSurface.PointAt(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: NurbsSurface.PointAt((Double, Double))
  nameWithType.vb: NurbsSurface.PointAt((Double, Double)(Of Double, Double))
- uid: BRIDGES.Geometry.Euclidean3D.NurbsSurface.PointAt*
  name: PointAt
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsSurface.html#BRIDGES_Geometry_Euclidean3D_NurbsSurface_PointAt_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.NurbsSurface.PointAt
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsSurface.PointAt
  nameWithType: NurbsSurface.PointAt
- uid: BRIDGES.Geometry.Euclidean3D.NurbsSurface.SetControlPoints(BRIDGES.Geometry.Euclidean3D.Point[0:,0:])
  name: SetControlPoints(Point[,])
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsSurface.html#BRIDGES_Geometry_Euclidean3D_NurbsSurface_SetControlPoints_BRIDGES_Geometry_Euclidean3D_Point_0__0___
  commentId: M:BRIDGES.Geometry.Euclidean3D.NurbsSurface.SetControlPoints(BRIDGES.Geometry.Euclidean3D.Point[0:,0:])
  name.vb: SetControlPoints(Point(,))
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsSurface.SetControlPoints(BRIDGES.Geometry.Euclidean3D.Point[,])
  fullName.vb: BRIDGES.Geometry.Euclidean3D.NurbsSurface.SetControlPoints(BRIDGES.Geometry.Euclidean3D.Point(,))
  nameWithType: NurbsSurface.SetControlPoints(Point[,])
  nameWithType.vb: NurbsSurface.SetControlPoints(Point(,))
- uid: BRIDGES.Geometry.Euclidean3D.NurbsSurface.SetControlPoints*
  name: SetControlPoints
  href: api/BRIDGES.Geometry.Euclidean3D.NurbsSurface.html#BRIDGES_Geometry_Euclidean3D_NurbsSurface_SetControlPoints_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.NurbsSurface.SetControlPoints
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.NurbsSurface.SetControlPoints
  nameWithType: NurbsSurface.SetControlPoints
- uid: BRIDGES.Geometry.Euclidean3D.Plane
  name: Plane
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Plane
  fullName: BRIDGES.Geometry.Euclidean3D.Plane
  nameWithType: Plane
- uid: BRIDGES.Geometry.Euclidean3D.Plane.#ctor(BRIDGES.Geometry.Euclidean3D.Plane)
  name: Plane(Plane)
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane__ctor_BRIDGES_Geometry_Euclidean3D_Plane_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Plane.#ctor(BRIDGES.Geometry.Euclidean3D.Plane)
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Plane(BRIDGES.Geometry.Euclidean3D.Plane)
  nameWithType: Plane.Plane(Plane)
- uid: BRIDGES.Geometry.Euclidean3D.Plane.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Plane(Point, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane__ctor_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Plane.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Plane(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Plane.Plane(Point, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Plane.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Plane(Point, Vector, Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane__ctor_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Plane.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Plane(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Plane.Plane(Point, Vector, Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Plane.#ctor*
  name: Plane
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Plane
  nameWithType: Plane.Plane
- uid: BRIDGES.Geometry.Euclidean3D.Plane.ClosestPoint(BRIDGES.Geometry.Euclidean3D.Point)
  name: ClosestPoint(Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_ClosestPoint_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Plane.ClosestPoint(BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.ClosestPoint(BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Plane.ClosestPoint(Point)
- uid: BRIDGES.Geometry.Euclidean3D.Plane.ClosestPoint*
  name: ClosestPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_ClosestPoint_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.ClosestPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.ClosestPoint
  nameWithType: Plane.ClosestPoint
- uid: BRIDGES.Geometry.Euclidean3D.Plane.Equals(BRIDGES.Geometry.Euclidean3D.Plane)
  name: Equals(Plane)
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_Equals_BRIDGES_Geometry_Euclidean3D_Plane_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Plane.Equals(BRIDGES.Geometry.Euclidean3D.Plane)
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Equals(BRIDGES.Geometry.Euclidean3D.Plane)
  nameWithType: Plane.Equals(Plane)
- uid: BRIDGES.Geometry.Euclidean3D.Plane.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Plane.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Equals(System.Object)
  nameWithType: Plane.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Plane.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Equals
  nameWithType: Plane.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Plane.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Plane.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.GetHashCode()
  nameWithType: Plane.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Plane.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.GetHashCode
  nameWithType: Plane.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Plane.Normal
  name: Normal
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_Normal
  commentId: P:BRIDGES.Geometry.Euclidean3D.Plane.Normal
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Normal
  nameWithType: Plane.Normal
- uid: BRIDGES.Geometry.Euclidean3D.Plane.Normal*
  name: Normal
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_Normal_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.Normal
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Normal
  nameWithType: Plane.Normal
- uid: BRIDGES.Geometry.Euclidean3D.Plane.Origin
  name: Origin
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_Origin
  commentId: P:BRIDGES.Geometry.Euclidean3D.Plane.Origin
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Origin
  nameWithType: Plane.Origin
- uid: BRIDGES.Geometry.Euclidean3D.Plane.Origin*
  name: Origin
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_Origin_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.Origin
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.Origin
  nameWithType: Plane.Origin
- uid: BRIDGES.Geometry.Euclidean3D.Plane.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Plane.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.ToString()
  nameWithType: Plane.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Plane.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.ToString
  nameWithType: Plane.ToString
- uid: BRIDGES.Geometry.Euclidean3D.Plane.WorldXY
  name: WorldXY
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_WorldXY
  commentId: P:BRIDGES.Geometry.Euclidean3D.Plane.WorldXY
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.WorldXY
  nameWithType: Plane.WorldXY
- uid: BRIDGES.Geometry.Euclidean3D.Plane.WorldXY*
  name: WorldXY
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_WorldXY_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.WorldXY
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.WorldXY
  nameWithType: Plane.WorldXY
- uid: BRIDGES.Geometry.Euclidean3D.Plane.WorldYZ
  name: WorldYZ
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_WorldYZ
  commentId: P:BRIDGES.Geometry.Euclidean3D.Plane.WorldYZ
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.WorldYZ
  nameWithType: Plane.WorldYZ
- uid: BRIDGES.Geometry.Euclidean3D.Plane.WorldYZ*
  name: WorldYZ
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_WorldYZ_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.WorldYZ
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.WorldYZ
  nameWithType: Plane.WorldYZ
- uid: BRIDGES.Geometry.Euclidean3D.Plane.WorldZX
  name: WorldZX
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_WorldZX
  commentId: P:BRIDGES.Geometry.Euclidean3D.Plane.WorldZX
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.WorldZX
  nameWithType: Plane.WorldZX
- uid: BRIDGES.Geometry.Euclidean3D.Plane.WorldZX*
  name: WorldZX
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_WorldZX_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.WorldZX
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.WorldZX
  nameWithType: Plane.WorldZX
- uid: BRIDGES.Geometry.Euclidean3D.Plane.XAxis
  name: XAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_XAxis
  commentId: P:BRIDGES.Geometry.Euclidean3D.Plane.XAxis
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.XAxis
  nameWithType: Plane.XAxis
- uid: BRIDGES.Geometry.Euclidean3D.Plane.XAxis*
  name: XAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_XAxis_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.XAxis
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.XAxis
  nameWithType: Plane.XAxis
- uid: BRIDGES.Geometry.Euclidean3D.Plane.YAxis
  name: YAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_YAxis
  commentId: P:BRIDGES.Geometry.Euclidean3D.Plane.YAxis
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.YAxis
  nameWithType: Plane.YAxis
- uid: BRIDGES.Geometry.Euclidean3D.Plane.YAxis*
  name: YAxis
  href: api/BRIDGES.Geometry.Euclidean3D.Plane.html#BRIDGES_Geometry_Euclidean3D_Plane_YAxis_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Plane.YAxis
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Plane.YAxis
  nameWithType: Plane.YAxis
- uid: BRIDGES.Geometry.Euclidean3D.Point
  name: Point
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Point
  fullName: BRIDGES.Geometry.Euclidean3D.Point
  nameWithType: Point
- uid: BRIDGES.Geometry.Euclidean3D.Point.#ctor(BRIDGES.Geometry.Euclidean3D.Point)
  name: Point(Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point__ctor_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.#ctor(BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Point(BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Point(Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.#ctor(System.Double,System.Double,System.Double)
  name: Point(Double, Double, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point__ctor_System_Double_System_Double_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.#ctor(System.Double,System.Double,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Point(System.Double, System.Double, System.Double)
  nameWithType: Point.Point(Double, Double, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Point.#ctor(System.Double[])
  name: Point(Double[])
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point__ctor_System_Double___
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.#ctor(System.Double[])
  name.vb: Point(Double())
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Point(System.Double[])
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.Point(System.Double())
  nameWithType: Point.Point(Double[])
  nameWithType.vb: Point.Point(Double())
- uid: BRIDGES.Geometry.Euclidean3D.Point.#ctor*
  name: Point
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Point
  nameWithType: Point.Point
- uid: BRIDGES.Geometry.Euclidean3D.Point.Add(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  name: Add(Point, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Add_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.Add(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Add(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Add(Point, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.Add(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Add(Point, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Add_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.Add(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Add(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Point.Add(Point, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Point.Add*
  name: Add
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Add_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Add
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Add
  nameWithType: Point.Add
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#Add(BRIDGES.Geometry.Euclidean3D.Point)
  name: IAddable<Point>.Add(Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Point__Add_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#Add(BRIDGES.Geometry.Euclidean3D.Point)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.Add(Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.Add(BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.IAddable<Point>.Add(Point)
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.Add(Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#Add*
  name: IAddable<Point>.Add
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Point__Add_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.Add
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.Add
  nameWithType: Point.IAddable<Point>.Add
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.Add
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#IsAssociative
  name: IAddable<Point>.IsAssociative
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Point__IsAssociative
  commentId: P:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsAssociative
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsAssociative
  nameWithType: Point.IAddable<Point>.IsAssociative
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsAssociative
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#IsAssociative*
  name: IAddable<Point>.IsAssociative
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Point__IsAssociative_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsAssociative
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsAssociative
  nameWithType: Point.IAddable<Point>.IsAssociative
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsAssociative
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#IsCommutative
  name: IAddable<Point>.IsCommutative
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Point__IsCommutative
  commentId: P:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsCommutative
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsCommutative
  nameWithType: Point.IAddable<Point>.IsCommutative
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsCommutative
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#IsCommutative*
  name: IAddable<Point>.IsCommutative
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Point__IsCommutative_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Point}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsCommutative
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsCommutative
  nameWithType: Point.IAddable<Point>.IsCommutative
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Point>.IsCommutative
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Euclidean3D#Point}#Subtract(BRIDGES.Geometry.Euclidean3D.Point)
  name: ISubtractable<Point>.Subtract(Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Geometry_Euclidean3D_Point__Subtract_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Euclidean3D#Point}#Subtract(BRIDGES.Geometry.Euclidean3D.Point)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Point>.Subtract(Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Point>.Subtract(BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.ISubtractable<Point>.Subtract(Point)
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Point>.Subtract(Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Euclidean3D#Point}#Subtract*
  name: ISubtractable<Point>.Subtract
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Geometry_Euclidean3D_Point__Subtract_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Euclidean3D#Point}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Point>.Subtract
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Point>.Subtract
  nameWithType: Point.ISubtractable<Point>.Subtract
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Point>.Subtract
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Euclidean3D#Point}#Zero
  name: IZeroable<Point>.Zero()
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Geometry_Euclidean3D_Point__Zero
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Euclidean3D#Point}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Point>.Zero()
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Point>.Zero()
  nameWithType: Point.IZeroable<Point>.Zero()
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Point>.Zero()
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Euclidean3D#Point}#Zero*
  name: IZeroable<Point>.Zero
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Geometry_Euclidean3D_Point__Zero_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Euclidean3D#Point}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Point>.Zero
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Point>.Zero
  nameWithType: Point.IZeroable<Point>.Zero
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Point>.Zero
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#AngleWith(BRIDGES.Geometry.Euclidean3D.Point)
  name: IDotProduct<Double, Point>.AngleWith(Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Measure_IDotProduct_System_Double_BRIDGES_Geometry_Euclidean3D_Point__AngleWith_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#AngleWith(BRIDGES.Geometry.Euclidean3D.Point)
  name.vb: BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.AngleWith(Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double, BRIDGES.Geometry.Euclidean3D.Point>.AngleWith(BRIDGES.Geometry.Euclidean3D.Point)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.AngleWith(BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.IDotProduct<Double, Point>.AngleWith(Point)
  nameWithType.vb: Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.AngleWith(Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#AngleWith*
  name: IDotProduct<Double, Point>.AngleWith
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Measure_IDotProduct_System_Double_BRIDGES_Geometry_Euclidean3D_Point__AngleWith_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#AngleWith
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.AngleWith
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double, BRIDGES.Geometry.Euclidean3D.Point>.AngleWith
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.AngleWith
  nameWithType: Point.IDotProduct<Double, Point>.AngleWith
  nameWithType.vb: Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.AngleWith
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#DotProduct(BRIDGES.Geometry.Euclidean3D.Point)
  name: IDotProduct<Double, Point>.DotProduct(Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Measure_IDotProduct_System_Double_BRIDGES_Geometry_Euclidean3D_Point__DotProduct_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#DotProduct(BRIDGES.Geometry.Euclidean3D.Point)
  name.vb: BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.DotProduct(Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double, BRIDGES.Geometry.Euclidean3D.Point>.DotProduct(BRIDGES.Geometry.Euclidean3D.Point)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.DotProduct(BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.IDotProduct<Double, Point>.DotProduct(Point)
  nameWithType.vb: Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.DotProduct(Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#DotProduct*
  name: IDotProduct<Double, Point>.DotProduct
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Measure_IDotProduct_System_Double_BRIDGES_Geometry_Euclidean3D_Point__DotProduct_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#DotProduct
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.DotProduct
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double, BRIDGES.Geometry.Euclidean3D.Point>.DotProduct
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.DotProduct
  nameWithType: Point.IDotProduct<Double, Point>.DotProduct
  nameWithType.vb: Point.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.DotProduct
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#INorm{BRIDGES#Geometry#Euclidean3D#Point}#Unitise
  name: INorm<Point>.Unitise()
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Measure_INorm_BRIDGES_Geometry_Euclidean3D_Point__Unitise
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#INorm{BRIDGES#Geometry#Euclidean3D#Point}#Unitise
  name.vb: BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Point>.Unitise()
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Point>.Unitise()
  nameWithType: Point.INorm<Point>.Unitise()
  nameWithType.vb: Point.BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Point>.Unitise()
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#INorm{BRIDGES#Geometry#Euclidean3D#Point}#Unitise*
  name: INorm<Point>.Unitise
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Measure_INorm_BRIDGES_Geometry_Euclidean3D_Point__Unitise_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Measure#INorm{BRIDGES#Geometry#Euclidean3D#Point}#Unitise
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Point>.Unitise
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Point>.Unitise
  nameWithType: Point.INorm<Point>.Unitise
  nameWithType.vb: Point.BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Point>.Unitise
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Euclidean3D#Point}#Opposite
  name: IGroup<Point>.Opposite()
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_Geometry_Euclidean3D_Point__Opposite
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Euclidean3D#Point}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Point>.Opposite()
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Point>.Opposite()
  nameWithType: Point.IGroup<Point>.Opposite()
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Point>.Opposite()
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Euclidean3D#Point}#Opposite*
  name: IGroup<Point>.Opposite
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_Geometry_Euclidean3D_Point__Opposite_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Euclidean3D#Point}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Point>.Opposite
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Point>.Opposite
  nameWithType: Point.IGroup<Point>.Opposite
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Point>.Opposite
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#Divide(System.Double)
  name: IGroupAction<Double, Point>.Divide(Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Euclidean3D_Point__Divide_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Divide(Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Euclidean3D.Point>.Divide(System.Double)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Divide(System.Double)
  nameWithType: Point.IGroupAction<Double, Point>.Divide(Double)
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Divide(Double)
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#Divide*
  name: IGroupAction<Double, Point>.Divide
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Euclidean3D_Point__Divide_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Divide
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Euclidean3D.Point>.Divide
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Divide
  nameWithType: Point.IGroupAction<Double, Point>.Divide
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Divide
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#Multiply(System.Double)
  name: IGroupAction<Double, Point>.Multiply(Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Euclidean3D_Point__Multiply_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Multiply(Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Euclidean3D.Point>.Multiply(System.Double)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Multiply(System.Double)
  nameWithType: Point.IGroupAction<Double, Point>.Multiply(Double)
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Multiply(Double)
- uid: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#Multiply*
  name: IGroupAction<Double, Point>.Multiply
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Euclidean3D_Point__Multiply_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Point}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Multiply
  fullName: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Euclidean3D.Point>.Multiply
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Multiply
  nameWithType: Point.IGroupAction<Double, Point>.Multiply
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Point>.Multiply
- uid: BRIDGES.Geometry.Euclidean3D.Point.CrossProduct(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  name: CrossProduct(Point, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_CrossProduct_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.CrossProduct(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.CrossProduct(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.CrossProduct(Point, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.CrossProduct*
  name: CrossProduct
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_CrossProduct_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.CrossProduct
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.CrossProduct
  nameWithType: Point.CrossProduct
- uid: BRIDGES.Geometry.Euclidean3D.Point.Dimension
  name: Dimension
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Dimension
  commentId: P:BRIDGES.Geometry.Euclidean3D.Point.Dimension
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Dimension
  nameWithType: Point.Dimension
- uid: BRIDGES.Geometry.Euclidean3D.Point.Dimension*
  name: Dimension
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Dimension_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Dimension
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Dimension
  nameWithType: Point.Dimension
- uid: BRIDGES.Geometry.Euclidean3D.Point.DistanceTo(BRIDGES.Geometry.Euclidean3D.Point)
  name: DistanceTo(Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_DistanceTo_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.DistanceTo(BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.DistanceTo(BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.DistanceTo(Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.DistanceTo*
  name: DistanceTo
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_DistanceTo_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.DistanceTo
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.DistanceTo
  nameWithType: Point.DistanceTo
- uid: BRIDGES.Geometry.Euclidean3D.Point.Divide(BRIDGES.Geometry.Euclidean3D.Point,System.Double)
  name: Divide(Point, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Divide_BRIDGES_Geometry_Euclidean3D_Point_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.Divide(BRIDGES.Geometry.Euclidean3D.Point,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Divide(BRIDGES.Geometry.Euclidean3D.Point, System.Double)
  nameWithType: Point.Divide(Point, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Point.Divide*
  name: Divide
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Divide_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Divide
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Divide
  nameWithType: Point.Divide
- uid: BRIDGES.Geometry.Euclidean3D.Point.DotProduct(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  name: DotProduct(Point, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_DotProduct_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.DotProduct(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.DotProduct(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.DotProduct(Point, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.DotProduct*
  name: DotProduct
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_DotProduct_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.DotProduct
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.DotProduct
  nameWithType: Point.DotProduct
- uid: BRIDGES.Geometry.Euclidean3D.Point.Equals(BRIDGES.Geometry.Euclidean3D.Point)
  name: Equals(Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Equals_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.Equals(BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Equals(BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Equals(Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Equals(System.Object)
  nameWithType: Point.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Point.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Equals
  nameWithType: Point.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Point.GetCoordinates
  name: GetCoordinates()
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_GetCoordinates
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.GetCoordinates
  fullName: BRIDGES.Geometry.Euclidean3D.Point.GetCoordinates()
  nameWithType: Point.GetCoordinates()
- uid: BRIDGES.Geometry.Euclidean3D.Point.GetCoordinates*
  name: GetCoordinates
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_GetCoordinates_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.GetCoordinates
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.GetCoordinates
  nameWithType: Point.GetCoordinates
- uid: BRIDGES.Geometry.Euclidean3D.Point.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Point.GetHashCode()
  nameWithType: Point.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Point.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.GetHashCode
  nameWithType: Point.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Point.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Item_System_Int32_
  commentId: P:BRIDGES.Geometry.Euclidean3D.Point.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Item[System.Int32]
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.Item(System.Int32)
  nameWithType: Point.Item[Int32]
  nameWithType.vb: Point.Item(Int32)
- uid: BRIDGES.Geometry.Euclidean3D.Point.Item*
  name: Item
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Item_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Item
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Item
  nameWithType: Point.Item
- uid: BRIDGES.Geometry.Euclidean3D.Point.Multiply(System.Double,BRIDGES.Geometry.Euclidean3D.Point)
  name: Multiply(Double, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Multiply_System_Double_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.Multiply(System.Double,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Multiply(System.Double, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Multiply(Double, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.Multiply*
  name: Multiply
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Multiply_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Multiply
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Multiply
  nameWithType: Point.Multiply
- uid: BRIDGES.Geometry.Euclidean3D.Point.Norm
  name: Norm()
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Norm
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.Norm
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Norm()
  nameWithType: Point.Norm()
- uid: BRIDGES.Geometry.Euclidean3D.Point.Norm*
  name: Norm
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Norm_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Norm
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Norm
  nameWithType: Point.Norm
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Addition(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  name: Addition(Point, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Addition_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_Addition(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Addition(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Addition(Point, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Addition(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Addition(Point, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Addition_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_Addition(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Addition(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Point.Addition(Point, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Addition*
  name: Addition
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Addition_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.op_Addition
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Addition
  nameWithType: Point.Addition
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Division(BRIDGES.Geometry.Euclidean3D.Point,System.Double)
  name: Division(Point, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Division_BRIDGES_Geometry_Euclidean3D_Point_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_Division(BRIDGES.Geometry.Euclidean3D.Point,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Division(BRIDGES.Geometry.Euclidean3D.Point, System.Double)
  nameWithType: Point.Division(Point, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Division*
  name: Division
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Division_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.op_Division
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Division
  nameWithType: Point.Division
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Explicit(BRIDGES.Geometry.Projective3D.Point)~BRIDGES.Geometry.Euclidean3D.Point
  name: Explicit(Point to Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Explicit_BRIDGES_Geometry_Projective3D_Point__BRIDGES_Geometry_Euclidean3D_Point
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_Explicit(BRIDGES.Geometry.Projective3D.Point)~BRIDGES.Geometry.Euclidean3D.Point
  name.vb: Narrowing(Point to Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Explicit(BRIDGES.Geometry.Projective3D.Point to BRIDGES.Geometry.Euclidean3D.Point)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.Narrowing(BRIDGES.Geometry.Projective3D.Point to BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Explicit(Point to Point)
  nameWithType.vb: Point.Narrowing(Point to Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Explicit*
  name: Explicit
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Explicit_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Explicit
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.Narrowing
  nameWithType: Point.Explicit
  nameWithType.vb: Point.Narrowing
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Implicit(BRIDGES.Geometry.Euclidean3D.Vector)~BRIDGES.Geometry.Euclidean3D.Point
  name: Implicit(Vector to Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Implicit_BRIDGES_Geometry_Euclidean3D_Vector__BRIDGES_Geometry_Euclidean3D_Point
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_Implicit(BRIDGES.Geometry.Euclidean3D.Vector)~BRIDGES.Geometry.Euclidean3D.Point
  name.vb: Widening(Vector to Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Implicit(BRIDGES.Geometry.Euclidean3D.Vector to BRIDGES.Geometry.Euclidean3D.Point)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.Widening(BRIDGES.Geometry.Euclidean3D.Vector to BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Implicit(Vector to Point)
  nameWithType.vb: Point.Widening(Vector to Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Implicit*
  name: Implicit
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Implicit_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Implicit
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Point.Widening
  nameWithType: Point.Implicit
  nameWithType.vb: Point.Widening
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Multiply(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  name: Multiply(Point, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Multiply_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_Multiply(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Multiply(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Multiply(Point, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Multiply(BRIDGES.Geometry.Euclidean3D.Point,System.Double)
  name: Multiply(Point, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Multiply_BRIDGES_Geometry_Euclidean3D_Point_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_Multiply(BRIDGES.Geometry.Euclidean3D.Point,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Multiply(BRIDGES.Geometry.Euclidean3D.Point, System.Double)
  nameWithType: Point.Multiply(Point, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Multiply(System.Double,BRIDGES.Geometry.Euclidean3D.Point)
  name: Multiply(Double, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Multiply_System_Double_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_Multiply(System.Double,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Multiply(System.Double, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Multiply(Double, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Multiply*
  name: Multiply
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Multiply_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.op_Multiply
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Multiply
  nameWithType: Point.Multiply
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Subtraction(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  name: Subtraction(Point, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Subtraction_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_Subtraction(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Subtraction(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Subtraction(Point, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Subtraction(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Subtraction(Point, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Subtraction_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_Subtraction(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Subtraction(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Point.Subtraction(Point, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_Subtraction*
  name: Subtraction
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_Subtraction_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.op_Subtraction
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Subtraction
  nameWithType: Point.Subtraction
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_UnaryNegation(BRIDGES.Geometry.Euclidean3D.Point)
  name: UnaryNegation(Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_UnaryNegation_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.op_UnaryNegation(BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.UnaryNegation(BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.UnaryNegation(Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.op_UnaryNegation*
  name: UnaryNegation
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_op_UnaryNegation_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.op_UnaryNegation
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.UnaryNegation
  nameWithType: Point.UnaryNegation
- uid: BRIDGES.Geometry.Euclidean3D.Point.Subtract(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  name: Subtract(Point, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Subtract_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.Subtract(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Subtract(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Point.Subtract(Point, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Point.Subtract(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Subtract(Point, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Subtract_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.Subtract(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Subtract(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Point.Subtract(Point, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Point.Subtract*
  name: Subtract
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Subtract_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Subtract
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Subtract
  nameWithType: Point.Subtract
- uid: BRIDGES.Geometry.Euclidean3D.Point.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Point.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Point.ToString()
  nameWithType: Point.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Point.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.ToString
  nameWithType: Point.ToString
- uid: BRIDGES.Geometry.Euclidean3D.Point.X
  name: X
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_X
  commentId: P:BRIDGES.Geometry.Euclidean3D.Point.X
  fullName: BRIDGES.Geometry.Euclidean3D.Point.X
  nameWithType: Point.X
- uid: BRIDGES.Geometry.Euclidean3D.Point.X*
  name: X
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_X_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.X
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.X
  nameWithType: Point.X
- uid: BRIDGES.Geometry.Euclidean3D.Point.Y
  name: Y
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Y
  commentId: P:BRIDGES.Geometry.Euclidean3D.Point.Y
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Y
  nameWithType: Point.Y
- uid: BRIDGES.Geometry.Euclidean3D.Point.Y*
  name: Y
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Y_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Y
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Y
  nameWithType: Point.Y
- uid: BRIDGES.Geometry.Euclidean3D.Point.Z
  name: Z
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Z
  commentId: P:BRIDGES.Geometry.Euclidean3D.Point.Z
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Z
  nameWithType: Point.Z
- uid: BRIDGES.Geometry.Euclidean3D.Point.Z*
  name: Z
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Z_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Z
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Z
  nameWithType: Point.Z
- uid: BRIDGES.Geometry.Euclidean3D.Point.Zero
  name: Zero
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Zero
  commentId: P:BRIDGES.Geometry.Euclidean3D.Point.Zero
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Zero
  nameWithType: Point.Zero
- uid: BRIDGES.Geometry.Euclidean3D.Point.Zero*
  name: Zero
  href: api/BRIDGES.Geometry.Euclidean3D.Point.html#BRIDGES_Geometry_Euclidean3D_Point_Zero_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Point.Zero
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Point.Zero
  nameWithType: Point.Zero
- uid: BRIDGES.Geometry.Euclidean3D.Polyline
  name: Polyline
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Polyline
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline
  nameWithType: Polyline
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.#ctor(BRIDGES.Geometry.Euclidean3D.Point[],System.Boolean)
  name: Polyline(Point[], Boolean)
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline__ctor_BRIDGES_Geometry_Euclidean3D_Point___System_Boolean_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.#ctor(BRIDGES.Geometry.Euclidean3D.Point[],System.Boolean)
  name.vb: Polyline(Point(), Boolean)
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Polyline(BRIDGES.Geometry.Euclidean3D.Point[], System.Boolean)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Polyline.Polyline(BRIDGES.Geometry.Euclidean3D.Point(), System.Boolean)
  nameWithType: Polyline.Polyline(Point[], Boolean)
  nameWithType.vb: Polyline.Polyline(Point(), Boolean)
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.#ctor(BRIDGES.Geometry.Euclidean3D.Polyline)
  name: Polyline(Polyline)
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline__ctor_BRIDGES_Geometry_Euclidean3D_Polyline_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.#ctor(BRIDGES.Geometry.Euclidean3D.Polyline)
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Polyline(BRIDGES.Geometry.Euclidean3D.Polyline)
  nameWithType: Polyline.Polyline(Polyline)
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.#ctor*
  name: Polyline
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Polyline
  nameWithType: Polyline.Polyline
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.AddVertex(BRIDGES.Geometry.Euclidean3D.Point)
  name: AddVertex(Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_AddVertex_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.AddVertex(BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.AddVertex(BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Polyline.AddVertex(Point)
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.AddVertex*
  name: AddVertex
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_AddVertex_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.AddVertex
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.AddVertex
  nameWithType: Polyline.AddVertex
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.AddVertices(List{BRIDGES.Geometry.Euclidean3D.Point})
  name: AddVertices(List<Point>)
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_AddVertices_List_BRIDGES_Geometry_Euclidean3D_Point__
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.AddVertices(List{BRIDGES.Geometry.Euclidean3D.Point})
  name.vb: AddVertices(List(Of Point))
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.AddVertices(List<BRIDGES.Geometry.Euclidean3D.Point>)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Polyline.AddVertices(List(Of BRIDGES.Geometry.Euclidean3D.Point))
  nameWithType: Polyline.AddVertices(List<Point>)
  nameWithType.vb: Polyline.AddVertices(List(Of Point))
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.AddVertices*
  name: AddVertices
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_AddVertices_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.AddVertices
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.AddVertices
  nameWithType: Polyline.AddVertices
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.ClosestPoint(BRIDGES.Geometry.Euclidean3D.Point,System.Double@)
  name: ClosestPoint(Point, out Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_ClosestPoint_BRIDGES_Geometry_Euclidean3D_Point_System_Double__
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.ClosestPoint(BRIDGES.Geometry.Euclidean3D.Point,System.Double@)
  name.vb: ClosestPoint(Point, ByRef Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.ClosestPoint(BRIDGES.Geometry.Euclidean3D.Point, out System.Double)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Polyline.ClosestPoint(BRIDGES.Geometry.Euclidean3D.Point, ByRef System.Double)
  nameWithType: Polyline.ClosestPoint(Point, out Double)
  nameWithType.vb: Polyline.ClosestPoint(Point, ByRef Double)
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.ClosestPoint*
  name: ClosestPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_ClosestPoint_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.ClosestPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.ClosestPoint
  nameWithType: Polyline.ClosestPoint
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.DomainEnd
  name: DomainEnd
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_DomainEnd
  commentId: P:BRIDGES.Geometry.Euclidean3D.Polyline.DomainEnd
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.DomainEnd
  nameWithType: Polyline.DomainEnd
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.DomainEnd*
  name: DomainEnd
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_DomainEnd_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.DomainEnd
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.DomainEnd
  nameWithType: Polyline.DomainEnd
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.DomainStart
  name: DomainStart
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_DomainStart
  commentId: P:BRIDGES.Geometry.Euclidean3D.Polyline.DomainStart
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.DomainStart
  nameWithType: Polyline.DomainStart
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.DomainStart*
  name: DomainStart
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_DomainStart_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.DomainStart
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.DomainStart
  nameWithType: Polyline.DomainStart
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.EndPoint
  name: EndPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_EndPoint
  commentId: P:BRIDGES.Geometry.Euclidean3D.Polyline.EndPoint
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.EndPoint
  nameWithType: Polyline.EndPoint
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.EndPoint*
  name: EndPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_EndPoint_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.EndPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.EndPoint
  nameWithType: Polyline.EndPoint
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.Equals(BRIDGES.Geometry.Euclidean3D.Polyline)
  name: Equals(Polyline)
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_Equals_BRIDGES_Geometry_Euclidean3D_Polyline_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.Equals(BRIDGES.Geometry.Euclidean3D.Polyline)
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Equals(BRIDGES.Geometry.Euclidean3D.Polyline)
  nameWithType: Polyline.Equals(Polyline)
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Equals(System.Object)
  nameWithType: Polyline.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Equals
  nameWithType: Polyline.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.Flip
  name: Flip()
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_Flip
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.Flip
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Flip()
  nameWithType: Polyline.Flip()
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.Flip*
  name: Flip
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_Flip_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.Flip
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Flip
  nameWithType: Polyline.Flip
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.GetHashCode()
  nameWithType: Polyline.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.GetHashCode
  nameWithType: Polyline.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.InsertVertex(System.Int32,BRIDGES.Geometry.Euclidean3D.Point)
  name: InsertVertex(Int32, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_InsertVertex_System_Int32_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.InsertVertex(System.Int32,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.InsertVertex(System.Int32, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Polyline.InsertVertex(Int32, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.InsertVertex*
  name: InsertVertex
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_InsertVertex_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.InsertVertex
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.InsertVertex
  nameWithType: Polyline.InsertVertex
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.IsClosed
  name: IsClosed
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_IsClosed
  commentId: P:BRIDGES.Geometry.Euclidean3D.Polyline.IsClosed
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.IsClosed
  nameWithType: Polyline.IsClosed
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.IsClosed*
  name: IsClosed
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_IsClosed_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.IsClosed
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.IsClosed
  nameWithType: Polyline.IsClosed
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_Item_System_Int32_
  commentId: P:BRIDGES.Geometry.Euclidean3D.Polyline.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Item[System.Int32]
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Polyline.Item(System.Int32)
  nameWithType: Polyline.Item[Int32]
  nameWithType.vb: Polyline.Item(Int32)
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.Item*
  name: Item
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_Item_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.Item
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Item
  nameWithType: Polyline.Item
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.Length
  name: Length()
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_Length
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.Length
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Length()
  nameWithType: Polyline.Length()
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.Length*
  name: Length
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_Length_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.Length
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.Length
  nameWithType: Polyline.Length
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.PointAt(System.Double,BRIDGES.Geometry.Kernel.CurveParameterFormat)
  name: PointAt(Double, CurveParameterFormat)
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_PointAt_System_Double_BRIDGES_Geometry_Kernel_CurveParameterFormat_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.PointAt(System.Double,BRIDGES.Geometry.Kernel.CurveParameterFormat)
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.PointAt(System.Double, BRIDGES.Geometry.Kernel.CurveParameterFormat)
  nameWithType: Polyline.PointAt(Double, CurveParameterFormat)
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.PointAt*
  name: PointAt
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_PointAt_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.PointAt
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.PointAt
  nameWithType: Polyline.PointAt
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.StartPoint
  name: StartPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_StartPoint
  commentId: P:BRIDGES.Geometry.Euclidean3D.Polyline.StartPoint
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.StartPoint
  nameWithType: Polyline.StartPoint
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.StartPoint*
  name: StartPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_StartPoint_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.StartPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.StartPoint
  nameWithType: Polyline.StartPoint
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Polyline.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.ToString()
  nameWithType: Polyline.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.ToString
  nameWithType: Polyline.ToString
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.VertexCount
  name: VertexCount
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_VertexCount
  commentId: P:BRIDGES.Geometry.Euclidean3D.Polyline.VertexCount
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.VertexCount
  nameWithType: Polyline.VertexCount
- uid: BRIDGES.Geometry.Euclidean3D.Polyline.VertexCount*
  name: VertexCount
  href: api/BRIDGES.Geometry.Euclidean3D.Polyline.html#BRIDGES_Geometry_Euclidean3D_Polyline_VertexCount_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Polyline.VertexCount
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Polyline.VertexCount
  nameWithType: Polyline.VertexCount
- uid: BRIDGES.Geometry.Euclidean3D.Ray
  name: Ray
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Ray
  fullName: BRIDGES.Geometry.Euclidean3D.Ray
  nameWithType: Ray
- uid: BRIDGES.Geometry.Euclidean3D.Ray.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Ray(Point, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray__ctor_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Ray.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.Ray(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Ray.Ray(Point, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Ray.#ctor(BRIDGES.Geometry.Euclidean3D.Ray)
  name: Ray(Ray)
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray__ctor_BRIDGES_Geometry_Euclidean3D_Ray_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Ray.#ctor(BRIDGES.Geometry.Euclidean3D.Ray)
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.Ray(BRIDGES.Geometry.Euclidean3D.Ray)
  nameWithType: Ray.Ray(Ray)
- uid: BRIDGES.Geometry.Euclidean3D.Ray.#ctor*
  name: Ray
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Ray.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.Ray
  nameWithType: Ray.Ray
- uid: BRIDGES.Geometry.Euclidean3D.Ray.Axis
  name: Axis
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_Axis
  commentId: P:BRIDGES.Geometry.Euclidean3D.Ray.Axis
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.Axis
  nameWithType: Ray.Axis
- uid: BRIDGES.Geometry.Euclidean3D.Ray.Axis*
  name: Axis
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_Axis_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Ray.Axis
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.Axis
  nameWithType: Ray.Axis
- uid: BRIDGES.Geometry.Euclidean3D.Ray.Equals(BRIDGES.Geometry.Euclidean3D.Ray)
  name: Equals(Ray)
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_Equals_BRIDGES_Geometry_Euclidean3D_Ray_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Ray.Equals(BRIDGES.Geometry.Euclidean3D.Ray)
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.Equals(BRIDGES.Geometry.Euclidean3D.Ray)
  nameWithType: Ray.Equals(Ray)
- uid: BRIDGES.Geometry.Euclidean3D.Ray.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Ray.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.Equals(System.Object)
  nameWithType: Ray.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Ray.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Ray.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.Equals
  nameWithType: Ray.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Ray.Flip
  name: Flip()
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_Flip
  commentId: M:BRIDGES.Geometry.Euclidean3D.Ray.Flip
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.Flip()
  nameWithType: Ray.Flip()
- uid: BRIDGES.Geometry.Euclidean3D.Ray.Flip*
  name: Flip
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_Flip_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Ray.Flip
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.Flip
  nameWithType: Ray.Flip
- uid: BRIDGES.Geometry.Euclidean3D.Ray.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Ray.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.GetHashCode()
  nameWithType: Ray.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Ray.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Ray.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.GetHashCode
  nameWithType: Ray.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Ray.PointAt(System.Double)
  name: PointAt(Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_PointAt_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Ray.PointAt(System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.PointAt(System.Double)
  nameWithType: Ray.PointAt(Double)
- uid: BRIDGES.Geometry.Euclidean3D.Ray.PointAt*
  name: PointAt
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_PointAt_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Ray.PointAt
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.PointAt
  nameWithType: Ray.PointAt
- uid: BRIDGES.Geometry.Euclidean3D.Ray.StartPoint
  name: StartPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_StartPoint
  commentId: P:BRIDGES.Geometry.Euclidean3D.Ray.StartPoint
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.StartPoint
  nameWithType: Ray.StartPoint
- uid: BRIDGES.Geometry.Euclidean3D.Ray.StartPoint*
  name: StartPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_StartPoint_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Ray.StartPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.StartPoint
  nameWithType: Ray.StartPoint
- uid: BRIDGES.Geometry.Euclidean3D.Ray.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Ray.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.ToString()
  nameWithType: Ray.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Ray.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Ray.html#BRIDGES_Geometry_Euclidean3D_Ray_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Ray.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Ray.ToString
  nameWithType: Ray.ToString
- uid: BRIDGES.Geometry.Euclidean3D.Segment
  name: Segment
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Segment
  fullName: BRIDGES.Geometry.Euclidean3D.Segment
  nameWithType: Segment
- uid: BRIDGES.Geometry.Euclidean3D.Segment.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  name: Segment(Point, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment__ctor_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Segment.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.Segment(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Segment.Segment(Point, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Segment.#ctor(BRIDGES.Geometry.Euclidean3D.Segment)
  name: Segment(Segment)
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment__ctor_BRIDGES_Geometry_Euclidean3D_Segment_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Segment.#ctor(BRIDGES.Geometry.Euclidean3D.Segment)
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.Segment(BRIDGES.Geometry.Euclidean3D.Segment)
  nameWithType: Segment.Segment(Segment)
- uid: BRIDGES.Geometry.Euclidean3D.Segment.#ctor*
  name: Segment
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.Segment
  nameWithType: Segment.Segment
- uid: BRIDGES.Geometry.Euclidean3D.Segment.DomainEnd
  name: DomainEnd
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_DomainEnd
  commentId: P:BRIDGES.Geometry.Euclidean3D.Segment.DomainEnd
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.DomainEnd
  nameWithType: Segment.DomainEnd
- uid: BRIDGES.Geometry.Euclidean3D.Segment.DomainEnd*
  name: DomainEnd
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_DomainEnd_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.DomainEnd
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.DomainEnd
  nameWithType: Segment.DomainEnd
- uid: BRIDGES.Geometry.Euclidean3D.Segment.DomainStart
  name: DomainStart
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_DomainStart
  commentId: P:BRIDGES.Geometry.Euclidean3D.Segment.DomainStart
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.DomainStart
  nameWithType: Segment.DomainStart
- uid: BRIDGES.Geometry.Euclidean3D.Segment.DomainStart*
  name: DomainStart
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_DomainStart_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.DomainStart
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.DomainStart
  nameWithType: Segment.DomainStart
- uid: BRIDGES.Geometry.Euclidean3D.Segment.EndPoint
  name: EndPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_EndPoint
  commentId: P:BRIDGES.Geometry.Euclidean3D.Segment.EndPoint
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.EndPoint
  nameWithType: Segment.EndPoint
- uid: BRIDGES.Geometry.Euclidean3D.Segment.EndPoint*
  name: EndPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_EndPoint_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.EndPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.EndPoint
  nameWithType: Segment.EndPoint
- uid: BRIDGES.Geometry.Euclidean3D.Segment.Equals(BRIDGES.Geometry.Euclidean3D.Segment)
  name: Equals(Segment)
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_Equals_BRIDGES_Geometry_Euclidean3D_Segment_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Segment.Equals(BRIDGES.Geometry.Euclidean3D.Segment)
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.Equals(BRIDGES.Geometry.Euclidean3D.Segment)
  nameWithType: Segment.Equals(Segment)
- uid: BRIDGES.Geometry.Euclidean3D.Segment.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Segment.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.Equals(System.Object)
  nameWithType: Segment.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Segment.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.Equals
  nameWithType: Segment.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Segment.Flip
  name: Flip()
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_Flip
  commentId: M:BRIDGES.Geometry.Euclidean3D.Segment.Flip
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.Flip()
  nameWithType: Segment.Flip()
- uid: BRIDGES.Geometry.Euclidean3D.Segment.Flip*
  name: Flip
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_Flip_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.Flip
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.Flip
  nameWithType: Segment.Flip
- uid: BRIDGES.Geometry.Euclidean3D.Segment.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Segment.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.GetHashCode()
  nameWithType: Segment.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Segment.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.GetHashCode
  nameWithType: Segment.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Segment.IsClosed
  name: IsClosed
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_IsClosed
  commentId: P:BRIDGES.Geometry.Euclidean3D.Segment.IsClosed
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.IsClosed
  nameWithType: Segment.IsClosed
- uid: BRIDGES.Geometry.Euclidean3D.Segment.IsClosed*
  name: IsClosed
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_IsClosed_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.IsClosed
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.IsClosed
  nameWithType: Segment.IsClosed
- uid: BRIDGES.Geometry.Euclidean3D.Segment.Length
  name: Length()
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_Length
  commentId: M:BRIDGES.Geometry.Euclidean3D.Segment.Length
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.Length()
  nameWithType: Segment.Length()
- uid: BRIDGES.Geometry.Euclidean3D.Segment.Length*
  name: Length
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_Length_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.Length
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.Length
  nameWithType: Segment.Length
- uid: BRIDGES.Geometry.Euclidean3D.Segment.PointAt(System.Double,BRIDGES.Geometry.Kernel.CurveParameterFormat)
  name: PointAt(Double, CurveParameterFormat)
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_PointAt_System_Double_BRIDGES_Geometry_Kernel_CurveParameterFormat_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Segment.PointAt(System.Double,BRIDGES.Geometry.Kernel.CurveParameterFormat)
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.PointAt(System.Double, BRIDGES.Geometry.Kernel.CurveParameterFormat)
  nameWithType: Segment.PointAt(Double, CurveParameterFormat)
- uid: BRIDGES.Geometry.Euclidean3D.Segment.PointAt*
  name: PointAt
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_PointAt_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.PointAt
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.PointAt
  nameWithType: Segment.PointAt
- uid: BRIDGES.Geometry.Euclidean3D.Segment.StartPoint
  name: StartPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_StartPoint
  commentId: P:BRIDGES.Geometry.Euclidean3D.Segment.StartPoint
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.StartPoint
  nameWithType: Segment.StartPoint
- uid: BRIDGES.Geometry.Euclidean3D.Segment.StartPoint*
  name: StartPoint
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_StartPoint_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.StartPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.StartPoint
  nameWithType: Segment.StartPoint
- uid: BRIDGES.Geometry.Euclidean3D.Segment.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Segment.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.ToString()
  nameWithType: Segment.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Segment.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Segment.html#BRIDGES_Geometry_Euclidean3D_Segment_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Segment.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Segment.ToString
  nameWithType: Segment.ToString
- uid: BRIDGES.Geometry.Euclidean3D.Sphere
  name: Sphere
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Sphere
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere
  nameWithType: Sphere
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.#ctor(BRIDGES.Geometry.Euclidean3D.Point,System.Double)
  name: Sphere(Point, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere__ctor_BRIDGES_Geometry_Euclidean3D_Point_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Sphere.#ctor(BRIDGES.Geometry.Euclidean3D.Point,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.Sphere(BRIDGES.Geometry.Euclidean3D.Point, System.Double)
  nameWithType: Sphere.Sphere(Point, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.#ctor*
  name: Sphere
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Sphere.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.Sphere
  nameWithType: Sphere.Sphere
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.Centre
  name: Centre
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_Centre
  commentId: P:BRIDGES.Geometry.Euclidean3D.Sphere.Centre
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.Centre
  nameWithType: Sphere.Centre
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.Centre*
  name: Centre
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_Centre_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Sphere.Centre
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.Centre
  nameWithType: Sphere.Centre
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.Equals(BRIDGES.Geometry.Euclidean3D.Circle)
  name: Equals(Circle)
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_Equals_BRIDGES_Geometry_Euclidean3D_Circle_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Sphere.Equals(BRIDGES.Geometry.Euclidean3D.Circle)
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.Equals(BRIDGES.Geometry.Euclidean3D.Circle)
  nameWithType: Sphere.Equals(Circle)
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Sphere.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.Equals(System.Object)
  nameWithType: Sphere.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Sphere.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.Equals
  nameWithType: Sphere.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Sphere.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.GetHashCode()
  nameWithType: Sphere.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Sphere.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.GetHashCode
  nameWithType: Sphere.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.Radius
  name: Radius
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_Radius
  commentId: P:BRIDGES.Geometry.Euclidean3D.Sphere.Radius
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.Radius
  nameWithType: Sphere.Radius
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.Radius*
  name: Radius
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_Radius_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Sphere.Radius
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.Radius
  nameWithType: Sphere.Radius
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Sphere.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.ToString()
  nameWithType: Sphere.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Sphere.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Sphere.html#BRIDGES_Geometry_Euclidean3D_Sphere_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Sphere.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Sphere.ToString
  nameWithType: Sphere.ToString
- uid: BRIDGES.Geometry.Euclidean3D.Vector
  name: Vector
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html
  commentId: T:BRIDGES.Geometry.Euclidean3D.Vector
  fullName: BRIDGES.Geometry.Euclidean3D.Vector
  nameWithType: Vector
- uid: BRIDGES.Geometry.Euclidean3D.Vector.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  name: Vector(Point, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector__ctor_BRIDGES_Geometry_Euclidean3D_Point_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.#ctor(BRIDGES.Geometry.Euclidean3D.Point,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Vector(BRIDGES.Geometry.Euclidean3D.Point, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Vector.Vector(Point, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.#ctor(BRIDGES.Geometry.Euclidean3D.Vector)
  name: Vector(Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector__ctor_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.#ctor(BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Vector(BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.Vector(Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.#ctor(System.Double,System.Double,System.Double)
  name: Vector(Double, Double, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector__ctor_System_Double_System_Double_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.#ctor(System.Double,System.Double,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Vector(System.Double, System.Double, System.Double)
  nameWithType: Vector.Vector(Double, Double, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.#ctor(System.Double[])
  name: Vector(Double[])
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector__ctor_System_Double___
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.#ctor(System.Double[])
  name.vb: Vector(Double())
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Vector(System.Double[])
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Vector.Vector(System.Double())
  nameWithType: Vector.Vector(Double[])
  nameWithType.vb: Vector.Vector(Double())
- uid: BRIDGES.Geometry.Euclidean3D.Vector.#ctor*
  name: Vector
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector__ctor_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Vector
  nameWithType: Vector.Vector
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Add(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Add(Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Add_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.Add(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Add(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.Add(Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Add*
  name: Add
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Add_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Add
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Add
  nameWithType: Vector.Add
- uid: BRIDGES.Geometry.Euclidean3D.Vector.AngleBetween(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: AngleBetween(Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_AngleBetween_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.AngleBetween(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.AngleBetween(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.AngleBetween(Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.AngleBetween*
  name: AngleBetween
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_AngleBetween_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.AngleBetween
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.AngleBetween
  nameWithType: Vector.AngleBetween
- uid: BRIDGES.Geometry.Euclidean3D.Vector.AngleWith(BRIDGES.Geometry.Euclidean3D.Vector)
  name: AngleWith(Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_AngleWith_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.AngleWith(BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.AngleWith(BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.AngleWith(Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.AngleWith*
  name: AngleWith
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_AngleWith_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.AngleWith
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.AngleWith
  nameWithType: Vector.AngleWith
- uid: BRIDGES.Geometry.Euclidean3D.Vector.AreOrthogonal(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: AreOrthogonal(Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_AreOrthogonal_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.AreOrthogonal(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.AreOrthogonal(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.AreOrthogonal(Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.AreOrthogonal*
  name: AreOrthogonal
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_AreOrthogonal_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.AreOrthogonal
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.AreOrthogonal
  nameWithType: Vector.AreOrthogonal
- uid: BRIDGES.Geometry.Euclidean3D.Vector.AreParallel(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: AreParallel(Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_AreParallel_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.AreParallel(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.AreParallel(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.AreParallel(Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.AreParallel*
  name: AreParallel
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_AreParallel_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.AreParallel
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.AreParallel
  nameWithType: Vector.AreParallel
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#Add(BRIDGES.Geometry.Euclidean3D.Vector)
  name: IAddable<Vector>.Add(Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Vector__Add_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#Add(BRIDGES.Geometry.Euclidean3D.Vector)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.Add(Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.Add(BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.IAddable<Vector>.Add(Vector)
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.Add(Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#Add*
  name: IAddable<Vector>.Add
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Vector__Add_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.Add
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.Add
  nameWithType: Vector.IAddable<Vector>.Add
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.Add
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#IsAssociative
  name: IAddable<Vector>.IsAssociative
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Vector__IsAssociative
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsAssociative
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsAssociative
  nameWithType: Vector.IAddable<Vector>.IsAssociative
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsAssociative
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#IsAssociative*
  name: IAddable<Vector>.IsAssociative
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Vector__IsAssociative_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsAssociative
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsAssociative
  nameWithType: Vector.IAddable<Vector>.IsAssociative
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsAssociative
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#IsCommutative
  name: IAddable<Vector>.IsCommutative
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Vector__IsCommutative
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsCommutative
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsCommutative
  nameWithType: Vector.IAddable<Vector>.IsCommutative
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsCommutative
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#IsCommutative*
  name: IAddable<Vector>.IsCommutative
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Euclidean3D_Vector__IsCommutative_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Euclidean3D#Vector}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsCommutative
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsCommutative
  nameWithType: Vector.IAddable<Vector>.IsCommutative
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Euclidean3D.Vector>.IsCommutative
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Euclidean3D#Vector}#Subtract(BRIDGES.Geometry.Euclidean3D.Vector)
  name: ISubtractable<Vector>.Subtract(Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Geometry_Euclidean3D_Vector__Subtract_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Euclidean3D#Vector}#Subtract(BRIDGES.Geometry.Euclidean3D.Vector)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Vector>.Subtract(Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Vector>.Subtract(BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.ISubtractable<Vector>.Subtract(Vector)
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Vector>.Subtract(Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Euclidean3D#Vector}#Subtract*
  name: ISubtractable<Vector>.Subtract
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Geometry_Euclidean3D_Vector__Subtract_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Euclidean3D#Vector}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Vector>.Subtract
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Vector>.Subtract
  nameWithType: Vector.ISubtractable<Vector>.Subtract
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Euclidean3D.Vector>.Subtract
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Euclidean3D#Vector}#Zero
  name: IZeroable<Vector>.Zero()
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Geometry_Euclidean3D_Vector__Zero
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Euclidean3D#Vector}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Vector>.Zero()
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Vector>.Zero()
  nameWithType: Vector.IZeroable<Vector>.Zero()
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Vector>.Zero()
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Euclidean3D#Vector}#Zero*
  name: IZeroable<Vector>.Zero
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Geometry_Euclidean3D_Vector__Zero_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Euclidean3D#Vector}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Vector>.Zero
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Vector>.Zero
  nameWithType: Vector.IZeroable<Vector>.Zero
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Euclidean3D.Vector>.Zero
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#DotProduct(BRIDGES.Geometry.Euclidean3D.Vector)
  name: IDotProduct<Double, Vector>.DotProduct(Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Measure_IDotProduct_System_Double_BRIDGES_Geometry_Euclidean3D_Vector__DotProduct_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#DotProduct(BRIDGES.Geometry.Euclidean3D.Vector)
  name.vb: BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.DotProduct(Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Measure.IDotProduct<System.Double, BRIDGES.Geometry.Euclidean3D.Vector>.DotProduct(BRIDGES.Geometry.Euclidean3D.Vector)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.DotProduct(BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.IDotProduct<Double, Vector>.DotProduct(Vector)
  nameWithType.vb: Vector.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.DotProduct(Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#DotProduct*
  name: IDotProduct<Double, Vector>.DotProduct
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Measure_IDotProduct_System_Double_BRIDGES_Geometry_Euclidean3D_Vector__DotProduct_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#IDotProduct{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#DotProduct
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.DotProduct
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Measure.IDotProduct<System.Double, BRIDGES.Geometry.Euclidean3D.Vector>.DotProduct
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.DotProduct
  nameWithType: Vector.IDotProduct<Double, Vector>.DotProduct
  nameWithType.vb: Vector.BRIDGES.Algebra.Measure.IDotProduct<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.DotProduct
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#Geometry#Euclidean3D#Vector}#DistanceTo(BRIDGES.Geometry.Euclidean3D.Vector)
  name: IMetric<Vector>.DistanceTo(Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Measure_IMetric_BRIDGES_Geometry_Euclidean3D_Vector__DistanceTo_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#Geometry#Euclidean3D#Vector}#DistanceTo(BRIDGES.Geometry.Euclidean3D.Vector)
  name.vb: BRIDGES.Algebra.Measure.IMetric<BRIDGES.Geometry.Euclidean3D.Vector>.DistanceTo(Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.Geometry.Euclidean3D.Vector>.DistanceTo(BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.IMetric<Vector>.DistanceTo(Vector)
  nameWithType.vb: Vector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.Geometry.Euclidean3D.Vector>.DistanceTo(Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#Geometry#Euclidean3D#Vector}#DistanceTo*
  name: IMetric<Vector>.DistanceTo
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Measure_IMetric_BRIDGES_Geometry_Euclidean3D_Vector__DistanceTo_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#Geometry#Euclidean3D#Vector}#DistanceTo
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.IMetric<BRIDGES.Geometry.Euclidean3D.Vector>.DistanceTo
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.Geometry.Euclidean3D.Vector>.DistanceTo
  nameWithType: Vector.IMetric<Vector>.DistanceTo
  nameWithType.vb: Vector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.Geometry.Euclidean3D.Vector>.DistanceTo
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#INorm{BRIDGES#Geometry#Euclidean3D#Vector}#Norm
  name: INorm<Vector>.Norm()
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Measure_INorm_BRIDGES_Geometry_Euclidean3D_Vector__Norm
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#INorm{BRIDGES#Geometry#Euclidean3D#Vector}#Norm
  name.vb: BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Vector>.Norm()
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Vector>.Norm()
  nameWithType: Vector.INorm<Vector>.Norm()
  nameWithType.vb: Vector.BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Vector>.Norm()
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#INorm{BRIDGES#Geometry#Euclidean3D#Vector}#Norm*
  name: INorm<Vector>.Norm
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Measure_INorm_BRIDGES_Geometry_Euclidean3D_Vector__Norm_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Measure#INorm{BRIDGES#Geometry#Euclidean3D#Vector}#Norm
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Vector>.Norm
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Vector>.Norm
  nameWithType: Vector.INorm<Vector>.Norm
  nameWithType.vb: Vector.BRIDGES.Algebra.Measure.INorm<BRIDGES.Geometry.Euclidean3D.Vector>.Norm
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Euclidean3D#Vector}#Opposite
  name: IGroup<Vector>.Opposite()
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_Geometry_Euclidean3D_Vector__Opposite
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Euclidean3D#Vector}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Vector>.Opposite()
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Vector>.Opposite()
  nameWithType: Vector.IGroup<Vector>.Opposite()
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Vector>.Opposite()
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Euclidean3D#Vector}#Opposite*
  name: IGroup<Vector>.Opposite
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_Geometry_Euclidean3D_Vector__Opposite_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Euclidean3D#Vector}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Vector>.Opposite
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Vector>.Opposite
  nameWithType: Vector.IGroup<Vector>.Opposite
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Euclidean3D.Vector>.Opposite
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#Divide(System.Double)
  name: IGroupAction<Double, Vector>.Divide(Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Euclidean3D_Vector__Divide_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Divide(Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Euclidean3D.Vector>.Divide(System.Double)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Divide(System.Double)
  nameWithType: Vector.IGroupAction<Double, Vector>.Divide(Double)
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Divide(Double)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#Divide*
  name: IGroupAction<Double, Vector>.Divide
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Euclidean3D_Vector__Divide_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Divide
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Euclidean3D.Vector>.Divide
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Divide
  nameWithType: Vector.IGroupAction<Double, Vector>.Divide
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Divide
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#Multiply(System.Double)
  name: IGroupAction<Double, Vector>.Multiply(Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Euclidean3D_Vector__Multiply_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Multiply(Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Euclidean3D.Vector>.Multiply(System.Double)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Multiply(System.Double)
  nameWithType: Vector.IGroupAction<Double, Vector>.Multiply(Double)
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Multiply(Double)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#Multiply*
  name: IGroupAction<Double, Vector>.Multiply
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Euclidean3D_Vector__Multiply_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Euclidean3D#Vector}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Multiply
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Euclidean3D.Vector>.Multiply
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Multiply
  nameWithType: Vector.IGroupAction<Double, Vector>.Multiply
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Euclidean3D.Vector>.Multiply
- uid: BRIDGES.Geometry.Euclidean3D.Vector.CrossProduct(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: CrossProduct(Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_CrossProduct_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.CrossProduct(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.CrossProduct(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.CrossProduct(Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.CrossProduct*
  name: CrossProduct
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_CrossProduct_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.CrossProduct
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.CrossProduct
  nameWithType: Vector.CrossProduct
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Dimension
  name: Dimension
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Dimension
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.Dimension
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Dimension
  nameWithType: Vector.Dimension
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Dimension*
  name: Dimension
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Dimension_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Dimension
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Dimension
  nameWithType: Vector.Dimension
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Divide(BRIDGES.Geometry.Euclidean3D.Vector,System.Double)
  name: Divide(Vector, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Divide_BRIDGES_Geometry_Euclidean3D_Vector_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.Divide(BRIDGES.Geometry.Euclidean3D.Vector,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Divide(BRIDGES.Geometry.Euclidean3D.Vector, System.Double)
  nameWithType: Vector.Divide(Vector, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Divide*
  name: Divide
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Divide_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Divide
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Divide
  nameWithType: Vector.Divide
- uid: BRIDGES.Geometry.Euclidean3D.Vector.DotProduct(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: DotProduct(Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_DotProduct_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.DotProduct(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.DotProduct(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.DotProduct(Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.DotProduct*
  name: DotProduct
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_DotProduct_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.DotProduct
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.DotProduct
  nameWithType: Vector.DotProduct
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Equals(BRIDGES.Geometry.Euclidean3D.Vector)
  name: Equals(Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Equals_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.Equals(BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Equals(BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.Equals(Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.Equals(System.Object)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Equals(System.Object)
  nameWithType: Vector.Equals(Object)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Equals_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Equals
  nameWithType: Vector.Equals
- uid: BRIDGES.Geometry.Euclidean3D.Vector.GetCoordinates
  name: GetCoordinates()
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_GetCoordinates
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.GetCoordinates
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.GetCoordinates()
  nameWithType: Vector.GetCoordinates()
- uid: BRIDGES.Geometry.Euclidean3D.Vector.GetCoordinates*
  name: GetCoordinates
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_GetCoordinates_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.GetCoordinates
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.GetCoordinates
  nameWithType: Vector.GetCoordinates
- uid: BRIDGES.Geometry.Euclidean3D.Vector.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_GetHashCode
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.GetHashCode
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.GetHashCode()
  nameWithType: Vector.GetHashCode()
- uid: BRIDGES.Geometry.Euclidean3D.Vector.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.GetHashCode
  nameWithType: Vector.GetHashCode
- uid: BRIDGES.Geometry.Euclidean3D.Vector.IsUnit
  name: IsUnit()
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_IsUnit
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.IsUnit
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.IsUnit()
  nameWithType: Vector.IsUnit()
- uid: BRIDGES.Geometry.Euclidean3D.Vector.IsUnit*
  name: IsUnit
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_IsUnit_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.IsUnit
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.IsUnit
  nameWithType: Vector.IsUnit
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Item_System_Int32_
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Item[System.Int32]
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Vector.Item(System.Int32)
  nameWithType: Vector.Item[Int32]
  nameWithType.vb: Vector.Item(Int32)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Item*
  name: Item
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Item_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Item
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Item
  nameWithType: Vector.Item
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Length
  name: Length()
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Length
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.Length
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Length()
  nameWithType: Vector.Length()
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Length*
  name: Length
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Length_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Length
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Length
  nameWithType: Vector.Length
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Multiply(System.Double,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Multiply(Double, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Multiply_System_Double_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.Multiply(System.Double,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Multiply(System.Double, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.Multiply(Double, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Multiply*
  name: Multiply
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Multiply_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Multiply
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Multiply
  nameWithType: Vector.Multiply
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Addition(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Point)
  name: Addition(Vector, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Addition_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.op_Addition(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Addition(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Vector.Addition(Vector, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Addition(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Addition(Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Addition_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.op_Addition(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Addition(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.Addition(Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Addition*
  name: Addition
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Addition_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.op_Addition
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Addition
  nameWithType: Vector.Addition
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Division(BRIDGES.Geometry.Euclidean3D.Vector,System.Double)
  name: Division(Vector, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Division_BRIDGES_Geometry_Euclidean3D_Vector_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.op_Division(BRIDGES.Geometry.Euclidean3D.Vector,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Division(BRIDGES.Geometry.Euclidean3D.Vector, System.Double)
  nameWithType: Vector.Division(Vector, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Division*
  name: Division
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Division_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.op_Division
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Division
  nameWithType: Vector.Division
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Implicit(BRIDGES.Geometry.Euclidean3D.Point)~BRIDGES.Geometry.Euclidean3D.Vector
  name: Implicit(Point to Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Implicit_BRIDGES_Geometry_Euclidean3D_Point__BRIDGES_Geometry_Euclidean3D_Vector
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.op_Implicit(BRIDGES.Geometry.Euclidean3D.Point)~BRIDGES.Geometry.Euclidean3D.Vector
  name.vb: Widening(Point to Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Implicit(BRIDGES.Geometry.Euclidean3D.Point to BRIDGES.Geometry.Euclidean3D.Vector)
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Vector.Widening(BRIDGES.Geometry.Euclidean3D.Point to BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.Implicit(Point to Vector)
  nameWithType.vb: Vector.Widening(Point to Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Implicit*
  name: Implicit
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Implicit_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Implicit
  fullName.vb: BRIDGES.Geometry.Euclidean3D.Vector.Widening
  nameWithType: Vector.Implicit
  nameWithType.vb: Vector.Widening
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Multiply(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Multiply(Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Multiply_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.op_Multiply(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Multiply(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.Multiply(Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Multiply(BRIDGES.Geometry.Euclidean3D.Vector,System.Double)
  name: Multiply(Vector, Double)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Multiply_BRIDGES_Geometry_Euclidean3D_Vector_System_Double_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.op_Multiply(BRIDGES.Geometry.Euclidean3D.Vector,System.Double)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Multiply(BRIDGES.Geometry.Euclidean3D.Vector, System.Double)
  nameWithType: Vector.Multiply(Vector, Double)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Multiply(System.Double,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Multiply(Double, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Multiply_System_Double_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.op_Multiply(System.Double,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Multiply(System.Double, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.Multiply(Double, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Multiply*
  name: Multiply
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Multiply_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.op_Multiply
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Multiply
  nameWithType: Vector.Multiply
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Subtraction(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Point)
  name: Subtraction(Vector, Point)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Subtraction_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Point_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.op_Subtraction(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Point)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Subtraction(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Point)
  nameWithType: Vector.Subtraction(Vector, Point)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Subtraction(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Subtraction(Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Subtraction_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.op_Subtraction(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Subtraction(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.Subtraction(Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_Subtraction*
  name: Subtraction
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_Subtraction_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.op_Subtraction
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Subtraction
  nameWithType: Vector.Subtraction
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_UnaryNegation(BRIDGES.Geometry.Euclidean3D.Vector)
  name: UnaryNegation(Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_UnaryNegation_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.op_UnaryNegation(BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.UnaryNegation(BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.UnaryNegation(Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.op_UnaryNegation*
  name: UnaryNegation
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_op_UnaryNegation_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.op_UnaryNegation
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.UnaryNegation
  nameWithType: Vector.UnaryNegation
- uid: BRIDGES.Geometry.Euclidean3D.Vector.SquaredLength
  name: SquaredLength()
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_SquaredLength
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.SquaredLength
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.SquaredLength()
  nameWithType: Vector.SquaredLength()
- uid: BRIDGES.Geometry.Euclidean3D.Vector.SquaredLength*
  name: SquaredLength
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_SquaredLength_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.SquaredLength
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.SquaredLength
  nameWithType: Vector.SquaredLength
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Subtract(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  name: Subtract(Vector, Vector)
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Subtract_BRIDGES_Geometry_Euclidean3D_Vector_BRIDGES_Geometry_Euclidean3D_Vector_
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.Subtract(BRIDGES.Geometry.Euclidean3D.Vector,BRIDGES.Geometry.Euclidean3D.Vector)
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Subtract(BRIDGES.Geometry.Euclidean3D.Vector, BRIDGES.Geometry.Euclidean3D.Vector)
  nameWithType: Vector.Subtract(Vector, Vector)
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Subtract*
  name: Subtract
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Subtract_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Subtract
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Subtract
  nameWithType: Vector.Subtract
- uid: BRIDGES.Geometry.Euclidean3D.Vector.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_ToString
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.ToString
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.ToString()
  nameWithType: Vector.ToString()
- uid: BRIDGES.Geometry.Euclidean3D.Vector.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_ToString_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.ToString
  nameWithType: Vector.ToString
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Unitise
  name: Unitise()
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Unitise
  commentId: M:BRIDGES.Geometry.Euclidean3D.Vector.Unitise
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Unitise()
  nameWithType: Vector.Unitise()
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Unitise*
  name: Unitise
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Unitise_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Unitise
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Unitise
  nameWithType: Vector.Unitise
- uid: BRIDGES.Geometry.Euclidean3D.Vector.WorldX
  name: WorldX
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_WorldX
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.WorldX
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.WorldX
  nameWithType: Vector.WorldX
- uid: BRIDGES.Geometry.Euclidean3D.Vector.WorldX*
  name: WorldX
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_WorldX_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.WorldX
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.WorldX
  nameWithType: Vector.WorldX
- uid: BRIDGES.Geometry.Euclidean3D.Vector.WorldY
  name: WorldY
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_WorldY
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.WorldY
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.WorldY
  nameWithType: Vector.WorldY
- uid: BRIDGES.Geometry.Euclidean3D.Vector.WorldY*
  name: WorldY
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_WorldY_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.WorldY
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.WorldY
  nameWithType: Vector.WorldY
- uid: BRIDGES.Geometry.Euclidean3D.Vector.WorldZ
  name: WorldZ
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_WorldZ
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.WorldZ
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.WorldZ
  nameWithType: Vector.WorldZ
- uid: BRIDGES.Geometry.Euclidean3D.Vector.WorldZ*
  name: WorldZ
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_WorldZ_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.WorldZ
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.WorldZ
  nameWithType: Vector.WorldZ
- uid: BRIDGES.Geometry.Euclidean3D.Vector.X
  name: X
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_X
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.X
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.X
  nameWithType: Vector.X
- uid: BRIDGES.Geometry.Euclidean3D.Vector.X*
  name: X
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_X_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.X
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.X
  nameWithType: Vector.X
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Y
  name: Y
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Y
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.Y
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Y
  nameWithType: Vector.Y
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Y*
  name: Y
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Y_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Y
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Y
  nameWithType: Vector.Y
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Z
  name: Z
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Z
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.Z
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Z
  nameWithType: Vector.Z
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Z*
  name: Z
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Z_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Z
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Z
  nameWithType: Vector.Z
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Zero
  name: Zero
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Zero
  commentId: P:BRIDGES.Geometry.Euclidean3D.Vector.Zero
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Zero
  nameWithType: Vector.Zero
- uid: BRIDGES.Geometry.Euclidean3D.Vector.Zero*
  name: Zero
  href: api/BRIDGES.Geometry.Euclidean3D.Vector.html#BRIDGES_Geometry_Euclidean3D_Vector_Zero_
  commentId: Overload:BRIDGES.Geometry.Euclidean3D.Vector.Zero
  isSpec: "True"
  fullName: BRIDGES.Geometry.Euclidean3D.Vector.Zero
  nameWithType: Vector.Zero
- uid: BRIDGES.Geometry.Kernel
  name: BRIDGES.Geometry.Kernel
  href: api/BRIDGES.Geometry.Kernel.html
  commentId: N:BRIDGES.Geometry.Kernel
  fullName: BRIDGES.Geometry.Kernel
  nameWithType: BRIDGES.Geometry.Kernel
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1
  name: BSplineCurve<TPoint>
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html
  commentId: T:BRIDGES.Geometry.Kernel.BSplineCurve`1
  name.vb: BSplineCurve(Of TPoint)
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint)
  nameWithType: BSplineCurve<TPoint>
  nameWithType.vb: BSplineCurve(Of TPoint)
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.#ctor
  name: BSplineCurve()
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1__ctor
  commentId: M:BRIDGES.Geometry.Kernel.BSplineCurve`1.#ctor
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.BSplineCurve()
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).BSplineCurve()
  nameWithType: BSplineCurve<TPoint>.BSplineCurve()
  nameWithType.vb: BSplineCurve(Of TPoint).BSplineCurve()
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.#ctor(System.Int32,IEnumerable{`0})
  name: BSplineCurve(Int32, IEnumerable<TPoint>)
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1__ctor_System_Int32_IEnumerable__0__
  commentId: M:BRIDGES.Geometry.Kernel.BSplineCurve`1.#ctor(System.Int32,IEnumerable{`0})
  name.vb: BSplineCurve(Int32, IEnumerable(Of TPoint))
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.BSplineCurve(System.Int32, IEnumerable<TPoint>)
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).BSplineCurve(System.Int32, IEnumerable(Of TPoint))
  nameWithType: BSplineCurve<TPoint>.BSplineCurve(Int32, IEnumerable<TPoint>)
  nameWithType.vb: BSplineCurve(Of TPoint).BSplineCurve(Int32, IEnumerable(Of TPoint))
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.#ctor(System.Int32,IEnumerable{System.Double},IEnumerable{`0})
  name: BSplineCurve(Int32, IEnumerable<Double>, IEnumerable<TPoint>)
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1__ctor_System_Int32_IEnumerable_System_Double__IEnumerable__0__
  commentId: M:BRIDGES.Geometry.Kernel.BSplineCurve`1.#ctor(System.Int32,IEnumerable{System.Double},IEnumerable{`0})
  name.vb: BSplineCurve(Int32, IEnumerable(Of Double), IEnumerable(Of TPoint))
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.BSplineCurve(System.Int32, IEnumerable<System.Double>, IEnumerable<TPoint>)
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).BSplineCurve(System.Int32, IEnumerable(Of System.Double), IEnumerable(Of TPoint))
  nameWithType: BSplineCurve<TPoint>.BSplineCurve(Int32, IEnumerable<Double>, IEnumerable<TPoint>)
  nameWithType.vb: BSplineCurve(Of TPoint).BSplineCurve(Int32, IEnumerable(Of Double), IEnumerable(Of TPoint))
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.#ctor*
  name: BSplineCurve
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1__ctor_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.BSplineCurve
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).BSplineCurve
  nameWithType: BSplineCurve<TPoint>.BSplineCurve
  nameWithType.vb: BSplineCurve(Of TPoint).BSplineCurve
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1._controlPoints
  name: _controlPoints
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1__controlPoints
  commentId: F:BRIDGES.Geometry.Kernel.BSplineCurve`1._controlPoints
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>._controlPoints
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint)._controlPoints
  nameWithType: BSplineCurve<TPoint>._controlPoints
  nameWithType.vb: BSplineCurve(Of TPoint)._controlPoints
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1._knotVector
  name: _knotVector
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1__knotVector
  commentId: F:BRIDGES.Geometry.Kernel.BSplineCurve`1._knotVector
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>._knotVector
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint)._knotVector
  nameWithType: BSplineCurve<TPoint>._knotVector
  nameWithType.vb: BSplineCurve(Of TPoint)._knotVector
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.Degree
  name: Degree
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_Degree
  commentId: P:BRIDGES.Geometry.Kernel.BSplineCurve`1.Degree
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.Degree
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).Degree
  nameWithType: BSplineCurve<TPoint>.Degree
  nameWithType.vb: BSplineCurve(Of TPoint).Degree
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.Degree*
  name: Degree
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_Degree_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.Degree
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.Degree
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).Degree
  nameWithType: BSplineCurve<TPoint>.Degree
  nameWithType.vb: BSplineCurve(Of TPoint).Degree
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.DomainEnd
  name: DomainEnd
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_DomainEnd
  commentId: P:BRIDGES.Geometry.Kernel.BSplineCurve`1.DomainEnd
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.DomainEnd
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).DomainEnd
  nameWithType: BSplineCurve<TPoint>.DomainEnd
  nameWithType.vb: BSplineCurve(Of TPoint).DomainEnd
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.DomainEnd*
  name: DomainEnd
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_DomainEnd_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.DomainEnd
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.DomainEnd
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).DomainEnd
  nameWithType: BSplineCurve<TPoint>.DomainEnd
  nameWithType.vb: BSplineCurve(Of TPoint).DomainEnd
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.DomainStart
  name: DomainStart
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_DomainStart
  commentId: P:BRIDGES.Geometry.Kernel.BSplineCurve`1.DomainStart
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.DomainStart
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).DomainStart
  nameWithType: BSplineCurve<TPoint>.DomainStart
  nameWithType.vb: BSplineCurve(Of TPoint).DomainStart
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.DomainStart*
  name: DomainStart
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_DomainStart_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.DomainStart
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.DomainStart
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).DomainStart
  nameWithType: BSplineCurve<TPoint>.DomainStart
  nameWithType.vb: BSplineCurve(Of TPoint).DomainStart
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.EndPoint
  name: EndPoint
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_EndPoint
  commentId: P:BRIDGES.Geometry.Kernel.BSplineCurve`1.EndPoint
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.EndPoint
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).EndPoint
  nameWithType: BSplineCurve<TPoint>.EndPoint
  nameWithType.vb: BSplineCurve(Of TPoint).EndPoint
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.EndPoint*
  name: EndPoint
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_EndPoint_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.EndPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.EndPoint
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).EndPoint
  nameWithType: BSplineCurve<TPoint>.EndPoint
  nameWithType.vb: BSplineCurve(Of TPoint).EndPoint
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.Flip
  name: Flip()
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_Flip
  commentId: M:BRIDGES.Geometry.Kernel.BSplineCurve`1.Flip
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.Flip()
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).Flip()
  nameWithType: BSplineCurve<TPoint>.Flip()
  nameWithType.vb: BSplineCurve(Of TPoint).Flip()
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.Flip*
  name: Flip
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_Flip_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.Flip
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.Flip
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).Flip
  nameWithType: BSplineCurve<TPoint>.Flip
  nameWithType.vb: BSplineCurve(Of TPoint).Flip
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.GetKnot(System.Int32)
  name: GetKnot(Int32)
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_GetKnot_System_Int32_
  commentId: M:BRIDGES.Geometry.Kernel.BSplineCurve`1.GetKnot(System.Int32)
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.GetKnot(System.Int32)
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).GetKnot(System.Int32)
  nameWithType: BSplineCurve<TPoint>.GetKnot(Int32)
  nameWithType.vb: BSplineCurve(Of TPoint).GetKnot(Int32)
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.GetKnot*
  name: GetKnot
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_GetKnot_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.GetKnot
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.GetKnot
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).GetKnot
  nameWithType: BSplineCurve<TPoint>.GetKnot
  nameWithType.vb: BSplineCurve(Of TPoint).GetKnot
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.IsClosed
  name: IsClosed
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_IsClosed
  commentId: P:BRIDGES.Geometry.Kernel.BSplineCurve`1.IsClosed
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.IsClosed
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).IsClosed
  nameWithType: BSplineCurve<TPoint>.IsClosed
  nameWithType.vb: BSplineCurve(Of TPoint).IsClosed
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.IsClosed*
  name: IsClosed
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_IsClosed_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.IsClosed
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.IsClosed
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).IsClosed
  nameWithType: BSplineCurve<TPoint>.IsClosed
  nameWithType.vb: BSplineCurve(Of TPoint).IsClosed
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.KnotCount
  name: KnotCount
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_KnotCount
  commentId: P:BRIDGES.Geometry.Kernel.BSplineCurve`1.KnotCount
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.KnotCount
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).KnotCount
  nameWithType: BSplineCurve<TPoint>.KnotCount
  nameWithType.vb: BSplineCurve(Of TPoint).KnotCount
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.KnotCount*
  name: KnotCount
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_KnotCount_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.KnotCount
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.KnotCount
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).KnotCount
  nameWithType: BSplineCurve<TPoint>.KnotCount
  nameWithType.vb: BSplineCurve(Of TPoint).KnotCount
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.Length
  name: Length()
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_Length
  commentId: M:BRIDGES.Geometry.Kernel.BSplineCurve`1.Length
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.Length()
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).Length()
  nameWithType: BSplineCurve<TPoint>.Length()
  nameWithType.vb: BSplineCurve(Of TPoint).Length()
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.Length*
  name: Length
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_Length_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.Length
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.Length
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).Length
  nameWithType: BSplineCurve<TPoint>.Length
  nameWithType.vb: BSplineCurve(Of TPoint).Length
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.PointAt(System.Double,BRIDGES.Geometry.Kernel.CurveParameterFormat)
  name: PointAt(Double, CurveParameterFormat)
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_PointAt_System_Double_BRIDGES_Geometry_Kernel_CurveParameterFormat_
  commentId: M:BRIDGES.Geometry.Kernel.BSplineCurve`1.PointAt(System.Double,BRIDGES.Geometry.Kernel.CurveParameterFormat)
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.PointAt(System.Double, BRIDGES.Geometry.Kernel.CurveParameterFormat)
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).PointAt(System.Double, BRIDGES.Geometry.Kernel.CurveParameterFormat)
  nameWithType: BSplineCurve<TPoint>.PointAt(Double, CurveParameterFormat)
  nameWithType.vb: BSplineCurve(Of TPoint).PointAt(Double, CurveParameterFormat)
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.PointAt*
  name: PointAt
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_PointAt_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.PointAt
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.PointAt
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).PointAt
  nameWithType: BSplineCurve<TPoint>.PointAt
  nameWithType.vb: BSplineCurve(Of TPoint).PointAt
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.PointCount
  name: PointCount
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_PointCount
  commentId: P:BRIDGES.Geometry.Kernel.BSplineCurve`1.PointCount
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.PointCount
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).PointCount
  nameWithType: BSplineCurve<TPoint>.PointCount
  nameWithType.vb: BSplineCurve(Of TPoint).PointCount
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.PointCount*
  name: PointCount
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_PointCount_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.PointCount
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.PointCount
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).PointCount
  nameWithType: BSplineCurve<TPoint>.PointCount
  nameWithType.vb: BSplineCurve(Of TPoint).PointCount
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.SetControlPoints(IEnumerable{`0})
  name: SetControlPoints(IEnumerable<TPoint>)
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_SetControlPoints_IEnumerable__0__
  commentId: M:BRIDGES.Geometry.Kernel.BSplineCurve`1.SetControlPoints(IEnumerable{`0})
  name.vb: SetControlPoints(IEnumerable(Of TPoint))
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.SetControlPoints(IEnumerable<TPoint>)
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).SetControlPoints(IEnumerable(Of TPoint))
  nameWithType: BSplineCurve<TPoint>.SetControlPoints(IEnumerable<TPoint>)
  nameWithType.vb: BSplineCurve(Of TPoint).SetControlPoints(IEnumerable(Of TPoint))
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.SetControlPoints*
  name: SetControlPoints
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_SetControlPoints_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.SetControlPoints
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.SetControlPoints
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).SetControlPoints
  nameWithType: BSplineCurve<TPoint>.SetControlPoints
  nameWithType.vb: BSplineCurve(Of TPoint).SetControlPoints
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.SetKnotVector(IEnumerable{System.Double})
  name: SetKnotVector(IEnumerable<Double>)
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_SetKnotVector_IEnumerable_System_Double__
  commentId: M:BRIDGES.Geometry.Kernel.BSplineCurve`1.SetKnotVector(IEnumerable{System.Double})
  name.vb: SetKnotVector(IEnumerable(Of Double))
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.SetKnotVector(IEnumerable<System.Double>)
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).SetKnotVector(IEnumerable(Of System.Double))
  nameWithType: BSplineCurve<TPoint>.SetKnotVector(IEnumerable<Double>)
  nameWithType.vb: BSplineCurve(Of TPoint).SetKnotVector(IEnumerable(Of Double))
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.SetKnotVector*
  name: SetKnotVector
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_SetKnotVector_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.SetKnotVector
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.SetKnotVector
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).SetKnotVector
  nameWithType: BSplineCurve<TPoint>.SetKnotVector
  nameWithType.vb: BSplineCurve(Of TPoint).SetKnotVector
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.SetUniformKnotVector(System.Double,System.Double,System.Int32,System.Int32)
  name: SetUniformKnotVector(Double, Double, Int32, Int32)
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_SetUniformKnotVector_System_Double_System_Double_System_Int32_System_Int32_
  commentId: M:BRIDGES.Geometry.Kernel.BSplineCurve`1.SetUniformKnotVector(System.Double,System.Double,System.Int32,System.Int32)
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.SetUniformKnotVector(System.Double, System.Double, System.Int32, System.Int32)
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).SetUniformKnotVector(System.Double, System.Double, System.Int32, System.Int32)
  nameWithType: BSplineCurve<TPoint>.SetUniformKnotVector(Double, Double, Int32, Int32)
  nameWithType.vb: BSplineCurve(Of TPoint).SetUniformKnotVector(Double, Double, Int32, Int32)
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.SetUniformKnotVector*
  name: SetUniformKnotVector
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_SetUniformKnotVector_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.SetUniformKnotVector
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.SetUniformKnotVector
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).SetUniformKnotVector
  nameWithType: BSplineCurve<TPoint>.SetUniformKnotVector
  nameWithType.vb: BSplineCurve(Of TPoint).SetUniformKnotVector
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.StartPoint
  name: StartPoint
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_StartPoint
  commentId: P:BRIDGES.Geometry.Kernel.BSplineCurve`1.StartPoint
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.StartPoint
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).StartPoint
  nameWithType: BSplineCurve<TPoint>.StartPoint
  nameWithType.vb: BSplineCurve(Of TPoint).StartPoint
- uid: BRIDGES.Geometry.Kernel.BSplineCurve`1.StartPoint*
  name: StartPoint
  href: api/BRIDGES.Geometry.Kernel.BSplineCurve-1.html#BRIDGES_Geometry_Kernel_BSplineCurve_1_StartPoint_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineCurve`1.StartPoint
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineCurve<TPoint>.StartPoint
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineCurve(Of TPoint).StartPoint
  nameWithType: BSplineCurve<TPoint>.StartPoint
  nameWithType.vb: BSplineCurve(Of TPoint).StartPoint
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1
  name: BSplineSurface<TPoint>
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html
  commentId: T:BRIDGES.Geometry.Kernel.BSplineSurface`1
  name.vb: BSplineSurface(Of TPoint)
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint)
  nameWithType: BSplineSurface<TPoint>
  nameWithType.vb: BSplineSurface(Of TPoint)
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.#ctor
  name: BSplineSurface()
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1__ctor
  commentId: M:BRIDGES.Geometry.Kernel.BSplineSurface`1.#ctor
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.BSplineSurface()
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).BSplineSurface()
  nameWithType: BSplineSurface<TPoint>.BSplineSurface()
  nameWithType.vb: BSplineSurface(Of TPoint).BSplineSurface()
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.#ctor(System.Int32,System.Int32,`0[0:,0:])
  name: BSplineSurface(Int32, Int32, TPoint[,])
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1__ctor_System_Int32_System_Int32__0_0__0___
  commentId: M:BRIDGES.Geometry.Kernel.BSplineSurface`1.#ctor(System.Int32,System.Int32,`0[0:,0:])
  name.vb: BSplineSurface(Int32, Int32, TPoint(,))
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.BSplineSurface(System.Int32, System.Int32, TPoint[,])
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).BSplineSurface(System.Int32, System.Int32, TPoint(,))
  nameWithType: BSplineSurface<TPoint>.BSplineSurface(Int32, Int32, TPoint[,])
  nameWithType.vb: BSplineSurface(Of TPoint).BSplineSurface(Int32, Int32, TPoint(,))
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.#ctor*
  name: BSplineSurface
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1__ctor_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineSurface`1.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.BSplineSurface
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).BSplineSurface
  nameWithType: BSplineSurface<TPoint>.BSplineSurface
  nameWithType.vb: BSplineSurface(Of TPoint).BSplineSurface
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1._controlPoints
  name: _controlPoints
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1__controlPoints
  commentId: F:BRIDGES.Geometry.Kernel.BSplineSurface`1._controlPoints
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>._controlPoints
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint)._controlPoints
  nameWithType: BSplineSurface<TPoint>._controlPoints
  nameWithType.vb: BSplineSurface(Of TPoint)._controlPoints
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1._knotVectorU
  name: _knotVectorU
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1__knotVectorU
  commentId: F:BRIDGES.Geometry.Kernel.BSplineSurface`1._knotVectorU
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>._knotVectorU
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint)._knotVectorU
  nameWithType: BSplineSurface<TPoint>._knotVectorU
  nameWithType.vb: BSplineSurface(Of TPoint)._knotVectorU
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1._knotVectorV
  name: _knotVectorV
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1__knotVectorV
  commentId: F:BRIDGES.Geometry.Kernel.BSplineSurface`1._knotVectorV
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>._knotVectorV
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint)._knotVectorV
  nameWithType: BSplineSurface<TPoint>._knotVectorV
  nameWithType.vb: BSplineSurface(Of TPoint)._knotVectorV
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.DegreeU
  name: DegreeU
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_DegreeU
  commentId: P:BRIDGES.Geometry.Kernel.BSplineSurface`1.DegreeU
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.DegreeU
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).DegreeU
  nameWithType: BSplineSurface<TPoint>.DegreeU
  nameWithType.vb: BSplineSurface(Of TPoint).DegreeU
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.DegreeU*
  name: DegreeU
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_DegreeU_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineSurface`1.DegreeU
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.DegreeU
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).DegreeU
  nameWithType: BSplineSurface<TPoint>.DegreeU
  nameWithType.vb: BSplineSurface(Of TPoint).DegreeU
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.DegreeV
  name: DegreeV
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_DegreeV
  commentId: P:BRIDGES.Geometry.Kernel.BSplineSurface`1.DegreeV
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.DegreeV
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).DegreeV
  nameWithType: BSplineSurface<TPoint>.DegreeV
  nameWithType.vb: BSplineSurface(Of TPoint).DegreeV
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.DegreeV*
  name: DegreeV
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_DegreeV_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineSurface`1.DegreeV
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.DegreeV
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).DegreeV
  nameWithType: BSplineSurface<TPoint>.DegreeV
  nameWithType.vb: BSplineSurface(Of TPoint).DegreeV
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.KnotCountU
  name: KnotCountU
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_KnotCountU
  commentId: P:BRIDGES.Geometry.Kernel.BSplineSurface`1.KnotCountU
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.KnotCountU
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).KnotCountU
  nameWithType: BSplineSurface<TPoint>.KnotCountU
  nameWithType.vb: BSplineSurface(Of TPoint).KnotCountU
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.KnotCountU*
  name: KnotCountU
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_KnotCountU_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineSurface`1.KnotCountU
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.KnotCountU
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).KnotCountU
  nameWithType: BSplineSurface<TPoint>.KnotCountU
  nameWithType.vb: BSplineSurface(Of TPoint).KnotCountU
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.KnotCountV
  name: KnotCountV
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_KnotCountV
  commentId: P:BRIDGES.Geometry.Kernel.BSplineSurface`1.KnotCountV
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.KnotCountV
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).KnotCountV
  nameWithType: BSplineSurface<TPoint>.KnotCountV
  nameWithType.vb: BSplineSurface(Of TPoint).KnotCountV
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.KnotCountV*
  name: KnotCountV
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_KnotCountV_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineSurface`1.KnotCountV
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.KnotCountV
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).KnotCountV
  nameWithType: BSplineSurface<TPoint>.KnotCountV
  nameWithType.vb: BSplineSurface(Of TPoint).KnotCountV
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.PointAt(System.ValueTuple{System.Double,System.Double})
  name: PointAt((Double, Double))
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_PointAt_System_ValueTuple_System_Double_System_Double__
  commentId: M:BRIDGES.Geometry.Kernel.BSplineSurface`1.PointAt(System.ValueTuple{System.Double,System.Double})
  name.vb: PointAt((Double, Double)(Of Double, Double))
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.PointAt(System.ValueTuple<System.Double, System.Double>)
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).PointAt(System.ValueTuple(Of System.Double, System.Double))
  nameWithType: BSplineSurface<TPoint>.PointAt((Double, Double))
  nameWithType.vb: BSplineSurface(Of TPoint).PointAt((Double, Double)(Of Double, Double))
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.PointAt*
  name: PointAt
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_PointAt_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineSurface`1.PointAt
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.PointAt
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).PointAt
  nameWithType: BSplineSurface<TPoint>.PointAt
  nameWithType.vb: BSplineSurface(Of TPoint).PointAt
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.PointCountU
  name: PointCountU
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_PointCountU
  commentId: P:BRIDGES.Geometry.Kernel.BSplineSurface`1.PointCountU
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.PointCountU
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).PointCountU
  nameWithType: BSplineSurface<TPoint>.PointCountU
  nameWithType.vb: BSplineSurface(Of TPoint).PointCountU
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.PointCountU*
  name: PointCountU
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_PointCountU_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineSurface`1.PointCountU
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.PointCountU
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).PointCountU
  nameWithType: BSplineSurface<TPoint>.PointCountU
  nameWithType.vb: BSplineSurface(Of TPoint).PointCountU
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.PointCountV
  name: PointCountV
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_PointCountV
  commentId: P:BRIDGES.Geometry.Kernel.BSplineSurface`1.PointCountV
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.PointCountV
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).PointCountV
  nameWithType: BSplineSurface<TPoint>.PointCountV
  nameWithType.vb: BSplineSurface(Of TPoint).PointCountV
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.PointCountV*
  name: PointCountV
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_PointCountV_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineSurface`1.PointCountV
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.PointCountV
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).PointCountV
  nameWithType: BSplineSurface<TPoint>.PointCountV
  nameWithType.vb: BSplineSurface(Of TPoint).PointCountV
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.SetControlPoints(`0[0:,0:])
  name: SetControlPoints(TPoint[,])
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_SetControlPoints__0_0__0___
  commentId: M:BRIDGES.Geometry.Kernel.BSplineSurface`1.SetControlPoints(`0[0:,0:])
  name.vb: SetControlPoints(TPoint(,))
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.SetControlPoints(TPoint[,])
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).SetControlPoints(TPoint(,))
  nameWithType: BSplineSurface<TPoint>.SetControlPoints(TPoint[,])
  nameWithType.vb: BSplineSurface(Of TPoint).SetControlPoints(TPoint(,))
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.SetControlPoints*
  name: SetControlPoints
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_SetControlPoints_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineSurface`1.SetControlPoints
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.SetControlPoints
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).SetControlPoints
  nameWithType: BSplineSurface<TPoint>.SetControlPoints
  nameWithType.vb: BSplineSurface(Of TPoint).SetControlPoints
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.SetUniformKnotVectors(System.ValueTuple{System.Double,System.Double},System.ValueTuple{System.Double,System.Double},System.ValueTuple{System.Int32,System.Int32},System.ValueTuple{System.Int32,System.Int32})
  name: SetUniformKnotVectors((Double, Double), (Double, Double), (Int32, Int32), (Int32, Int32))
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_SetUniformKnotVectors_System_ValueTuple_System_Double_System_Double__System_ValueTuple_System_Double_System_Double__System_ValueTuple_System_Int32_System_Int32__System_ValueTuple_System_Int32_System_Int32__
  commentId: M:BRIDGES.Geometry.Kernel.BSplineSurface`1.SetUniformKnotVectors(System.ValueTuple{System.Double,System.Double},System.ValueTuple{System.Double,System.Double},System.ValueTuple{System.Int32,System.Int32},System.ValueTuple{System.Int32,System.Int32})
  name.vb: SetUniformKnotVectors((Double, Double)(Of Double, Double), (Double, Double)(Of Double, Double), (Int32, Int32)(Of Int32, Int32), (Int32, Int32)(Of Int32, Int32))
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.SetUniformKnotVectors(System.ValueTuple<System.Double, System.Double>, System.ValueTuple<System.Double, System.Double>, System.ValueTuple<System.Int32, System.Int32>, System.ValueTuple<System.Int32, System.Int32>)
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).SetUniformKnotVectors(System.ValueTuple(Of System.Double, System.Double), System.ValueTuple(Of System.Double, System.Double), System.ValueTuple(Of System.Int32, System.Int32), System.ValueTuple(Of System.Int32, System.Int32))
  nameWithType: BSplineSurface<TPoint>.SetUniformKnotVectors((Double, Double), (Double, Double), (Int32, Int32), (Int32, Int32))
  nameWithType.vb: BSplineSurface(Of TPoint).SetUniformKnotVectors((Double, Double)(Of Double, Double), (Double, Double)(Of Double, Double), (Int32, Int32)(Of Int32, Int32), (Int32, Int32)(Of Int32, Int32))
- uid: BRIDGES.Geometry.Kernel.BSplineSurface`1.SetUniformKnotVectors*
  name: SetUniformKnotVectors
  href: api/BRIDGES.Geometry.Kernel.BSplineSurface-1.html#BRIDGES_Geometry_Kernel_BSplineSurface_1_SetUniformKnotVectors_
  commentId: Overload:BRIDGES.Geometry.Kernel.BSplineSurface`1.SetUniformKnotVectors
  isSpec: "True"
  fullName: BRIDGES.Geometry.Kernel.BSplineSurface<TPoint>.SetUniformKnotVectors
  fullName.vb: BRIDGES.Geometry.Kernel.BSplineSurface(Of TPoint).SetUniformKnotVectors
  nameWithType: BSplineSurface<TPoint>.SetUniformKnotVectors
  nameWithType.vb: BSplineSurface(Of TPoint).SetUniformKnotVectors
- uid: BRIDGES.Geometry.Kernel.CurveParameterFormat
  name: CurveParameterFormat
  href: api/BRIDGES.Geometry.Kernel.CurveParameterFormat.html
  commentId: T:BRIDGES.Geometry.Kernel.CurveParameterFormat
  fullName: BRIDGES.Geometry.Kernel.CurveParameterFormat
  nameWithType: CurveParameterFormat
- uid: BRIDGES.Geometry.Kernel.CurveParameterFormat.ArcLength
  name: ArcLength
  href: api/BRIDGES.Geometry.Kernel.CurveParameterFormat.html#BRIDGES_Geometry_Kernel_CurveParameterFormat_ArcLength
  commentId: F:BRIDGES.Geometry.Kernel.CurveParameterFormat.ArcLength
  fullName: BRIDGES.Geometry.Kernel.CurveParameterFormat.ArcLength
  nameWithType: CurveParameterFormat.ArcLength
- uid: BRIDGES.Geometry.Kernel.CurveParameterFormat.Normalised
  name: Normalised
  href: api/BRIDGES.Geometry.Kernel.CurveParameterFormat.html#BRIDGES_Geometry_Kernel_CurveParameterFormat_Normalised
  commentId: F:BRIDGES.Geometry.Kernel.CurveParameterFormat.Normalised
  fullName: BRIDGES.Geometry.Kernel.CurveParameterFormat.Normalised
  nameWithType: CurveParameterFormat.Normalised
- uid: BRIDGES.Geometry.Projective3D
  name: BRIDGES.Geometry.Projective3D
  href: api/BRIDGES.Geometry.Projective3D.html
  commentId: N:BRIDGES.Geometry.Projective3D
  fullName: BRIDGES.Geometry.Projective3D
  nameWithType: BRIDGES.Geometry.Projective3D
- uid: BRIDGES.Geometry.Projective3D.Point
  name: Point
  href: api/BRIDGES.Geometry.Projective3D.Point.html
  commentId: T:BRIDGES.Geometry.Projective3D.Point
  fullName: BRIDGES.Geometry.Projective3D.Point
  nameWithType: Point
- uid: BRIDGES.Geometry.Projective3D.Point.#ctor(BRIDGES.Geometry.Projective3D.Point)
  name: Point(Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point__ctor_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.#ctor(BRIDGES.Geometry.Projective3D.Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.Point(BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.Point(Point)
- uid: BRIDGES.Geometry.Projective3D.Point.#ctor(System.Double,System.Double,System.Double,System.Double)
  name: Point(Double, Double, Double, Double)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point__ctor_System_Double_System_Double_System_Double_System_Double_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.#ctor(System.Double,System.Double,System.Double,System.Double)
  fullName: BRIDGES.Geometry.Projective3D.Point.Point(System.Double, System.Double, System.Double, System.Double)
  nameWithType: Point.Point(Double, Double, Double, Double)
- uid: BRIDGES.Geometry.Projective3D.Point.#ctor(System.Double[])
  name: Point(Double[])
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point__ctor_System_Double___
  commentId: M:BRIDGES.Geometry.Projective3D.Point.#ctor(System.Double[])
  name.vb: Point(Double())
  fullName: BRIDGES.Geometry.Projective3D.Point.Point(System.Double[])
  fullName.vb: BRIDGES.Geometry.Projective3D.Point.Point(System.Double())
  nameWithType: Point.Point(Double[])
  nameWithType.vb: Point.Point(Double())
- uid: BRIDGES.Geometry.Projective3D.Point.#ctor*
  name: Point
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point__ctor_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.#ctor
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Point
  nameWithType: Point.Point
- uid: BRIDGES.Geometry.Projective3D.Point.Add(BRIDGES.Geometry.Projective3D.Point,BRIDGES.Geometry.Projective3D.Point)
  name: Add(Point, Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Add_BRIDGES_Geometry_Projective3D_Point_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.Add(BRIDGES.Geometry.Projective3D.Point,BRIDGES.Geometry.Projective3D.Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.Add(BRIDGES.Geometry.Projective3D.Point, BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.Add(Point, Point)
- uid: BRIDGES.Geometry.Projective3D.Point.Add*
  name: Add
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Add_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.Add
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Add
  nameWithType: Point.Add
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#Add(BRIDGES.Geometry.Projective3D.Point)
  name: IAddable<Point>.Add(Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Projective3D_Point__Add_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#Add(BRIDGES.Geometry.Projective3D.Point)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.Add(Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.Add(BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.IAddable<Point>.Add(Point)
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.Add(Point)
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#Add*
  name: IAddable<Point>.Add
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Projective3D_Point__Add_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.Add
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.Add
  nameWithType: Point.IAddable<Point>.Add
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.Add
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#IsAssociative
  name: IAddable<Point>.IsAssociative
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Projective3D_Point__IsAssociative
  commentId: P:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsAssociative
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsAssociative
  nameWithType: Point.IAddable<Point>.IsAssociative
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsAssociative
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#IsAssociative*
  name: IAddable<Point>.IsAssociative
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Projective3D_Point__IsAssociative_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsAssociative
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsAssociative
  nameWithType: Point.IAddable<Point>.IsAssociative
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsAssociative
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#IsCommutative
  name: IAddable<Point>.IsCommutative
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Projective3D_Point__IsCommutative
  commentId: P:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsCommutative
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsCommutative
  nameWithType: Point.IAddable<Point>.IsCommutative
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsCommutative
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#IsCommutative*
  name: IAddable<Point>.IsCommutative
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_Geometry_Projective3D_Point__IsCommutative_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#Geometry#Projective3D#Point}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsCommutative
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsCommutative
  nameWithType: Point.IAddable<Point>.IsCommutative
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.Geometry.Projective3D.Point>.IsCommutative
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Projective3D#Point}#Subtract(BRIDGES.Geometry.Projective3D.Point)
  name: ISubtractable<Point>.Subtract(Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Geometry_Projective3D_Point__Subtract_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Projective3D#Point}#Subtract(BRIDGES.Geometry.Projective3D.Point)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Projective3D.Point>.Subtract(Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Projective3D.Point>.Subtract(BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.ISubtractable<Point>.Subtract(Point)
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Projective3D.Point>.Subtract(Point)
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Projective3D#Point}#Subtract*
  name: ISubtractable<Point>.Subtract
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_Geometry_Projective3D_Point__Subtract_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#Geometry#Projective3D#Point}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Projective3D.Point>.Subtract
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Projective3D.Point>.Subtract
  nameWithType: Point.ISubtractable<Point>.Subtract
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.Geometry.Projective3D.Point>.Subtract
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Projective3D#Point}#Zero
  name: IZeroable<Point>.Zero()
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Geometry_Projective3D_Point__Zero
  commentId: M:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Projective3D#Point}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Projective3D.Point>.Zero()
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Projective3D.Point>.Zero()
  nameWithType: Point.IZeroable<Point>.Zero()
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Projective3D.Point>.Zero()
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Projective3D#Point}#Zero*
  name: IZeroable<Point>.Zero
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_Geometry_Projective3D_Point__Zero_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#Geometry#Projective3D#Point}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Projective3D.Point>.Zero
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Projective3D.Point>.Zero
  nameWithType: Point.IZeroable<Point>.Zero
  nameWithType.vb: Point.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.Geometry.Projective3D.Point>.Zero
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Projective3D#Point}#Opposite
  name: IGroup<Point>.Opposite()
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_Geometry_Projective3D_Point__Opposite
  commentId: M:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Projective3D#Point}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Projective3D.Point>.Opposite()
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Projective3D.Point>.Opposite()
  nameWithType: Point.IGroup<Point>.Opposite()
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Projective3D.Point>.Opposite()
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Projective3D#Point}#Opposite*
  name: IGroup<Point>.Opposite
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_Geometry_Projective3D_Point__Opposite_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#Geometry#Projective3D#Point}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Projective3D.Point>.Opposite
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Projective3D.Point>.Opposite
  nameWithType: Point.IGroup<Point>.Opposite
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.Geometry.Projective3D.Point>.Opposite
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Projective3D#Point}#Divide(System.Double)
  name: IGroupAction<Double, Point>.Divide(Double)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Projective3D_Point__Divide_System_Double_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Projective3D#Point}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Divide(Double)
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Projective3D.Point>.Divide(System.Double)
  fullName.vb: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Divide(System.Double)
  nameWithType: Point.IGroupAction<Double, Point>.Divide(Double)
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Divide(Double)
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Projective3D#Point}#Divide*
  name: IGroupAction<Double, Point>.Divide
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Projective3D_Point__Divide_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Projective3D#Point}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Divide
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Projective3D.Point>.Divide
  fullName.vb: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Divide
  nameWithType: Point.IGroupAction<Double, Point>.Divide
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Divide
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Projective3D#Point}#Multiply(System.Double)
  name: IGroupAction<Double, Point>.Multiply(Double)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Projective3D_Point__Multiply_System_Double_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Projective3D#Point}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Multiply(Double)
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Projective3D.Point>.Multiply(System.Double)
  fullName.vb: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Multiply(System.Double)
  nameWithType: Point.IGroupAction<Double, Point>.Multiply(Double)
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Multiply(Double)
- uid: BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Projective3D#Point}#Multiply*
  name: IGroupAction<Double, Point>.Multiply
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_Geometry_Projective3D_Point__Multiply_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#Geometry#Projective3D#Point}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Multiply
  fullName: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.Geometry.Projective3D.Point>.Multiply
  fullName.vb: BRIDGES.Geometry.Projective3D.Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Multiply
  nameWithType: Point.IGroupAction<Double, Point>.Multiply
  nameWithType.vb: Point.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.Geometry.Projective3D.Point>.Multiply
- uid: BRIDGES.Geometry.Projective3D.Point.Dimension
  name: Dimension
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Dimension
  commentId: P:BRIDGES.Geometry.Projective3D.Point.Dimension
  fullName: BRIDGES.Geometry.Projective3D.Point.Dimension
  nameWithType: Point.Dimension
- uid: BRIDGES.Geometry.Projective3D.Point.Dimension*
  name: Dimension
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Dimension_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.Dimension
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Dimension
  nameWithType: Point.Dimension
- uid: BRIDGES.Geometry.Projective3D.Point.Divide(BRIDGES.Geometry.Projective3D.Point,System.Double)
  name: Divide(Point, Double)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Divide_BRIDGES_Geometry_Projective3D_Point_System_Double_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.Divide(BRIDGES.Geometry.Projective3D.Point,System.Double)
  fullName: BRIDGES.Geometry.Projective3D.Point.Divide(BRIDGES.Geometry.Projective3D.Point, System.Double)
  nameWithType: Point.Divide(Point, Double)
- uid: BRIDGES.Geometry.Projective3D.Point.Divide*
  name: Divide
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Divide_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.Divide
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Divide
  nameWithType: Point.Divide
- uid: BRIDGES.Geometry.Projective3D.Point.Equals(BRIDGES.Geometry.Projective3D.Point)
  name: Equals(Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Equals_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.Equals(BRIDGES.Geometry.Projective3D.Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.Equals(BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.Equals(Point)
- uid: BRIDGES.Geometry.Projective3D.Point.Equals(System.Object)
  name: Equals(Object)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Equals_System_Object_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.Equals(System.Object)
  fullName: BRIDGES.Geometry.Projective3D.Point.Equals(System.Object)
  nameWithType: Point.Equals(Object)
- uid: BRIDGES.Geometry.Projective3D.Point.Equals*
  name: Equals
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Equals_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.Equals
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Equals
  nameWithType: Point.Equals
- uid: BRIDGES.Geometry.Projective3D.Point.GetCoordinates
  name: GetCoordinates()
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_GetCoordinates
  commentId: M:BRIDGES.Geometry.Projective3D.Point.GetCoordinates
  fullName: BRIDGES.Geometry.Projective3D.Point.GetCoordinates()
  nameWithType: Point.GetCoordinates()
- uid: BRIDGES.Geometry.Projective3D.Point.GetCoordinates*
  name: GetCoordinates
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_GetCoordinates_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.GetCoordinates
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.GetCoordinates
  nameWithType: Point.GetCoordinates
- uid: BRIDGES.Geometry.Projective3D.Point.GetHashCode
  name: GetHashCode()
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_GetHashCode
  commentId: M:BRIDGES.Geometry.Projective3D.Point.GetHashCode
  fullName: BRIDGES.Geometry.Projective3D.Point.GetHashCode()
  nameWithType: Point.GetHashCode()
- uid: BRIDGES.Geometry.Projective3D.Point.GetHashCode*
  name: GetHashCode
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_GetHashCode_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.GetHashCode
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.GetHashCode
  nameWithType: Point.GetHashCode
- uid: BRIDGES.Geometry.Projective3D.Point.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Item_System_Int32_
  commentId: P:BRIDGES.Geometry.Projective3D.Point.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.Geometry.Projective3D.Point.Item[System.Int32]
  fullName.vb: BRIDGES.Geometry.Projective3D.Point.Item(System.Int32)
  nameWithType: Point.Item[Int32]
  nameWithType.vb: Point.Item(Int32)
- uid: BRIDGES.Geometry.Projective3D.Point.Item*
  name: Item
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Item_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.Item
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Item
  nameWithType: Point.Item
- uid: BRIDGES.Geometry.Projective3D.Point.Multiply(System.Double,BRIDGES.Geometry.Projective3D.Point)
  name: Multiply(Double, Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Multiply_System_Double_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.Multiply(System.Double,BRIDGES.Geometry.Projective3D.Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.Multiply(System.Double, BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.Multiply(Double, Point)
- uid: BRIDGES.Geometry.Projective3D.Point.Multiply*
  name: Multiply
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Multiply_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.Multiply
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Multiply
  nameWithType: Point.Multiply
- uid: BRIDGES.Geometry.Projective3D.Point.op_Addition(BRIDGES.Geometry.Projective3D.Point,BRIDGES.Geometry.Projective3D.Point)
  name: Addition(Point, Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Addition_BRIDGES_Geometry_Projective3D_Point_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.op_Addition(BRIDGES.Geometry.Projective3D.Point,BRIDGES.Geometry.Projective3D.Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.Addition(BRIDGES.Geometry.Projective3D.Point, BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.Addition(Point, Point)
- uid: BRIDGES.Geometry.Projective3D.Point.op_Addition*
  name: Addition
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Addition_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.op_Addition
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Addition
  nameWithType: Point.Addition
- uid: BRIDGES.Geometry.Projective3D.Point.op_Division(BRIDGES.Geometry.Projective3D.Point,System.Double)
  name: Division(Point, Double)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Division_BRIDGES_Geometry_Projective3D_Point_System_Double_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.op_Division(BRIDGES.Geometry.Projective3D.Point,System.Double)
  fullName: BRIDGES.Geometry.Projective3D.Point.Division(BRIDGES.Geometry.Projective3D.Point, System.Double)
  nameWithType: Point.Division(Point, Double)
- uid: BRIDGES.Geometry.Projective3D.Point.op_Division*
  name: Division
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Division_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.op_Division
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Division
  nameWithType: Point.Division
- uid: BRIDGES.Geometry.Projective3D.Point.op_Explicit(BRIDGES.Geometry.Euclidean3D.Point)~BRIDGES.Geometry.Projective3D.Point
  name: Explicit(Point to Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Explicit_BRIDGES_Geometry_Euclidean3D_Point__BRIDGES_Geometry_Projective3D_Point
  commentId: M:BRIDGES.Geometry.Projective3D.Point.op_Explicit(BRIDGES.Geometry.Euclidean3D.Point)~BRIDGES.Geometry.Projective3D.Point
  name.vb: Narrowing(Point to Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.Explicit(BRIDGES.Geometry.Euclidean3D.Point to BRIDGES.Geometry.Projective3D.Point)
  fullName.vb: BRIDGES.Geometry.Projective3D.Point.Narrowing(BRIDGES.Geometry.Euclidean3D.Point to BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.Explicit(Point to Point)
  nameWithType.vb: Point.Narrowing(Point to Point)
- uid: BRIDGES.Geometry.Projective3D.Point.op_Explicit*
  name: Explicit
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Explicit_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: BRIDGES.Geometry.Projective3D.Point.Explicit
  fullName.vb: BRIDGES.Geometry.Projective3D.Point.Narrowing
  nameWithType: Point.Explicit
  nameWithType.vb: Point.Narrowing
- uid: BRIDGES.Geometry.Projective3D.Point.op_Multiply(BRIDGES.Geometry.Projective3D.Point,System.Double)
  name: Multiply(Point, Double)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Multiply_BRIDGES_Geometry_Projective3D_Point_System_Double_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.op_Multiply(BRIDGES.Geometry.Projective3D.Point,System.Double)
  fullName: BRIDGES.Geometry.Projective3D.Point.Multiply(BRIDGES.Geometry.Projective3D.Point, System.Double)
  nameWithType: Point.Multiply(Point, Double)
- uid: BRIDGES.Geometry.Projective3D.Point.op_Multiply(System.Double,BRIDGES.Geometry.Projective3D.Point)
  name: Multiply(Double, Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Multiply_System_Double_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.op_Multiply(System.Double,BRIDGES.Geometry.Projective3D.Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.Multiply(System.Double, BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.Multiply(Double, Point)
- uid: BRIDGES.Geometry.Projective3D.Point.op_Multiply*
  name: Multiply
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Multiply_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.op_Multiply
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Multiply
  nameWithType: Point.Multiply
- uid: BRIDGES.Geometry.Projective3D.Point.op_Subtraction(BRIDGES.Geometry.Projective3D.Point,BRIDGES.Geometry.Projective3D.Point)
  name: Subtraction(Point, Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Subtraction_BRIDGES_Geometry_Projective3D_Point_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.op_Subtraction(BRIDGES.Geometry.Projective3D.Point,BRIDGES.Geometry.Projective3D.Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.Subtraction(BRIDGES.Geometry.Projective3D.Point, BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.Subtraction(Point, Point)
- uid: BRIDGES.Geometry.Projective3D.Point.op_Subtraction*
  name: Subtraction
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_Subtraction_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.op_Subtraction
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Subtraction
  nameWithType: Point.Subtraction
- uid: BRIDGES.Geometry.Projective3D.Point.op_UnaryNegation(BRIDGES.Geometry.Projective3D.Point)
  name: UnaryNegation(Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_UnaryNegation_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.op_UnaryNegation(BRIDGES.Geometry.Projective3D.Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.UnaryNegation(BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.UnaryNegation(Point)
- uid: BRIDGES.Geometry.Projective3D.Point.op_UnaryNegation*
  name: UnaryNegation
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_op_UnaryNegation_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.op_UnaryNegation
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.UnaryNegation
  nameWithType: Point.UnaryNegation
- uid: BRIDGES.Geometry.Projective3D.Point.Subtract(BRIDGES.Geometry.Projective3D.Point,BRIDGES.Geometry.Projective3D.Point)
  name: Subtract(Point, Point)
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Subtract_BRIDGES_Geometry_Projective3D_Point_BRIDGES_Geometry_Projective3D_Point_
  commentId: M:BRIDGES.Geometry.Projective3D.Point.Subtract(BRIDGES.Geometry.Projective3D.Point,BRIDGES.Geometry.Projective3D.Point)
  fullName: BRIDGES.Geometry.Projective3D.Point.Subtract(BRIDGES.Geometry.Projective3D.Point, BRIDGES.Geometry.Projective3D.Point)
  nameWithType: Point.Subtract(Point, Point)
- uid: BRIDGES.Geometry.Projective3D.Point.Subtract*
  name: Subtract
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Subtract_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.Subtract
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Subtract
  nameWithType: Point.Subtract
- uid: BRIDGES.Geometry.Projective3D.Point.ToString
  name: ToString()
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_ToString
  commentId: M:BRIDGES.Geometry.Projective3D.Point.ToString
  fullName: BRIDGES.Geometry.Projective3D.Point.ToString()
  nameWithType: Point.ToString()
- uid: BRIDGES.Geometry.Projective3D.Point.ToString*
  name: ToString
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_ToString_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.ToString
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.ToString
  nameWithType: Point.ToString
- uid: BRIDGES.Geometry.Projective3D.Point.Zero
  name: Zero
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Zero
  commentId: P:BRIDGES.Geometry.Projective3D.Point.Zero
  fullName: BRIDGES.Geometry.Projective3D.Point.Zero
  nameWithType: Point.Zero
- uid: BRIDGES.Geometry.Projective3D.Point.Zero*
  name: Zero
  href: api/BRIDGES.Geometry.Projective3D.Point.html#BRIDGES_Geometry_Projective3D_Point_Zero_
  commentId: Overload:BRIDGES.Geometry.Projective3D.Point.Zero
  isSpec: "True"
  fullName: BRIDGES.Geometry.Projective3D.Point.Zero
  nameWithType: Point.Zero
- uid: BRIDGES.LinearAlgebra.Factorisation
  name: BRIDGES.LinearAlgebra.Factorisation
  href: api/BRIDGES.LinearAlgebra.Factorisation.html
  commentId: N:BRIDGES.LinearAlgebra.Factorisation
  fullName: BRIDGES.LinearAlgebra.Factorisation
  nameWithType: BRIDGES.LinearAlgebra.Factorisation
- uid: BRIDGES.LinearAlgebra.Factorisation.SparseQR
  name: SparseQR
  href: api/BRIDGES.LinearAlgebra.Factorisation.SparseQR.html
  commentId: T:BRIDGES.LinearAlgebra.Factorisation.SparseQR
  fullName: BRIDGES.LinearAlgebra.Factorisation.SparseQR
  nameWithType: SparseQR
- uid: BRIDGES.LinearAlgebra.Factorisation.SparseQR.#ctor(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: SparseQR(CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Factorisation.SparseQR.html#BRIDGES_LinearAlgebra_Factorisation_SparseQR__ctor_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Factorisation.SparseQR.#ctor(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Factorisation.SparseQR.SparseQR(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: SparseQR.SparseQR(CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Factorisation.SparseQR.#ctor*
  name: SparseQR
  href: api/BRIDGES.LinearAlgebra.Factorisation.SparseQR.html#BRIDGES_LinearAlgebra_Factorisation_SparseQR__ctor_
  commentId: Overload:BRIDGES.LinearAlgebra.Factorisation.SparseQR.#ctor
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Factorisation.SparseQR.SparseQR
  nameWithType: SparseQR.SparseQR
- uid: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Solve(DenseVector)
  href: api/BRIDGES.LinearAlgebra.Factorisation.SparseQR.html#BRIDGES_LinearAlgebra_Factorisation_SparseQR_Solve_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: SparseQR.Solve(DenseVector)
- uid: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Solve(SparseVector)
  href: api/BRIDGES.LinearAlgebra.Factorisation.SparseQR.html#BRIDGES_LinearAlgebra_Factorisation_SparseQR_Solve_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseQR.Solve(SparseVector)
- uid: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Solve(Vector)
  href: api/BRIDGES.LinearAlgebra.Factorisation.SparseQR.html#BRIDGES_LinearAlgebra_Factorisation_SparseQR_Solve_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: SparseQR.Solve(Vector)
- uid: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(System.Double[])
  name: Solve(Double[])
  href: api/BRIDGES.LinearAlgebra.Factorisation.SparseQR.html#BRIDGES_LinearAlgebra_Factorisation_SparseQR_Solve_System_Double___
  commentId: M:BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(System.Double[])
  name.vb: Solve(Double())
  fullName: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(System.Double[])
  fullName.vb: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve(System.Double())
  nameWithType: SparseQR.Solve(Double[])
  nameWithType.vb: SparseQR.Solve(Double())
- uid: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve*
  name: Solve
  href: api/BRIDGES.LinearAlgebra.Factorisation.SparseQR.html#BRIDGES_LinearAlgebra_Factorisation_SparseQR_Solve_
  commentId: Overload:BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Factorisation.SparseQR.Solve
  nameWithType: SparseQR.Solve
- uid: BRIDGES.LinearAlgebra.Matrices
  name: BRIDGES.LinearAlgebra.Matrices
  href: api/BRIDGES.LinearAlgebra.Matrices.html
  commentId: N:BRIDGES.LinearAlgebra.Matrices
  fullName: BRIDGES.LinearAlgebra.Matrices
  nameWithType: BRIDGES.LinearAlgebra.Matrices
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix
  name: DenseMatrix
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html
  commentId: T:BRIDGES.LinearAlgebra.Matrices.DenseMatrix
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix
  nameWithType: DenseMatrix
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.#ctor(System.Int32,System.Int32)
  name: DenseMatrix(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix__ctor_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.#ctor(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.DenseMatrix(System.Int32, System.Int32)
  nameWithType: DenseMatrix.DenseMatrix(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.#ctor(System.Int32,System.Int32,System.Double[])
  name: DenseMatrix(Int32, Int32, Double[])
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix__ctor_System_Int32_System_Int32_System_Double___
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.#ctor(System.Int32,System.Int32,System.Double[])
  name.vb: DenseMatrix(Int32, Int32, Double())
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.DenseMatrix(System.Int32, System.Int32, System.Double[])
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.DenseMatrix(System.Int32, System.Int32, System.Double())
  nameWithType: DenseMatrix.DenseMatrix(Int32, Int32, Double[])
  nameWithType.vb: DenseMatrix.DenseMatrix(Int32, Int32, Double())
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.#ctor*
  name: DenseMatrix
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix__ctor_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.#ctor
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.DenseMatrix
  nameWithType: DenseMatrix.DenseMatrix
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Add(DenseMatrix, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Add_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Add(DenseMatrix, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: Add(DenseMatrix, Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Add_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: DenseMatrix.Add(DenseMatrix, Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Add(DenseMatrix, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Add_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: DenseMatrix.Add(DenseMatrix, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Add(DenseMatrix, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Add_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: DenseMatrix.Add(DenseMatrix, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Add(DenseMatrix, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Add_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: DenseMatrix.Add(DenseMatrix, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Add(Matrix, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Add_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Add(Matrix, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Add(CompressedColumn, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Add(CompressedColumn, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Add(CompressedRow, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Add(CompressedRow, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Add(SparseMatrix, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Add_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Add(SparseMatrix, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add*
  name: Add
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Add
  nameWithType: DenseMatrix.Add
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: IAddable<DenseMatrix>.Add(DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Add_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Add(DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Add(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.IAddable<DenseMatrix>.Add(DenseMatrix)
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Add(DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Add*
  name: IAddable<DenseMatrix>.Add
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Add
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Add
  nameWithType: DenseMatrix.IAddable<DenseMatrix>.Add
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Add
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsAssociative
  name: IAddable<DenseMatrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
  nameWithType: DenseMatrix.IAddable<DenseMatrix>.IsAssociative
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsAssociative*
  name: IAddable<DenseMatrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
  nameWithType: DenseMatrix.IAddable<DenseMatrix>.IsAssociative
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsCommutative
  name: IAddable<DenseMatrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
  nameWithType: DenseMatrix.IAddable<DenseMatrix>.IsCommutative
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsCommutative*
  name: IAddable<DenseMatrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
  nameWithType: DenseMatrix.IAddable<DenseMatrix>.IsCommutative
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsAssociative
  name: IMultiplicable<DenseMatrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
  nameWithType: DenseMatrix.IMultiplicable<DenseMatrix>.IsAssociative
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsAssociative*
  name: IMultiplicable<DenseMatrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
  nameWithType: DenseMatrix.IMultiplicable<DenseMatrix>.IsAssociative
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsCommutative
  name: IMultiplicable<DenseMatrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
  nameWithType: DenseMatrix.IMultiplicable<DenseMatrix>.IsCommutative
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsCommutative*
  name: IMultiplicable<DenseMatrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
  nameWithType: DenseMatrix.IMultiplicable<DenseMatrix>.IsCommutative
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: IMultiplicable<DenseMatrix>.Multiply(DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Multiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply(DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.IMultiplicable<DenseMatrix>.Multiply(DenseMatrix)
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply(DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Multiply*
  name: IMultiplicable<DenseMatrix>.Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply
  nameWithType: DenseMatrix.IMultiplicable<DenseMatrix>.Multiply
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: ISubtractable<DenseMatrix>.Subtract(DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Subtract_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Subtract(DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.ISubtractable<DenseMatrix>.Subtract(DenseMatrix)
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Subtract(DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Subtract*
  name: ISubtractable<DenseMatrix>.Subtract
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Subtract
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Subtract
  nameWithType: DenseMatrix.ISubtractable<DenseMatrix>.Subtract
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Subtract
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Zero
  name: IZeroable<DenseMatrix>.Zero()
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Zero
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Zero()
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Zero()
  nameWithType: DenseMatrix.IZeroable<DenseMatrix>.Zero()
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Zero()
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Zero*
  name: IZeroable<DenseMatrix>.Zero
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Zero
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Zero
  nameWithType: DenseMatrix.IZeroable<DenseMatrix>.Zero
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Zero
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Opposite
  name: IGroup<DenseMatrix>.Opposite()
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Opposite
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Opposite()
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Opposite()
  nameWithType: DenseMatrix.IGroup<DenseMatrix>.Opposite()
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Opposite()
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Opposite*
  name: IGroup<DenseMatrix>.Opposite
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Opposite
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Opposite
  nameWithType: DenseMatrix.IGroup<DenseMatrix>.Opposite
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Opposite
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Divide(System.Double)
  name: IGroupAction<Double, DenseMatrix>.Divide(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Divide_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Divide(Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Divide(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Divide(System.Double)
  nameWithType: DenseMatrix.IGroupAction<Double, DenseMatrix>.Divide(Double)
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Divide(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Divide*
  name: IGroupAction<Double, DenseMatrix>.Divide
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Divide
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Divide
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Divide
  nameWithType: DenseMatrix.IGroupAction<Double, DenseMatrix>.Divide
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Divide
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Multiply(System.Double)
  name: IGroupAction<Double, DenseMatrix>.Multiply(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Multiply_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply(Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply(System.Double)
  nameWithType: DenseMatrix.IGroupAction<Double, DenseMatrix>.Multiply(Double)
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Multiply*
  name: IGroupAction<Double, DenseMatrix>.Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_DenseMatrix__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#DenseMatrix}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply
  nameWithType: DenseMatrix.IGroupAction<Double, DenseMatrix>.Multiply
  nameWithType.vb: DenseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix>.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.ColumnCount
  name: ColumnCount
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_ColumnCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.ColumnCount
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.ColumnCount
  nameWithType: DenseMatrix.ColumnCount
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.ColumnCount*
  name: ColumnCount
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_ColumnCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.ColumnCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.ColumnCount
  nameWithType: DenseMatrix.ColumnCount
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Divide(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,System.Double)
  name: Divide(DenseMatrix, Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Divide_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Divide(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Divide(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, System.Double)
  nameWithType: DenseMatrix.Divide(DenseMatrix, Double)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Divide*
  name: Divide
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Divide
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Divide
  nameWithType: DenseMatrix.Divide
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Identity(System.Int32)
  name: Identity(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Identity_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Identity(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Identity(System.Int32)
  nameWithType: DenseMatrix.Identity(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Identity*
  name: Identity
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Identity_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Identity
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Identity
  nameWithType: DenseMatrix.Identity
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Item(System.Int32,System.Int32)
  name: Item[Int32, Int32]
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Item_System_Int32_System_Int32_
  commentId: P:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Item(System.Int32,System.Int32)
  name.vb: Item(Int32, Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Item[System.Int32, System.Int32]
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Item(System.Int32, System.Int32)
  nameWithType: DenseMatrix.Item[Int32, Int32]
  nameWithType.vb: DenseMatrix.Item(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Item*
  name: Item
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Item_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Item
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Item
  nameWithType: DenseMatrix.Item
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Multiply(DenseMatrix, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Multiply(DenseMatrix, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: Multiply(DenseMatrix, Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: DenseMatrix.Multiply(DenseMatrix, Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Multiply(DenseMatrix, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: DenseMatrix.Multiply(DenseMatrix, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Multiply(DenseMatrix, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: DenseMatrix.Multiply(DenseMatrix, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Multiply(DenseMatrix, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: DenseMatrix.Multiply(DenseMatrix, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Multiply(DenseMatrix, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseMatrix.Multiply(DenseMatrix, DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Multiply(DenseMatrix, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: DenseMatrix.Multiply(DenseMatrix, SparseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Multiply(DenseMatrix, Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: DenseMatrix.Multiply(DenseMatrix, Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,System.Double)
  name: Multiply(DenseMatrix, Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, System.Double)
  nameWithType: DenseMatrix.Multiply(DenseMatrix, Double)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Multiply(Matrix, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Multiply(Matrix, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Multiply(CompressedColumn, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Multiply(CompressedColumn, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Multiply(CompressedRow, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Multiply(CompressedRow, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Multiply(SparseMatrix, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Multiply(SparseMatrix, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Multiply(Double, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_System_Double_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(System.Double,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply(System.Double, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Multiply(Double, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply*
  name: Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Multiply
  nameWithType: DenseMatrix.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Opposite
  name: Opposite()
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Opposite
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Opposite
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Opposite()
  nameWithType: DenseMatrix.Opposite()
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Opposite*
  name: Opposite
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Opposite
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Opposite
  nameWithType: DenseMatrix.Opposite
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.RowCount
  name: RowCount
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_RowCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.RowCount
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.RowCount
  nameWithType: DenseMatrix.RowCount
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.RowCount*
  name: RowCount
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_RowCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.RowCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.RowCount
  nameWithType: DenseMatrix.RowCount
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Subtract(DenseMatrix, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Subtract_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Subtract(DenseMatrix, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: Subtract(DenseMatrix, Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Subtract_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: DenseMatrix.Subtract(DenseMatrix, Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Subtract(DenseMatrix, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Subtract_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: DenseMatrix.Subtract(DenseMatrix, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Subtract(DenseMatrix, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Subtract_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: DenseMatrix.Subtract(DenseMatrix, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Subtract(DenseMatrix, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Subtract_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: DenseMatrix.Subtract(DenseMatrix, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Subtract(Matrix, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Subtract_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Subtract(Matrix, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Subtract(CompressedColumn, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Subtract(CompressedColumn, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Subtract(CompressedRow, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Subtract(CompressedRow, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: Subtract(SparseMatrix, DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Subtract_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.Subtract(SparseMatrix, DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract*
  name: Subtract
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Subtract
  nameWithType: DenseMatrix.Subtract
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Transpose
  name: Transpose()
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Transpose
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Transpose
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Transpose()
  nameWithType: DenseMatrix.Transpose()
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Transpose*
  name: Transpose
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Transpose_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Transpose
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Transpose
  nameWithType: DenseMatrix.Transpose
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: TransposeMultiply(DenseMatrix, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseMatrix.TransposeMultiply(DenseMatrix, DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: TransposeMultiply(DenseMatrix, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: DenseMatrix.TransposeMultiply(DenseMatrix, SparseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: TransposeMultiply(DenseMatrix, Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.DenseMatrix, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: DenseMatrix.TransposeMultiply(DenseMatrix, Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply*
  name: TransposeMultiply
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_TransposeMultiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiply
  nameWithType: DenseMatrix.TransposeMultiply
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  name: TransposeMultiplySelf(DenseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_TransposeMultiplySelf_BRIDGES_LinearAlgebra_Matrices_DenseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.DenseMatrix)
  nameWithType: DenseMatrix.TransposeMultiplySelf(DenseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiplySelf*
  name: TransposeMultiplySelf
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_TransposeMultiplySelf_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiplySelf
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.TransposeMultiplySelf
  nameWithType: DenseMatrix.TransposeMultiplySelf
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Zero(System.Int32,System.Int32)
  name: Zero(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Zero_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Zero(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Zero(System.Int32, System.Int32)
  nameWithType: DenseMatrix.Zero(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Zero*
  name: Zero
  href: api/BRIDGES.LinearAlgebra.Matrices.DenseMatrix.html#BRIDGES_LinearAlgebra_Matrices_DenseMatrix_Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Zero
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.DenseMatrix.Zero
  nameWithType: DenseMatrix.Zero
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix
  name: Matrix
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html
  commentId: T:BRIDGES.LinearAlgebra.Matrices.Matrix
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix
  nameWithType: Matrix
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.#ctor
  name: Matrix()
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix__ctor
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.#ctor
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Matrix()
  nameWithType: Matrix.Matrix()
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.#ctor*
  name: Matrix
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix__ctor_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.#ctor
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Matrix
  nameWithType: Matrix.Matrix
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Add(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: Add(Matrix, Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Add_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Add(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Add(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: Matrix.Add(Matrix, Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Add*
  name: Add
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.Add
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Add
  nameWithType: Matrix.Add
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Add(BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: IAddable<Matrix>.Add(Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Matrix__Add_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Add(BRIDGES.LinearAlgebra.Matrices.Matrix)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Add(Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Add(BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: Matrix.IAddable<Matrix>.Add(Matrix)
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Add(Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Add*
  name: IAddable<Matrix>.Add
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Matrix__Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Add
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Add
  nameWithType: Matrix.IAddable<Matrix>.Add
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Add
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsAssociative
  name: IAddable<Matrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Matrix__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
  nameWithType: Matrix.IAddable<Matrix>.IsAssociative
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsAssociative*
  name: IAddable<Matrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Matrix__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
  nameWithType: Matrix.IAddable<Matrix>.IsAssociative
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsCommutative
  name: IAddable<Matrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Matrix__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
  nameWithType: Matrix.IAddable<Matrix>.IsCommutative
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsCommutative*
  name: IAddable<Matrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Matrix__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
  nameWithType: Matrix.IAddable<Matrix>.IsCommutative
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsAssociative
  name: IMultiplicable<Matrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Matrix__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
  nameWithType: Matrix.IMultiplicable<Matrix>.IsAssociative
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsAssociative*
  name: IMultiplicable<Matrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Matrix__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
  nameWithType: Matrix.IMultiplicable<Matrix>.IsAssociative
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsCommutative
  name: IMultiplicable<Matrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Matrix__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
  nameWithType: Matrix.IMultiplicable<Matrix>.IsCommutative
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsCommutative*
  name: IMultiplicable<Matrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Matrix__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
  nameWithType: Matrix.IMultiplicable<Matrix>.IsCommutative
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: IMultiplicable<Matrix>.Multiply(Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Matrix__Multiply_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix)
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply(Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: Matrix.IMultiplicable<Matrix>.Multiply(Matrix)
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply(Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Multiply*
  name: IMultiplicable<Matrix>.Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Matrix__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply
  nameWithType: Matrix.IMultiplicable<Matrix>.Multiply
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Subtract(BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: ISubtractable<Matrix>.Subtract(Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Matrices_Matrix__Subtract_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Subtract(BRIDGES.LinearAlgebra.Matrices.Matrix)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Subtract(Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Subtract(BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: Matrix.ISubtractable<Matrix>.Subtract(Matrix)
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Subtract(Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Subtract*
  name: ISubtractable<Matrix>.Subtract
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Matrices_Matrix__Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Subtract
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Subtract
  nameWithType: Matrix.ISubtractable<Matrix>.Subtract
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Subtract
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Zero
  name: IZeroable<Matrix>.Zero()
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Matrices_Matrix__Zero
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Zero()
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Zero()
  nameWithType: Matrix.IZeroable<Matrix>.Zero()
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Zero()
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Zero*
  name: IZeroable<Matrix>.Zero
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Matrices_Matrix__Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Matrix}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Zero
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Zero
  nameWithType: Matrix.IZeroable<Matrix>.Zero
  nameWithType.vb: Matrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Matrix>.Zero
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Matrix}#Opposite
  name: IGroup<Matrix>.Opposite()
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Matrices_Matrix__Opposite
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Matrix}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Matrix>.Opposite()
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Matrix>.Opposite()
  nameWithType: Matrix.IGroup<Matrix>.Opposite()
  nameWithType.vb: Matrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Matrix>.Opposite()
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Matrix}#Opposite*
  name: IGroup<Matrix>.Opposite
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Matrices_Matrix__Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Matrix}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Matrix>.Opposite
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Matrix>.Opposite
  nameWithType: Matrix.IGroup<Matrix>.Opposite
  nameWithType.vb: Matrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Matrix>.Opposite
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Matrix}#Divide(System.Double)
  name: IGroupAction<Double, Matrix>.Divide(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Matrix__Divide_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Matrix}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Divide(Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Matrix>.Divide(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Divide(System.Double)
  nameWithType: Matrix.IGroupAction<Double, Matrix>.Divide(Double)
  nameWithType.vb: Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Divide(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Matrix}#Divide*
  name: IGroupAction<Double, Matrix>.Divide
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Matrix__Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Matrix}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Divide
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Matrix>.Divide
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Divide
  nameWithType: Matrix.IGroupAction<Double, Matrix>.Divide
  nameWithType.vb: Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Divide
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Matrix}#Multiply(System.Double)
  name: IGroupAction<Double, Matrix>.Multiply(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Matrix__Multiply_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Matrix}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply(Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply(System.Double)
  nameWithType: Matrix.IGroupAction<Double, Matrix>.Multiply(Double)
  nameWithType.vb: Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Matrix}#Multiply*
  name: IGroupAction<Double, Matrix>.Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Matrix__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Matrix}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply
  nameWithType: Matrix.IGroupAction<Double, Matrix>.Multiply
  nameWithType.vb: Matrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix>.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.ColumnCount
  name: ColumnCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_ColumnCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Matrix.ColumnCount
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.ColumnCount
  nameWithType: Matrix.ColumnCount
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.ColumnCount*
  name: ColumnCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_ColumnCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.ColumnCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.ColumnCount
  nameWithType: Matrix.ColumnCount
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Divide(BRIDGES.LinearAlgebra.Matrices.Matrix,System.Double)
  name: Divide(Matrix, Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Divide_BRIDGES_LinearAlgebra_Matrices_Matrix_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Divide(BRIDGES.LinearAlgebra.Matrices.Matrix,System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Divide(BRIDGES.LinearAlgebra.Matrices.Matrix, System.Double)
  nameWithType: Matrix.Divide(Matrix, Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Divide*
  name: Divide
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.Divide
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Divide
  nameWithType: Matrix.Divide
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Identity(System.Int32)
  name: Identity(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Identity_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Identity(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Identity(System.Int32)
  nameWithType: Matrix.Identity(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Identity*
  name: Identity
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Identity_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.Identity
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Identity
  nameWithType: Matrix.Identity
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Item(System.Int32,System.Int32)
  name: Item[Int32, Int32]
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Item_System_Int32_System_Int32_
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Matrix.Item(System.Int32,System.Int32)
  name.vb: Item(Int32, Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Item[System.Int32, System.Int32]
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Matrix.Item(System.Int32, System.Int32)
  nameWithType: Matrix.Item[Int32, Int32]
  nameWithType.vb: Matrix.Item(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Item*
  name: Item
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Item_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.Item
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Item
  nameWithType: Matrix.Item
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: Multiply(Matrix, Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Multiply_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: Matrix.Multiply(Matrix, Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Multiply(Matrix, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Multiply_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: Matrix.Multiply(Matrix, DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Multiply(Matrix, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Multiply_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: Matrix.Multiply(Matrix, SparseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Multiply(Matrix, Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Multiply_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: Matrix.Multiply(Matrix, Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,System.Double)
  name: Multiply(Matrix, Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Multiply_BRIDGES_LinearAlgebra_Matrices_Matrix_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix,System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(BRIDGES.LinearAlgebra.Matrices.Matrix, System.Double)
  nameWithType: Matrix.Multiply(Matrix, Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: Multiply(Double, Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Multiply_System_Double_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(System.Double,BRIDGES.LinearAlgebra.Matrices.Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply(System.Double, BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: Matrix.Multiply(Double, Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply*
  name: Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Multiply
  nameWithType: Matrix.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Opposite
  name: Opposite()
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Opposite
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Opposite
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Opposite()
  nameWithType: Matrix.Opposite()
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Opposite*
  name: Opposite
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.Opposite
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Opposite
  nameWithType: Matrix.Opposite
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.RowCount
  name: RowCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_RowCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Matrix.RowCount
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.RowCount
  nameWithType: Matrix.RowCount
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.RowCount*
  name: RowCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_RowCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.RowCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.RowCount
  nameWithType: Matrix.RowCount
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: Subtract(Matrix, Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Subtract_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Matrices.Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Subtract(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: Matrix.Subtract(Matrix, Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Subtract*
  name: Subtract
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.Subtract
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Subtract
  nameWithType: Matrix.Subtract
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Transpose
  name: Transpose()
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Transpose
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Transpose
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Transpose()
  nameWithType: Matrix.Transpose()
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Transpose*
  name: Transpose
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Transpose_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.Transpose
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Transpose
  nameWithType: Matrix.Transpose
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: TransposeMultiply(Matrix, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: Matrix.TransposeMultiply(Matrix, DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: TransposeMultiply(Matrix, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: Matrix.TransposeMultiply(Matrix, SparseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: TransposeMultiply(Matrix, Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_Matrix_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Matrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Matrix, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: Matrix.TransposeMultiply(Matrix, Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply*
  name: TransposeMultiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_TransposeMultiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiply
  nameWithType: Matrix.TransposeMultiply
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.Matrix)
  name: TransposeMultiplySelf(Matrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_TransposeMultiplySelf_BRIDGES_LinearAlgebra_Matrices_Matrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.Matrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.Matrix)
  nameWithType: Matrix.TransposeMultiplySelf(Matrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiplySelf*
  name: TransposeMultiplySelf
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_TransposeMultiplySelf_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiplySelf
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.TransposeMultiplySelf
  nameWithType: Matrix.TransposeMultiplySelf
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Zero(System.Int32,System.Int32)
  name: Zero(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Zero_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Matrix.Zero(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Zero(System.Int32, System.Int32)
  nameWithType: Matrix.Zero(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Matrix.Zero*
  name: Zero
  href: api/BRIDGES.LinearAlgebra.Matrices.Matrix.html#BRIDGES_LinearAlgebra_Matrices_Matrix_Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Matrix.Zero
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Matrix.Zero
  nameWithType: Matrix.Zero
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse
  name: BRIDGES.LinearAlgebra.Matrices.Sparse
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.html
  commentId: N:BRIDGES.LinearAlgebra.Matrices.Sparse
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse
  nameWithType: BRIDGES.LinearAlgebra.Matrices.Sparse
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn
  name: CompressedColumn
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html
  commentId: T:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn
  nameWithType: CompressedColumn
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.#ctor(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: CompressedColumn(CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__ctor_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.#ctor(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.CompressedColumn(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.CompressedColumn(CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.#ctor(System.Int32,System.Int32,BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys)
  name: CompressedColumn(Int32, Int32, DictionaryOfKeys)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__ctor_System_Int32_System_Int32_BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.#ctor(System.Int32,System.Int32,BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.CompressedColumn(System.Int32, System.Int32, BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys)
  nameWithType: CompressedColumn.CompressedColumn(Int32, Int32, DictionaryOfKeys)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.#ctor*
  name: CompressedColumn
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__ctor_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.#ctor
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.CompressedColumn
  nameWithType: CompressedColumn.CompressedColumn
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Add(CompressedColumn, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.Add(CompressedColumn, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Add(CompressedColumn, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedColumn.Add(CompressedColumn, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Add(CompressedColumn, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: CompressedColumn.Add(CompressedColumn, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Add(CompressedRow, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.Add(CompressedRow, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Add(SparseMatrix, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Add_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.Add(SparseMatrix, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add*
  name: Add
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Add
  nameWithType: CompressedColumn.Add
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: IAddable<CompressedColumn>.Add(CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Add(CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.IAddable<CompressedColumn>.Add(CompressedColumn)
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Add(CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Add*
  name: IAddable<CompressedColumn>.Add
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Add
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Add
  nameWithType: CompressedColumn.IAddable<CompressedColumn>.Add
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Add
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsAssociative
  name: IAddable<CompressedColumn>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
  nameWithType: CompressedColumn.IAddable<CompressedColumn>.IsAssociative
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsAssociative*
  name: IAddable<CompressedColumn>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
  nameWithType: CompressedColumn.IAddable<CompressedColumn>.IsAssociative
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsCommutative
  name: IAddable<CompressedColumn>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
  nameWithType: CompressedColumn.IAddable<CompressedColumn>.IsCommutative
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsCommutative*
  name: IAddable<CompressedColumn>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
  nameWithType: CompressedColumn.IAddable<CompressedColumn>.IsCommutative
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsAssociative
  name: IMultiplicable<CompressedColumn>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
  nameWithType: CompressedColumn.IMultiplicable<CompressedColumn>.IsAssociative
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsAssociative*
  name: IMultiplicable<CompressedColumn>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
  nameWithType: CompressedColumn.IMultiplicable<CompressedColumn>.IsAssociative
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsCommutative
  name: IMultiplicable<CompressedColumn>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
  nameWithType: CompressedColumn.IMultiplicable<CompressedColumn>.IsCommutative
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsCommutative*
  name: IMultiplicable<CompressedColumn>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
  nameWithType: CompressedColumn.IMultiplicable<CompressedColumn>.IsCommutative
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: IMultiplicable<CompressedColumn>.Multiply(CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply(CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.IMultiplicable<CompressedColumn>.Multiply(CompressedColumn)
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply(CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Multiply*
  name: IMultiplicable<CompressedColumn>.Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply
  nameWithType: CompressedColumn.IMultiplicable<CompressedColumn>.Multiply
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: ISubtractable<CompressedColumn>.Subtract(CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Subtract(CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.ISubtractable<CompressedColumn>.Subtract(CompressedColumn)
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Subtract(CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Subtract*
  name: ISubtractable<CompressedColumn>.Subtract
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Subtract
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Subtract
  nameWithType: CompressedColumn.ISubtractable<CompressedColumn>.Subtract
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Subtract
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Zero
  name: IZeroable<CompressedColumn>.Zero()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Zero
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Zero()
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Zero()
  nameWithType: CompressedColumn.IZeroable<CompressedColumn>.Zero()
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Zero()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Zero*
  name: IZeroable<CompressedColumn>.Zero
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Zero
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Zero
  nameWithType: CompressedColumn.IZeroable<CompressedColumn>.Zero
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Zero
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Opposite
  name: IGroup<CompressedColumn>.Opposite()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Opposite
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Opposite()
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Opposite()
  nameWithType: CompressedColumn.IGroup<CompressedColumn>.Opposite()
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Opposite()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Opposite*
  name: IGroup<CompressedColumn>.Opposite
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Opposite
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Opposite
  nameWithType: CompressedColumn.IGroup<CompressedColumn>.Opposite
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Opposite
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Divide(System.Double)
  name: IGroupAction<Double, CompressedColumn>.Divide(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Divide_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Divide(Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Divide(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Divide(System.Double)
  nameWithType: CompressedColumn.IGroupAction<Double, CompressedColumn>.Divide(Double)
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Divide(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Divide*
  name: IGroupAction<Double, CompressedColumn>.Divide
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Divide
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Divide
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Divide
  nameWithType: CompressedColumn.IGroupAction<Double, CompressedColumn>.Divide
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Divide
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Multiply(System.Double)
  name: IGroupAction<Double, CompressedColumn>.Multiply(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Multiply_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply(Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply(System.Double)
  nameWithType: CompressedColumn.IGroupAction<Double, CompressedColumn>.Multiply(Double)
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Multiply*
  name: IGroupAction<Double, CompressedColumn>.Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedColumn}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply
  nameWithType: CompressedColumn.IGroupAction<Double, CompressedColumn>.Multiply
  nameWithType.vb: CompressedColumn.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn>.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnCount
  name: ColumnCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_ColumnCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnCount
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnCount
  nameWithType: CompressedColumn.ColumnCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnCount*
  name: ColumnCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_ColumnCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnCount
  nameWithType: CompressedColumn.ColumnCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnPointers
  name: ColumnPointers()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_ColumnPointers
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnPointers
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnPointers()
  nameWithType: CompressedColumn.ColumnPointers()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnPointers*
  name: ColumnPointers
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_ColumnPointers_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnPointers
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ColumnPointers
  nameWithType: CompressedColumn.ColumnPointers
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Divide(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,System.Double)
  name: Divide(CompressedColumn, Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Divide_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Divide(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Divide(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, System.Double)
  nameWithType: CompressedColumn.Divide(CompressedColumn, Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Divide*
  name: Divide
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Divide
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Divide
  nameWithType: CompressedColumn.Divide
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetColumnPointers(System.Int32)
  name: GetColumnPointers(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_GetColumnPointers_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetColumnPointers(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetColumnPointers(System.Int32)
  nameWithType: CompressedColumn.GetColumnPointers(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetColumnPointers*
  name: GetColumnPointers
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_GetColumnPointers_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetColumnPointers
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetColumnPointers
  nameWithType: CompressedColumn.GetColumnPointers
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetNonZeros
  name: GetNonZeros()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_GetNonZeros
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetNonZeros
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetNonZeros()
  nameWithType: CompressedColumn.GetNonZeros()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetNonZeros*
  name: GetNonZeros
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_GetNonZeros_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetNonZeros
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetNonZeros
  nameWithType: CompressedColumn.GetNonZeros
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetRowIndex(System.Int32)
  name: GetRowIndex(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_GetRowIndex_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetRowIndex(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetRowIndex(System.Int32)
  nameWithType: CompressedColumn.GetRowIndex(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetRowIndex*
  name: GetRowIndex
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_GetRowIndex_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetRowIndex
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetRowIndex
  nameWithType: CompressedColumn.GetRowIndex
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetValue(System.Int32)
  name: GetValue(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_GetValue_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetValue(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetValue(System.Int32)
  nameWithType: CompressedColumn.GetValue(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetValue*
  name: GetValue
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_GetValue_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetValue
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.GetValue
  nameWithType: CompressedColumn.GetValue
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Identity(System.Int32)
  name: Identity(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Identity_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Identity(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Identity(System.Int32)
  nameWithType: CompressedColumn.Identity(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Identity*
  name: Identity
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Identity_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Identity
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Identity
  nameWithType: CompressedColumn.Identity
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Item(System.Int32,System.Int32)
  name: Item[Int32, Int32]
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Item_System_Int32_System_Int32_
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Item(System.Int32,System.Int32)
  name.vb: Item(Int32, Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Item[System.Int32, System.Int32]
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Item(System.Int32, System.Int32)
  nameWithType: CompressedColumn.Item[Int32, Int32]
  nameWithType.vb: CompressedColumn.Item(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Item*
  name: Item
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Item_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Item
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Item
  nameWithType: CompressedColumn.Item
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Kernel
  name: Kernel()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Kernel
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Kernel
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Kernel()
  nameWithType: CompressedColumn.Kernel()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Kernel*
  name: Kernel
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Kernel_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Kernel
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Kernel
  nameWithType: CompressedColumn.Kernel
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Multiply(CompressedColumn, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.Multiply(CompressedColumn, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Multiply(CompressedColumn, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedColumn.Multiply(CompressedColumn, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Multiply(CompressedColumn, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: CompressedColumn.Multiply(CompressedColumn, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Multiply(CompressedColumn, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: CompressedColumn.Multiply(CompressedColumn, DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Multiply(CompressedColumn, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: CompressedColumn.Multiply(CompressedColumn, SparseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Multiply(CompressedColumn, Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: CompressedColumn.Multiply(CompressedColumn, Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,System.Double)
  name: Multiply(CompressedColumn, Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, System.Double)
  nameWithType: CompressedColumn.Multiply(CompressedColumn, Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Multiply(CompressedRow, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.Multiply(CompressedRow, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Multiply(SparseMatrix, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.Multiply(SparseMatrix, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Multiply(Double, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_System_Double_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply(System.Double, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.Multiply(Double, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply*
  name: Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Multiply
  nameWithType: CompressedColumn.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.NonZerosCount
  name: NonZerosCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_NonZerosCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.NonZerosCount
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.NonZerosCount
  nameWithType: CompressedColumn.NonZerosCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.NonZerosCount*
  name: NonZerosCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_NonZerosCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.NonZerosCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.NonZerosCount
  nameWithType: CompressedColumn.NonZerosCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Opposite
  name: Opposite()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Opposite
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Opposite
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Opposite()
  nameWithType: CompressedColumn.Opposite()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Opposite*
  name: Opposite
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Opposite
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Opposite
  nameWithType: CompressedColumn.Opposite
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowCount
  name: RowCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_RowCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowCount
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowCount
  nameWithType: CompressedColumn.RowCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowCount*
  name: RowCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_RowCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowCount
  nameWithType: CompressedColumn.RowCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowIndices
  name: RowIndices()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_RowIndices
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowIndices
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowIndices()
  nameWithType: CompressedColumn.RowIndices()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowIndices*
  name: RowIndices
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_RowIndices_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowIndices
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.RowIndices
  nameWithType: CompressedColumn.RowIndices
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.SolveCholesky(BRIDGES.LinearAlgebra.Vectors.Vector)
  name: SolveCholesky(Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_SolveCholesky_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.SolveCholesky(BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.SolveCholesky(BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: CompressedColumn.SolveCholesky(Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.SolveCholesky*
  name: SolveCholesky
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_SolveCholesky_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.SolveCholesky
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.SolveCholesky
  nameWithType: CompressedColumn.SolveCholesky
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Subtract(CompressedColumn, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.Subtract(CompressedColumn, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Subtract(CompressedColumn, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedColumn.Subtract(CompressedColumn, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Subtract(CompressedColumn, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: CompressedColumn.Subtract(CompressedColumn, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Subtract(CompressedRow, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.Subtract(CompressedRow, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Subtract(SparseMatrix, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Subtract_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.Subtract(SparseMatrix, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract*
  name: Subtract
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Subtract
  nameWithType: CompressedColumn.Subtract
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ToCompressedRow
  name: ToCompressedRow()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_ToCompressedRow
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ToCompressedRow
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ToCompressedRow()
  nameWithType: CompressedColumn.ToCompressedRow()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ToCompressedRow*
  name: ToCompressedRow
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_ToCompressedRow_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ToCompressedRow
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.ToCompressedRow
  nameWithType: CompressedColumn.ToCompressedRow
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Transpose
  name: Transpose()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Transpose
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Transpose
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Transpose()
  nameWithType: CompressedColumn.Transpose()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Transpose*
  name: Transpose
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Transpose_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Transpose
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Transpose
  nameWithType: CompressedColumn.Transpose
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: TransposeMultiply(CompressedColumn, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: CompressedColumn.TransposeMultiply(CompressedColumn, DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: TransposeMultiply(CompressedColumn, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: CompressedColumn.TransposeMultiply(CompressedColumn, SparseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: TransposeMultiply(CompressedColumn, Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: CompressedColumn.TransposeMultiply(CompressedColumn, Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply*
  name: TransposeMultiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_TransposeMultiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiply
  nameWithType: CompressedColumn.TransposeMultiply
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: TransposeMultiplySelf(CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_TransposeMultiplySelf_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedColumn.TransposeMultiplySelf(CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiplySelf*
  name: TransposeMultiplySelf
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_TransposeMultiplySelf_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiplySelf
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.TransposeMultiplySelf
  nameWithType: CompressedColumn.TransposeMultiplySelf
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Values
  name: Values()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Values
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Values
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Values()
  nameWithType: CompressedColumn.Values()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Values*
  name: Values
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Values_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Values
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Values
  nameWithType: CompressedColumn.Values
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Zero(System.Int32,System.Int32)
  name: Zero(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Zero_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Zero(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Zero(System.Int32, System.Int32)
  nameWithType: CompressedColumn.Zero(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Zero*
  name: Zero
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Zero
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn.Zero
  nameWithType: CompressedColumn.Zero
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow
  name: CompressedRow
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html
  commentId: T:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow
  nameWithType: CompressedRow
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.#ctor(System.Int32,System.Int32,BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys)
  name: CompressedRow(Int32, Int32, DictionaryOfKeys)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__ctor_System_Int32_System_Int32_BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.#ctor(System.Int32,System.Int32,BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.CompressedRow(System.Int32, System.Int32, BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys)
  nameWithType: CompressedRow.CompressedRow(Int32, Int32, DictionaryOfKeys)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.#ctor*
  name: CompressedRow
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__ctor_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.#ctor
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.CompressedRow
  nameWithType: CompressedRow.CompressedRow
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Add(CompressedColumn, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.Add(CompressedColumn, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Add(CompressedRow, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedRow.Add(CompressedRow, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Add(CompressedRow, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.Add(CompressedRow, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Add(CompressedRow, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: CompressedRow.Add(CompressedRow, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Add(SparseMatrix, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Add_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.Add(SparseMatrix, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add*
  name: Add
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Add
  nameWithType: CompressedRow.Add
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: IAddable<CompressedRow>.Add(CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Add_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Add(CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Add(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.IAddable<CompressedRow>.Add(CompressedRow)
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Add(CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Add*
  name: IAddable<CompressedRow>.Add
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Add
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Add
  nameWithType: CompressedRow.IAddable<CompressedRow>.Add
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Add
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsAssociative
  name: IAddable<CompressedRow>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
  nameWithType: CompressedRow.IAddable<CompressedRow>.IsAssociative
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsAssociative*
  name: IAddable<CompressedRow>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
  nameWithType: CompressedRow.IAddable<CompressedRow>.IsAssociative
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsCommutative
  name: IAddable<CompressedRow>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
  nameWithType: CompressedRow.IAddable<CompressedRow>.IsCommutative
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsCommutative*
  name: IAddable<CompressedRow>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
  nameWithType: CompressedRow.IAddable<CompressedRow>.IsCommutative
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsAssociative
  name: IMultiplicable<CompressedRow>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
  nameWithType: CompressedRow.IMultiplicable<CompressedRow>.IsAssociative
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsAssociative*
  name: IMultiplicable<CompressedRow>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
  nameWithType: CompressedRow.IMultiplicable<CompressedRow>.IsAssociative
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsCommutative
  name: IMultiplicable<CompressedRow>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
  nameWithType: CompressedRow.IMultiplicable<CompressedRow>.IsCommutative
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsCommutative*
  name: IMultiplicable<CompressedRow>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
  nameWithType: CompressedRow.IMultiplicable<CompressedRow>.IsCommutative
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: IMultiplicable<CompressedRow>.Multiply(CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply(CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.IMultiplicable<CompressedRow>.Multiply(CompressedRow)
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply(CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Multiply*
  name: IMultiplicable<CompressedRow>.Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply
  nameWithType: CompressedRow.IMultiplicable<CompressedRow>.Multiply
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: ISubtractable<CompressedRow>.Subtract(CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Subtract(CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.ISubtractable<CompressedRow>.Subtract(CompressedRow)
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Subtract(CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Subtract*
  name: ISubtractable<CompressedRow>.Subtract
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Subtract
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Subtract
  nameWithType: CompressedRow.ISubtractable<CompressedRow>.Subtract
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Subtract
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Zero
  name: IZeroable<CompressedRow>.Zero()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Zero
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Zero()
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Zero()
  nameWithType: CompressedRow.IZeroable<CompressedRow>.Zero()
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Zero()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Zero*
  name: IZeroable<CompressedRow>.Zero
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Zero
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Zero
  nameWithType: CompressedRow.IZeroable<CompressedRow>.Zero
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Zero
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Opposite
  name: IGroup<CompressedRow>.Opposite()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Opposite
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Opposite()
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Opposite()
  nameWithType: CompressedRow.IGroup<CompressedRow>.Opposite()
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Opposite()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Opposite*
  name: IGroup<CompressedRow>.Opposite
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Opposite
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Opposite
  nameWithType: CompressedRow.IGroup<CompressedRow>.Opposite
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Opposite
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Divide(System.Double)
  name: IGroupAction<Double, CompressedRow>.Divide(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Divide_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Divide(Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Divide(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Divide(System.Double)
  nameWithType: CompressedRow.IGroupAction<Double, CompressedRow>.Divide(Double)
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Divide(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Divide*
  name: IGroupAction<Double, CompressedRow>.Divide
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Divide
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Divide
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Divide
  nameWithType: CompressedRow.IGroupAction<Double, CompressedRow>.Divide
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Divide
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Multiply(System.Double)
  name: IGroupAction<Double, CompressedRow>.Multiply(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Multiply_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply(Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply(System.Double)
  nameWithType: CompressedRow.IGroupAction<Double, CompressedRow>.Multiply(Double)
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Multiply*
  name: IGroupAction<Double, CompressedRow>.Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#Sparse#CompressedRow}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply
  nameWithType: CompressedRow.IGroupAction<Double, CompressedRow>.Multiply
  nameWithType.vb: CompressedRow.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow>.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnCount
  name: ColumnCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_ColumnCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnCount
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnCount
  nameWithType: CompressedRow.ColumnCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnCount*
  name: ColumnCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_ColumnCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnCount
  nameWithType: CompressedRow.ColumnCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnIndices
  name: ColumnIndices()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_ColumnIndices
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnIndices
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnIndices()
  nameWithType: CompressedRow.ColumnIndices()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnIndices*
  name: ColumnIndices
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_ColumnIndices_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnIndices
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ColumnIndices
  nameWithType: CompressedRow.ColumnIndices
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Divide(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,System.Double)
  name: Divide(CompressedRow, Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Divide_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Divide(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Divide(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, System.Double)
  nameWithType: CompressedRow.Divide(CompressedRow, Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Divide*
  name: Divide
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Divide
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Divide
  nameWithType: CompressedRow.Divide
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetColumnIndex(System.Int32)
  name: GetColumnIndex(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_GetColumnIndex_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetColumnIndex(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetColumnIndex(System.Int32)
  nameWithType: CompressedRow.GetColumnIndex(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetColumnIndex*
  name: GetColumnIndex
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_GetColumnIndex_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetColumnIndex
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetColumnIndex
  nameWithType: CompressedRow.GetColumnIndex
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetNonZeros
  name: GetNonZeros()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_GetNonZeros
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetNonZeros
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetNonZeros()
  nameWithType: CompressedRow.GetNonZeros()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetNonZeros*
  name: GetNonZeros
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_GetNonZeros_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetNonZeros
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetNonZeros
  nameWithType: CompressedRow.GetNonZeros
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetRowPointer(System.Int32)
  name: GetRowPointer(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_GetRowPointer_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetRowPointer(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetRowPointer(System.Int32)
  nameWithType: CompressedRow.GetRowPointer(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetRowPointer*
  name: GetRowPointer
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_GetRowPointer_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetRowPointer
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetRowPointer
  nameWithType: CompressedRow.GetRowPointer
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetValue(System.Int32)
  name: GetValue(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_GetValue_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetValue(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetValue(System.Int32)
  nameWithType: CompressedRow.GetValue(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetValue*
  name: GetValue
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_GetValue_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetValue
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.GetValue
  nameWithType: CompressedRow.GetValue
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Identity(System.Int32)
  name: Identity(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Identity_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Identity(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Identity(System.Int32)
  nameWithType: CompressedRow.Identity(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Identity*
  name: Identity
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Identity_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Identity
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Identity
  nameWithType: CompressedRow.Identity
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Item(System.Int32,System.Int32)
  name: Item[Int32, Int32]
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Item_System_Int32_System_Int32_
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Item(System.Int32,System.Int32)
  name.vb: Item(Int32, Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Item[System.Int32, System.Int32]
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Item(System.Int32, System.Int32)
  nameWithType: CompressedRow.Item[Int32, Int32]
  nameWithType.vb: CompressedRow.Item(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Item*
  name: Item
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Item_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Item
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Item
  nameWithType: CompressedRow.Item
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Multiply(CompressedColumn, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.Multiply(CompressedColumn, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Multiply(CompressedRow, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedRow.Multiply(CompressedRow, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Multiply(CompressedRow, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.Multiply(CompressedRow, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Multiply(CompressedRow, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: CompressedRow.Multiply(CompressedRow, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Multiply(CompressedRow, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: CompressedRow.Multiply(CompressedRow, DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Multiply(CompressedRow, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: CompressedRow.Multiply(CompressedRow, SparseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Multiply(CompressedRow, Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: CompressedRow.Multiply(CompressedRow, Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,System.Double)
  name: Multiply(CompressedRow, Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, System.Double)
  nameWithType: CompressedRow.Multiply(CompressedRow, Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Multiply(SparseMatrix, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.Multiply(SparseMatrix, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Multiply(Double, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_System_Double_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(System.Double,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply(System.Double, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.Multiply(Double, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply*
  name: Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Multiply
  nameWithType: CompressedRow.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.NonZerosCount
  name: NonZerosCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_NonZerosCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.NonZerosCount
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.NonZerosCount
  nameWithType: CompressedRow.NonZerosCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.NonZerosCount*
  name: NonZerosCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_NonZerosCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.NonZerosCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.NonZerosCount
  nameWithType: CompressedRow.NonZerosCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Opposite
  name: Opposite()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Opposite
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Opposite
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Opposite()
  nameWithType: CompressedRow.Opposite()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Opposite*
  name: Opposite
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Opposite
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Opposite
  nameWithType: CompressedRow.Opposite
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowCount
  name: RowCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_RowCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowCount
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowCount
  nameWithType: CompressedRow.RowCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowCount*
  name: RowCount
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_RowCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowCount
  nameWithType: CompressedRow.RowCount
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowPointers
  name: RowPointers()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_RowPointers
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowPointers
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowPointers()
  nameWithType: CompressedRow.RowPointers()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowPointers*
  name: RowPointers
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_RowPointers_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowPointers
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.RowPointers
  nameWithType: CompressedRow.RowPointers
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.SolveCholesky(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: SolveCholesky(DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_SolveCholesky_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.SolveCholesky(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.SolveCholesky(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: CompressedRow.SolveCholesky(DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.SolveCholesky*
  name: SolveCholesky
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_SolveCholesky_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.SolveCholesky
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.SolveCholesky
  nameWithType: CompressedRow.SolveCholesky
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Subtract(CompressedColumn, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.Subtract(CompressedColumn, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  name: Subtract(CompressedRow, CompressedColumn)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedColumn_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedColumn)
  nameWithType: CompressedRow.Subtract(CompressedRow, CompressedColumn)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Subtract(CompressedRow, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.Subtract(CompressedRow, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Subtract(CompressedRow, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Subtract_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: CompressedRow.Subtract(CompressedRow, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: Subtract(SparseMatrix, CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Subtract_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.Subtract(SparseMatrix, CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract*
  name: Subtract
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Subtract
  nameWithType: CompressedRow.Subtract
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ToCompressedColumn
  name: ToCompressedColumn()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_ToCompressedColumn
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ToCompressedColumn
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ToCompressedColumn()
  nameWithType: CompressedRow.ToCompressedColumn()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ToCompressedColumn*
  name: ToCompressedColumn
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_ToCompressedColumn_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ToCompressedColumn
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.ToCompressedColumn
  nameWithType: CompressedRow.ToCompressedColumn
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Transpose
  name: Transpose()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Transpose
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Transpose
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Transpose()
  nameWithType: CompressedRow.Transpose()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Transpose*
  name: Transpose
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Transpose_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Transpose
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Transpose
  nameWithType: CompressedRow.Transpose
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: TransposeMultiply(CompressedRow, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: CompressedRow.TransposeMultiply(CompressedRow, DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: TransposeMultiply(CompressedRow, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: CompressedRow.TransposeMultiply(CompressedRow, SparseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: TransposeMultiply(CompressedRow, Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: CompressedRow.TransposeMultiply(CompressedRow, Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply*
  name: TransposeMultiply
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_TransposeMultiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiply
  nameWithType: CompressedRow.TransposeMultiply
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  name: TransposeMultiplySelf(CompressedRow)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_TransposeMultiplySelf_BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow)
  nameWithType: CompressedRow.TransposeMultiplySelf(CompressedRow)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiplySelf*
  name: TransposeMultiplySelf
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_TransposeMultiplySelf_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiplySelf
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.TransposeMultiplySelf
  nameWithType: CompressedRow.TransposeMultiplySelf
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Values
  name: Values()
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Values
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Values
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Values()
  nameWithType: CompressedRow.Values()
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Values*
  name: Values
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Values_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Values
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Values
  nameWithType: CompressedRow.Values
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Zero(System.Int32,System.Int32)
  name: Zero(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Zero_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Zero(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Zero(System.Int32, System.Int32)
  nameWithType: CompressedRow.Zero(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Zero*
  name: Zero
  href: api/BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.html#BRIDGES_LinearAlgebra_Matrices_Sparse_CompressedRow_Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Zero
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Sparse.CompressedRow.Zero
  nameWithType: CompressedRow.Zero
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix
  name: SparseMatrix
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html
  commentId: T:BRIDGES.LinearAlgebra.Matrices.SparseMatrix
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix
  nameWithType: SparseMatrix
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.#ctor
  name: SparseMatrix()
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix__ctor
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.#ctor
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.SparseMatrix()
  nameWithType: SparseMatrix.SparseMatrix()
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.#ctor*
  name: SparseMatrix
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix__ctor_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.#ctor
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.SparseMatrix
  nameWithType: SparseMatrix.SparseMatrix
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Add(SparseMatrix, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Add_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: SparseMatrix.Add(SparseMatrix, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Add*
  name: Add
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Add
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Add
  nameWithType: SparseMatrix.Add
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: IAddable<SparseMatrix>.Add(SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Add_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Add(SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Add(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: SparseMatrix.IAddable<SparseMatrix>.Add(SparseMatrix)
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Add(SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Add*
  name: IAddable<SparseMatrix>.Add
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Add
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Add
  nameWithType: SparseMatrix.IAddable<SparseMatrix>.Add
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Add
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsAssociative
  name: IAddable<SparseMatrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
  nameWithType: SparseMatrix.IAddable<SparseMatrix>.IsAssociative
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsAssociative*
  name: IAddable<SparseMatrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
  nameWithType: SparseMatrix.IAddable<SparseMatrix>.IsAssociative
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsCommutative
  name: IAddable<SparseMatrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
  nameWithType: SparseMatrix.IAddable<SparseMatrix>.IsCommutative
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsCommutative*
  name: IAddable<SparseMatrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
  nameWithType: SparseMatrix.IAddable<SparseMatrix>.IsCommutative
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsAssociative
  name: IMultiplicable<SparseMatrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
  nameWithType: SparseMatrix.IMultiplicable<SparseMatrix>.IsAssociative
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsAssociative*
  name: IMultiplicable<SparseMatrix>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
  nameWithType: SparseMatrix.IMultiplicable<SparseMatrix>.IsAssociative
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsCommutative
  name: IMultiplicable<SparseMatrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
  nameWithType: SparseMatrix.IMultiplicable<SparseMatrix>.IsCommutative
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsCommutative*
  name: IMultiplicable<SparseMatrix>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
  nameWithType: SparseMatrix.IMultiplicable<SparseMatrix>.IsCommutative
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: IMultiplicable<SparseMatrix>.Multiply(SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Multiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply(SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: SparseMatrix.IMultiplicable<SparseMatrix>.Multiply(SparseMatrix)
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply(SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Multiply*
  name: IMultiplicable<SparseMatrix>.Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IMultiplicable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IMultiplicable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply
  nameWithType: SparseMatrix.IMultiplicable<SparseMatrix>.Multiply
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IMultiplicable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: ISubtractable<SparseMatrix>.Subtract(SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Subtract_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Subtract(SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: SparseMatrix.ISubtractable<SparseMatrix>.Subtract(SparseMatrix)
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Subtract(SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Subtract*
  name: ISubtractable<SparseMatrix>.Subtract
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Subtract
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Subtract
  nameWithType: SparseMatrix.ISubtractable<SparseMatrix>.Subtract
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Subtract
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Zero
  name: IZeroable<SparseMatrix>.Zero()
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Zero
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Zero()
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Zero()
  nameWithType: SparseMatrix.IZeroable<SparseMatrix>.Zero()
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Zero()
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Zero*
  name: IZeroable<SparseMatrix>.Zero
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Zero
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Zero
  nameWithType: SparseMatrix.IZeroable<SparseMatrix>.Zero
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Zero
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Opposite
  name: IGroup<SparseMatrix>.Opposite()
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Opposite
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Opposite()
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Opposite()
  nameWithType: SparseMatrix.IGroup<SparseMatrix>.Opposite()
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Opposite()
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Opposite*
  name: IGroup<SparseMatrix>.Opposite
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Opposite
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Opposite
  nameWithType: SparseMatrix.IGroup<SparseMatrix>.Opposite
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Opposite
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Divide(System.Double)
  name: IGroupAction<Double, SparseMatrix>.Divide(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Divide_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Divide(Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Divide(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Divide(System.Double)
  nameWithType: SparseMatrix.IGroupAction<Double, SparseMatrix>.Divide(Double)
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Divide(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Divide*
  name: IGroupAction<Double, SparseMatrix>.Divide
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Divide
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Divide
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Divide
  nameWithType: SparseMatrix.IGroupAction<Double, SparseMatrix>.Divide
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Divide
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Multiply(System.Double)
  name: IGroupAction<Double, SparseMatrix>.Multiply(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Multiply_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply(Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply(System.Double)
  nameWithType: SparseMatrix.IGroupAction<Double, SparseMatrix>.Multiply(Double)
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Multiply*
  name: IGroupAction<Double, SparseMatrix>.Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Matrices_SparseMatrix__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Matrices#SparseMatrix}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply
  nameWithType: SparseMatrix.IGroupAction<Double, SparseMatrix>.Multiply
  nameWithType.vb: SparseMatrix.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix>.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Divide(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,System.Double)
  name: Divide(SparseMatrix, Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Divide_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Divide(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Divide(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, System.Double)
  nameWithType: SparseMatrix.Divide(SparseMatrix, Double)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Divide*
  name: Divide
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Divide
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Divide
  nameWithType: SparseMatrix.Divide
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.GetNonZeros
  name: GetNonZeros()
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_GetNonZeros
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.GetNonZeros
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.GetNonZeros()
  nameWithType: SparseMatrix.GetNonZeros()
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.GetNonZeros*
  name: GetNonZeros
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_GetNonZeros_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.GetNonZeros
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.GetNonZeros
  nameWithType: SparseMatrix.GetNonZeros
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Identity(System.Int32)
  name: Identity(Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Identity_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Identity(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Identity(System.Int32)
  nameWithType: SparseMatrix.Identity(Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Identity*
  name: Identity
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Identity_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Identity
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Identity
  nameWithType: SparseMatrix.Identity
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Multiply(SparseMatrix, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: SparseMatrix.Multiply(SparseMatrix, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Multiply(SparseMatrix, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: SparseMatrix.Multiply(SparseMatrix, DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Multiply(SparseMatrix, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseMatrix.Multiply(SparseMatrix, SparseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Multiply(SparseMatrix, Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: SparseMatrix.Multiply(SparseMatrix, Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,System.Double)
  name: Multiply(SparseMatrix, Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Multiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, System.Double)
  nameWithType: SparseMatrix.Multiply(SparseMatrix, Double)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Multiply(Double, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Multiply_System_Double_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(System.Double,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply(System.Double, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: SparseMatrix.Multiply(Double, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply*
  name: Multiply
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Multiply
  nameWithType: SparseMatrix.Multiply
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.NonZerosCount
  name: NonZerosCount
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_NonZerosCount
  commentId: P:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.NonZerosCount
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.NonZerosCount
  nameWithType: SparseMatrix.NonZerosCount
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.NonZerosCount*
  name: NonZerosCount
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_NonZerosCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.NonZerosCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.NonZerosCount
  nameWithType: SparseMatrix.NonZerosCount
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: Subtract(SparseMatrix, SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Subtract_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Subtract(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: SparseMatrix.Subtract(SparseMatrix, SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Subtract*
  name: Subtract
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Subtract
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Subtract
  nameWithType: SparseMatrix.Subtract
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: TransposeMultiply(SparseMatrix, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: SparseMatrix.TransposeMultiply(SparseMatrix, DenseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: TransposeMultiply(SparseMatrix, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseMatrix.TransposeMultiply(SparseMatrix, SparseVector)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: TransposeMultiply(SparseMatrix, Vector)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_TransposeMultiply_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply(BRIDGES.LinearAlgebra.Matrices.SparseMatrix, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: SparseMatrix.TransposeMultiply(SparseMatrix, Vector)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply*
  name: TransposeMultiply
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_TransposeMultiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiply
  nameWithType: SparseMatrix.TransposeMultiply
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  name: TransposeMultiplySelf(SparseMatrix)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_TransposeMultiplySelf_BRIDGES_LinearAlgebra_Matrices_SparseMatrix_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiplySelf(BRIDGES.LinearAlgebra.Matrices.SparseMatrix)
  nameWithType: SparseMatrix.TransposeMultiplySelf(SparseMatrix)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiplySelf*
  name: TransposeMultiplySelf
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_TransposeMultiplySelf_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiplySelf
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.TransposeMultiplySelf
  nameWithType: SparseMatrix.TransposeMultiplySelf
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Zero(System.Int32,System.Int32)
  name: Zero(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Zero_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Zero(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Zero(System.Int32, System.Int32)
  nameWithType: SparseMatrix.Zero(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Zero*
  name: Zero
  href: api/BRIDGES.LinearAlgebra.Matrices.SparseMatrix.html#BRIDGES_LinearAlgebra_Matrices_SparseMatrix_Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Zero
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.SparseMatrix.Zero
  nameWithType: SparseMatrix.Zero
- uid: BRIDGES.LinearAlgebra.Matrices.Storage
  name: BRIDGES.LinearAlgebra.Matrices.Storage
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.html
  commentId: N:BRIDGES.LinearAlgebra.Matrices.Storage
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage
  nameWithType: BRIDGES.LinearAlgebra.Matrices.Storage
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys
  name: DictionaryOfKeys
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html
  commentId: T:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys
  nameWithType: DictionaryOfKeys
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.#ctor
  name: DictionaryOfKeys()
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys__ctor
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.#ctor
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.DictionaryOfKeys()
  nameWithType: DictionaryOfKeys.DictionaryOfKeys()
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.#ctor(System.Double[],System.Int32[],System.Int32[])
  name: DictionaryOfKeys(Double[], Int32[], Int32[])
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys__ctor_System_Double___System_Int32___System_Int32___
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.#ctor(System.Double[],System.Int32[],System.Int32[])
  name.vb: DictionaryOfKeys(Double(), Int32(), Int32())
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.DictionaryOfKeys(System.Double[], System.Int32[], System.Int32[])
  fullName.vb: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.DictionaryOfKeys(System.Double(), System.Int32(), System.Int32())
  nameWithType: DictionaryOfKeys.DictionaryOfKeys(Double[], Int32[], Int32[])
  nameWithType.vb: DictionaryOfKeys.DictionaryOfKeys(Double(), Int32(), Int32())
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.#ctor*
  name: DictionaryOfKeys
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys__ctor_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.#ctor
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.DictionaryOfKeys
  nameWithType: DictionaryOfKeys.DictionaryOfKeys
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Add(System.Double,System.Int32,System.Int32)
  name: Add(Double, Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_Add_System_Double_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Add(System.Double,System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Add(System.Double, System.Int32, System.Int32)
  nameWithType: DictionaryOfKeys.Add(Double, Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Add*
  name: Add
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Add
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Add
  nameWithType: DictionaryOfKeys.Add
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.AddOrReplace(System.Double,System.Int32,System.Int32)
  name: AddOrReplace(Double, Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_AddOrReplace_System_Double_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.AddOrReplace(System.Double,System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.AddOrReplace(System.Double, System.Int32, System.Int32)
  nameWithType: DictionaryOfKeys.AddOrReplace(Double, Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.AddOrReplace*
  name: AddOrReplace
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_AddOrReplace_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.AddOrReplace
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.AddOrReplace
  nameWithType: DictionaryOfKeys.AddOrReplace
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Clean(System.Double)
  name: Clean(Double)
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_Clean_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Clean(System.Double)
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Clean(System.Double)
  nameWithType: DictionaryOfKeys.Clean(Double)
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Clean*
  name: Clean
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_Clean_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Clean
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Clean
  nameWithType: DictionaryOfKeys.Clean
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Count
  name: Count
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_Count
  commentId: P:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Count
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Count
  nameWithType: DictionaryOfKeys.Count
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Count*
  name: Count
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_Count_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Count
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Count
  nameWithType: DictionaryOfKeys.Count
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.GetNonZeros
  name: GetNonZeros()
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_GetNonZeros
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.GetNonZeros
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.GetNonZeros()
  nameWithType: DictionaryOfKeys.GetNonZeros()
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.GetNonZeros*
  name: GetNonZeros
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_GetNonZeros_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.GetNonZeros
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.GetNonZeros
  nameWithType: DictionaryOfKeys.GetNonZeros
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.IsEmpty(System.Int32,System.Int32)
  name: IsEmpty(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_IsEmpty_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.IsEmpty(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.IsEmpty(System.Int32, System.Int32)
  nameWithType: DictionaryOfKeys.IsEmpty(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.IsEmpty*
  name: IsEmpty
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_IsEmpty_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.IsEmpty
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.IsEmpty
  nameWithType: DictionaryOfKeys.IsEmpty
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.MakeSymmetric
  name: MakeSymmetric()
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_MakeSymmetric
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.MakeSymmetric
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.MakeSymmetric()
  nameWithType: DictionaryOfKeys.MakeSymmetric()
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.MakeSymmetric*
  name: MakeSymmetric
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_MakeSymmetric_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.MakeSymmetric
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.MakeSymmetric
  nameWithType: DictionaryOfKeys.MakeSymmetric
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Remove(System.Int32,System.Int32)
  name: Remove(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_Remove_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Remove(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Remove(System.Int32, System.Int32)
  nameWithType: DictionaryOfKeys.Remove(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Remove*
  name: Remove
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_Remove_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Remove
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Remove
  nameWithType: DictionaryOfKeys.Remove
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Replace(System.Double,System.Int32,System.Int32)
  name: Replace(Double, Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_Replace_System_Double_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Replace(System.Double,System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Replace(System.Double, System.Int32, System.Int32)
  nameWithType: DictionaryOfKeys.Replace(Double, Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Replace*
  name: Replace
  href: api/BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.html#BRIDGES_LinearAlgebra_Matrices_Storage_DictionaryOfKeys_Replace_
  commentId: Overload:BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Replace
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Matrices.Storage.DictionaryOfKeys.Replace
  nameWithType: DictionaryOfKeys.Replace
- uid: BRIDGES.LinearAlgebra.Vectors
  name: BRIDGES.LinearAlgebra.Vectors
  href: api/BRIDGES.LinearAlgebra.Vectors.html
  commentId: N:BRIDGES.LinearAlgebra.Vectors
  fullName: BRIDGES.LinearAlgebra.Vectors
  nameWithType: BRIDGES.LinearAlgebra.Vectors
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector
  name: DenseVector
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html
  commentId: T:BRIDGES.LinearAlgebra.Vectors.DenseVector
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector
  nameWithType: DenseVector
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.#ctor(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: DenseVector(DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector__ctor_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.#ctor(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.DenseVector(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.DenseVector(DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.#ctor(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: DenseVector(SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector__ctor_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.#ctor(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.DenseVector(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: DenseVector.DenseVector(SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.#ctor(IEnumerable{System.Double})
  name: DenseVector(IEnumerable<Double>)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector__ctor_IEnumerable_System_Double__
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.#ctor(IEnumerable{System.Double})
  name.vb: DenseVector(IEnumerable(Of Double))
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.DenseVector(IEnumerable<System.Double>)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.DenseVector.DenseVector(IEnumerable(Of System.Double))
  nameWithType: DenseVector.DenseVector(IEnumerable<Double>)
  nameWithType.vb: DenseVector.DenseVector(IEnumerable(Of Double))
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.#ctor(System.Int32)
  name: DenseVector(Int32)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector__ctor_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.#ctor(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.DenseVector(System.Int32)
  nameWithType: DenseVector.DenseVector(Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.#ctor*
  name: DenseVector
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector__ctor_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.#ctor
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.DenseVector
  nameWithType: DenseVector.DenseVector
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Add(DenseVector, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Add_BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.DenseVector, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.Add(DenseVector, DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Add(DenseVector, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Add_BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.DenseVector, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: DenseVector.Add(DenseVector, SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Add(DenseVector, Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Add_BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.DenseVector, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: DenseVector.Add(DenseVector, Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Add(SparseVector, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Add_BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.SparseVector, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.Add(SparseVector, DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.Vector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Add(Vector, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Add_BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.Vector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add(BRIDGES.LinearAlgebra.Vectors.Vector, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.Add(Vector, DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add*
  name: Add
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Add
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Add
  nameWithType: DenseVector.Add
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Add(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: IAddable<DenseVector>.Add(DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_DenseVector__Add_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Add(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Add(DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Add(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.IAddable<DenseVector>.Add(DenseVector)
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Add(DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Add*
  name: IAddable<DenseVector>.Add
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_DenseVector__Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Add
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Add
  nameWithType: DenseVector.IAddable<DenseVector>.Add
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Add
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#IsAssociative
  name: IAddable<DenseVector>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_DenseVector__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsAssociative
  nameWithType: DenseVector.IAddable<DenseVector>.IsAssociative
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#IsAssociative*
  name: IAddable<DenseVector>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_DenseVector__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsAssociative
  nameWithType: DenseVector.IAddable<DenseVector>.IsAssociative
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#IsCommutative
  name: IAddable<DenseVector>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_DenseVector__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsCommutative
  nameWithType: DenseVector.IAddable<DenseVector>.IsCommutative
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#IsCommutative*
  name: IAddable<DenseVector>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_DenseVector__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsCommutative
  nameWithType: DenseVector.IAddable<DenseVector>.IsCommutative
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: ISubtractable<DenseVector>.Subtract(DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Vectors_DenseVector__Subtract_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Subtract(DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.ISubtractable<DenseVector>.Subtract(DenseVector)
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Subtract(DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Subtract*
  name: ISubtractable<DenseVector>.Subtract
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Vectors_DenseVector__Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Subtract
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Subtract
  nameWithType: DenseVector.ISubtractable<DenseVector>.Subtract
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Subtract
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Zero
  name: IZeroable<DenseVector>.Zero()
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Vectors_DenseVector__Zero
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Zero()
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Zero()
  nameWithType: DenseVector.IZeroable<DenseVector>.Zero()
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Zero()
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Zero*
  name: IZeroable<DenseVector>.Zero
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Vectors_DenseVector__Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Zero
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Zero
  nameWithType: DenseVector.IZeroable<DenseVector>.Zero
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Zero
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#DenseVector}#DistanceTo(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: IMetric<DenseVector>.DistanceTo(DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Measure_IMetric_BRIDGES_LinearAlgebra_Vectors_DenseVector__DistanceTo_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#DenseVector}#DistanceTo(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name.vb: BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.DenseVector>.DistanceTo(DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.DenseVector>.DistanceTo(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.IMetric<DenseVector>.DistanceTo(DenseVector)
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.DenseVector>.DistanceTo(DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#DenseVector}#DistanceTo*
  name: IMetric<DenseVector>.DistanceTo
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Measure_IMetric_BRIDGES_LinearAlgebra_Vectors_DenseVector__DistanceTo_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#DenseVector}#DistanceTo
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.DenseVector>.DistanceTo
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.DenseVector>.DistanceTo
  nameWithType: DenseVector.IMetric<DenseVector>.DistanceTo
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.DenseVector>.DistanceTo
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Norm
  name: INorm<DenseVector>.Norm()
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Measure_INorm_BRIDGES_LinearAlgebra_Vectors_DenseVector__Norm
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Norm
  name.vb: BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Norm()
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Norm()
  nameWithType: DenseVector.INorm<DenseVector>.Norm()
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Norm()
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Norm*
  name: INorm<DenseVector>.Norm
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Measure_INorm_BRIDGES_LinearAlgebra_Vectors_DenseVector__Norm_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Norm
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Norm
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Norm
  nameWithType: DenseVector.INorm<DenseVector>.Norm
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Norm
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Opposite
  name: IGroup<DenseVector>.Opposite()
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Vectors_DenseVector__Opposite
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Opposite()
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Opposite()
  nameWithType: DenseVector.IGroup<DenseVector>.Opposite()
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Opposite()
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Opposite*
  name: IGroup<DenseVector>.Opposite
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Vectors_DenseVector__Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#DenseVector}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Opposite
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Opposite
  nameWithType: DenseVector.IGroup<DenseVector>.Opposite
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.DenseVector>.Opposite
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#DenseVector}#Divide(System.Double)
  name: IGroupAction<Double, DenseVector>.Divide(Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_DenseVector__Divide_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#DenseVector}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Divide(Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.DenseVector>.Divide(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Divide(System.Double)
  nameWithType: DenseVector.IGroupAction<Double, DenseVector>.Divide(Double)
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Divide(Double)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#DenseVector}#Divide*
  name: IGroupAction<Double, DenseVector>.Divide
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_DenseVector__Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#DenseVector}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Divide
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.DenseVector>.Divide
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Divide
  nameWithType: DenseVector.IGroupAction<Double, DenseVector>.Divide
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Divide
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#DenseVector}#Multiply(System.Double)
  name: IGroupAction<Double, DenseVector>.Multiply(Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_DenseVector__Multiply_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#DenseVector}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Multiply(Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.DenseVector>.Multiply(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Multiply(System.Double)
  nameWithType: DenseVector.IGroupAction<Double, DenseVector>.Multiply(Double)
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Multiply(Double)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#DenseVector}#Multiply*
  name: IGroupAction<Double, DenseVector>.Multiply
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_DenseVector__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#DenseVector}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Multiply
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.DenseVector>.Multiply
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Multiply
  nameWithType: DenseVector.IGroupAction<Double, DenseVector>.Multiply
  nameWithType.vb: DenseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector>.Multiply
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Divide(BRIDGES.LinearAlgebra.Vectors.DenseVector,System.Double)
  name: Divide(DenseVector, Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Divide_BRIDGES_LinearAlgebra_Vectors_DenseVector_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Divide(BRIDGES.LinearAlgebra.Vectors.DenseVector,System.Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Divide(BRIDGES.LinearAlgebra.Vectors.DenseVector, System.Double)
  nameWithType: DenseVector.Divide(DenseVector, Double)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Divide*
  name: Divide
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Divide
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Divide
  nameWithType: DenseVector.Divide
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Equals(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Equals(DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Equals_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Equals(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Equals(BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.Equals(DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Equals(BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Equals(Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Equals_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Equals(BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Equals(BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: DenseVector.Equals(Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Equals*
  name: Equals
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Equals_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Equals
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Equals
  nameWithType: DenseVector.Equals
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.GramSchmidt(IEnumerable{BRIDGES.LinearAlgebra.Vectors.DenseVector})
  name: GramSchmidt(IEnumerable<DenseVector>)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_GramSchmidt_IEnumerable_BRIDGES_LinearAlgebra_Vectors_DenseVector__
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.GramSchmidt(IEnumerable{BRIDGES.LinearAlgebra.Vectors.DenseVector})
  name.vb: GramSchmidt(IEnumerable(Of DenseVector))
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.GramSchmidt(IEnumerable<BRIDGES.LinearAlgebra.Vectors.DenseVector>)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.DenseVector.GramSchmidt(IEnumerable(Of BRIDGES.LinearAlgebra.Vectors.DenseVector))
  nameWithType: DenseVector.GramSchmidt(IEnumerable<DenseVector>)
  nameWithType.vb: DenseVector.GramSchmidt(IEnumerable(Of DenseVector))
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.GramSchmidt*
  name: GramSchmidt
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_GramSchmidt_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.GramSchmidt
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.GramSchmidt
  nameWithType: DenseVector.GramSchmidt
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Item_System_Int32_
  commentId: P:BRIDGES.LinearAlgebra.Vectors.DenseVector.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Item[System.Int32]
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.DenseVector.Item(System.Int32)
  nameWithType: DenseVector.Item[Int32]
  nameWithType.vb: DenseVector.Item(Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Item*
  name: Item
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Item_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Item
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Item
  nameWithType: DenseVector.Item
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Length
  name: Length()
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Length
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Length
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Length()
  nameWithType: DenseVector.Length()
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Length*
  name: Length
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Length_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Length
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Length
  nameWithType: DenseVector.Length
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Multiply(BRIDGES.LinearAlgebra.Vectors.DenseVector,System.Double)
  name: Multiply(DenseVector, Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Multiply_BRIDGES_LinearAlgebra_Vectors_DenseVector_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Multiply(BRIDGES.LinearAlgebra.Vectors.DenseVector,System.Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Multiply(BRIDGES.LinearAlgebra.Vectors.DenseVector, System.Double)
  nameWithType: DenseVector.Multiply(DenseVector, Double)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Multiply(System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Multiply(Double, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Multiply_System_Double_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Multiply(System.Double,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Multiply(System.Double, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.Multiply(Double, DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Multiply*
  name: Multiply
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Multiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Multiply
  nameWithType: DenseVector.Multiply
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Opposite
  name: Opposite()
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Opposite
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Opposite
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Opposite()
  nameWithType: DenseVector.Opposite()
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Opposite*
  name: Opposite
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Opposite
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Opposite
  nameWithType: DenseVector.Opposite
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Size
  name: Size
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Size
  commentId: P:BRIDGES.LinearAlgebra.Vectors.DenseVector.Size
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Size
  nameWithType: DenseVector.Size
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Size*
  name: Size
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Size_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Size
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Size
  nameWithType: DenseVector.Size
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.SquaredLength
  name: SquaredLength()
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_SquaredLength
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.SquaredLength
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.SquaredLength()
  nameWithType: DenseVector.SquaredLength()
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.SquaredLength*
  name: SquaredLength
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_SquaredLength_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.SquaredLength
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.SquaredLength
  nameWithType: DenseVector.SquaredLength
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.StandardVector(System.Int32,System.Int32)
  name: StandardVector(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_StandardVector_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.StandardVector(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.StandardVector(System.Int32, System.Int32)
  nameWithType: DenseVector.StandardVector(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.StandardVector*
  name: StandardVector
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_StandardVector_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.StandardVector
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.StandardVector
  nameWithType: DenseVector.StandardVector
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Subtract(DenseVector, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Subtract_BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.Subtract(DenseVector, DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Subtract(DenseVector, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Subtract_BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: DenseVector.Subtract(DenseVector, SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Subtract(DenseVector, Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Subtract_BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.DenseVector, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: DenseVector.Subtract(DenseVector, Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Subtract(SparseVector, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Subtract_BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.SparseVector, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.Subtract(SparseVector, DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.Vector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: Subtract(Vector, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Subtract_BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.Vector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.Vector, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.Subtract(Vector, DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract*
  name: Subtract
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Subtract
  nameWithType: DenseVector.Subtract
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.ToArray
  name: ToArray()
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_ToArray
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.ToArray
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.ToArray()
  nameWithType: DenseVector.ToArray()
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.ToArray*
  name: ToArray
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_ToArray_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.ToArray
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.ToArray
  nameWithType: DenseVector.ToArray
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: TransposeMultiply(DenseVector, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_TransposeMultiply_BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.DenseVector, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.TransposeMultiply(DenseVector, DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: TransposeMultiply(DenseVector, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_TransposeMultiply_BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.DenseVector, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: DenseVector.TransposeMultiply(DenseVector, SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: TransposeMultiply(SparseVector, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_TransposeMultiply_BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.SparseVector, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: DenseVector.TransposeMultiply(SparseVector, DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply*
  name: TransposeMultiply
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_TransposeMultiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.TransposeMultiply
  nameWithType: DenseVector.TransposeMultiply
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Unitise
  name: Unitise()
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Unitise
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Unitise
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Unitise()
  nameWithType: DenseVector.Unitise()
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Unitise*
  name: Unitise
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Unitise_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Unitise
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Unitise
  nameWithType: DenseVector.Unitise
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Zero(System.Int32)
  name: Zero(Int32)
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Zero_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.DenseVector.Zero(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Zero(System.Int32)
  nameWithType: DenseVector.Zero(Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.DenseVector.Zero*
  name: Zero
  href: api/BRIDGES.LinearAlgebra.Vectors.DenseVector.html#BRIDGES_LinearAlgebra_Vectors_DenseVector_Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.DenseVector.Zero
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.DenseVector.Zero
  nameWithType: DenseVector.Zero
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector
  name: SparseVector
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html
  commentId: T:BRIDGES.LinearAlgebra.Vectors.SparseVector
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector
  nameWithType: SparseVector
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.#ctor(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: SparseVector(SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector__ctor_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.#ctor(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.SparseVector(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseVector.SparseVector(SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.#ctor(System.Int32)
  name: SparseVector(Int32)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector__ctor_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.#ctor(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.SparseVector(System.Int32)
  nameWithType: SparseVector.SparseVector(Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.#ctor(System.Int32,IEnumerable{System.Int32},IEnumerable{System.Double})
  name: SparseVector(Int32, IEnumerable<Int32>, IEnumerable<Double>)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector__ctor_System_Int32_IEnumerable_System_Int32__IEnumerable_System_Double__
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.#ctor(System.Int32,IEnumerable{System.Int32},IEnumerable{System.Double})
  name.vb: SparseVector(Int32, IEnumerable(Of Int32), IEnumerable(Of Double))
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.SparseVector(System.Int32, IEnumerable<System.Int32>, IEnumerable<System.Double>)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.SparseVector.SparseVector(System.Int32, IEnumerable(Of System.Int32), IEnumerable(Of System.Double))
  nameWithType: SparseVector.SparseVector(Int32, IEnumerable<Int32>, IEnumerable<Double>)
  nameWithType.vb: SparseVector.SparseVector(Int32, IEnumerable(Of Int32), IEnumerable(Of Double))
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.#ctor*
  name: SparseVector
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector__ctor_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.#ctor
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.SparseVector
  nameWithType: SparseVector.SparseVector
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Add(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Add(SparseVector, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Add_BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Add(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Add(BRIDGES.LinearAlgebra.Vectors.SparseVector, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseVector.Add(SparseVector, SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Add*
  name: Add
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Add
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Add
  nameWithType: SparseVector.Add
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Add(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: IAddable<SparseVector>.Add(SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_SparseVector__Add_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Add(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Add(SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Add(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseVector.IAddable<SparseVector>.Add(SparseVector)
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Add(SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Add*
  name: IAddable<SparseVector>.Add
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_SparseVector__Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Add
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Add
  nameWithType: SparseVector.IAddable<SparseVector>.Add
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Add
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#IsAssociative
  name: IAddable<SparseVector>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_SparseVector__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsAssociative
  nameWithType: SparseVector.IAddable<SparseVector>.IsAssociative
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#IsAssociative*
  name: IAddable<SparseVector>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_SparseVector__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsAssociative
  nameWithType: SparseVector.IAddable<SparseVector>.IsAssociative
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#IsCommutative
  name: IAddable<SparseVector>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_SparseVector__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsCommutative
  nameWithType: SparseVector.IAddable<SparseVector>.IsCommutative
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#IsCommutative*
  name: IAddable<SparseVector>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_SparseVector__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsCommutative
  nameWithType: SparseVector.IAddable<SparseVector>.IsCommutative
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Subtract(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: ISubtractable<SparseVector>.Subtract(SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Vectors_SparseVector__Subtract_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Subtract(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Subtract(SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Subtract(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseVector.ISubtractable<SparseVector>.Subtract(SparseVector)
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Subtract(SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Subtract*
  name: ISubtractable<SparseVector>.Subtract
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Vectors_SparseVector__Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Subtract
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Subtract
  nameWithType: SparseVector.ISubtractable<SparseVector>.Subtract
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Subtract
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Zero
  name: IZeroable<SparseVector>.Zero()
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Vectors_SparseVector__Zero
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Zero()
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Zero()
  nameWithType: SparseVector.IZeroable<SparseVector>.Zero()
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Zero()
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Zero*
  name: IZeroable<SparseVector>.Zero
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Vectors_SparseVector__Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Zero
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Zero
  nameWithType: SparseVector.IZeroable<SparseVector>.Zero
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Zero
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#SparseVector}#DistanceTo(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: IMetric<SparseVector>.DistanceTo(SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Measure_IMetric_BRIDGES_LinearAlgebra_Vectors_SparseVector__DistanceTo_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#SparseVector}#DistanceTo(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name.vb: BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.SparseVector>.DistanceTo(SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.SparseVector>.DistanceTo(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseVector.IMetric<SparseVector>.DistanceTo(SparseVector)
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.SparseVector>.DistanceTo(SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#SparseVector}#DistanceTo*
  name: IMetric<SparseVector>.DistanceTo
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Measure_IMetric_BRIDGES_LinearAlgebra_Vectors_SparseVector__DistanceTo_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#SparseVector}#DistanceTo
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.SparseVector>.DistanceTo
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.SparseVector>.DistanceTo
  nameWithType: SparseVector.IMetric<SparseVector>.DistanceTo
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.SparseVector>.DistanceTo
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Norm
  name: INorm<SparseVector>.Norm()
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Measure_INorm_BRIDGES_LinearAlgebra_Vectors_SparseVector__Norm
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Norm
  name.vb: BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Norm()
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Norm()
  nameWithType: SparseVector.INorm<SparseVector>.Norm()
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Norm()
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Norm*
  name: INorm<SparseVector>.Norm
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Measure_INorm_BRIDGES_LinearAlgebra_Vectors_SparseVector__Norm_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Norm
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Norm
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Norm
  nameWithType: SparseVector.INorm<SparseVector>.Norm
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Norm
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Opposite
  name: IGroup<SparseVector>.Opposite()
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Vectors_SparseVector__Opposite
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Opposite()
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Opposite()
  nameWithType: SparseVector.IGroup<SparseVector>.Opposite()
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Opposite()
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Opposite*
  name: IGroup<SparseVector>.Opposite
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Vectors_SparseVector__Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#SparseVector}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Opposite
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Opposite
  nameWithType: SparseVector.IGroup<SparseVector>.Opposite
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.SparseVector>.Opposite
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#SparseVector}#Divide(System.Double)
  name: IGroupAction<Double, SparseVector>.Divide(Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_SparseVector__Divide_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#SparseVector}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Divide(Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.SparseVector>.Divide(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Divide(System.Double)
  nameWithType: SparseVector.IGroupAction<Double, SparseVector>.Divide(Double)
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Divide(Double)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#SparseVector}#Divide*
  name: IGroupAction<Double, SparseVector>.Divide
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_SparseVector__Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#SparseVector}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Divide
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.SparseVector>.Divide
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Divide
  nameWithType: SparseVector.IGroupAction<Double, SparseVector>.Divide
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Divide
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#SparseVector}#Multiply(System.Double)
  name: IGroupAction<Double, SparseVector>.Multiply(Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_SparseVector__Multiply_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#SparseVector}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Multiply(Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.SparseVector>.Multiply(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Multiply(System.Double)
  nameWithType: SparseVector.IGroupAction<Double, SparseVector>.Multiply(Double)
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Multiply(Double)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#SparseVector}#Multiply*
  name: IGroupAction<Double, SparseVector>.Multiply
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_SparseVector__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#SparseVector}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Multiply
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.SparseVector>.Multiply
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Multiply
  nameWithType: SparseVector.IGroupAction<Double, SparseVector>.Multiply
  nameWithType.vb: SparseVector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector>.Multiply
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Divide(BRIDGES.LinearAlgebra.Vectors.SparseVector,System.Double)
  name: Divide(SparseVector, Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Divide_BRIDGES_LinearAlgebra_Vectors_SparseVector_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Divide(BRIDGES.LinearAlgebra.Vectors.SparseVector,System.Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Divide(BRIDGES.LinearAlgebra.Vectors.SparseVector, System.Double)
  nameWithType: SparseVector.Divide(SparseVector, Double)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Divide*
  name: Divide
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Divide
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Divide
  nameWithType: SparseVector.Divide
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Equals(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Equals(SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Equals_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Equals(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Equals(BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseVector.Equals(SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Equals(BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Equals(Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Equals_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Equals(BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Equals(BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: SparseVector.Equals(Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Equals*
  name: Equals
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Equals_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Equals
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Equals
  nameWithType: SparseVector.Equals
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.GetNonZeros
  name: GetNonZeros()
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_GetNonZeros
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.GetNonZeros
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.GetNonZeros()
  nameWithType: SparseVector.GetNonZeros()
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.GetNonZeros*
  name: GetNonZeros
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_GetNonZeros_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.GetNonZeros
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.GetNonZeros
  nameWithType: SparseVector.GetNonZeros
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.GramSchmidt(IEnumerable{BRIDGES.LinearAlgebra.Vectors.SparseVector})
  name: GramSchmidt(IEnumerable<SparseVector>)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_GramSchmidt_IEnumerable_BRIDGES_LinearAlgebra_Vectors_SparseVector__
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.GramSchmidt(IEnumerable{BRIDGES.LinearAlgebra.Vectors.SparseVector})
  name.vb: GramSchmidt(IEnumerable(Of SparseVector))
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.GramSchmidt(IEnumerable<BRIDGES.LinearAlgebra.Vectors.SparseVector>)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.SparseVector.GramSchmidt(IEnumerable(Of BRIDGES.LinearAlgebra.Vectors.SparseVector))
  nameWithType: SparseVector.GramSchmidt(IEnumerable<SparseVector>)
  nameWithType.vb: SparseVector.GramSchmidt(IEnumerable(Of SparseVector))
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.GramSchmidt*
  name: GramSchmidt
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_GramSchmidt_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.GramSchmidt
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.GramSchmidt
  nameWithType: SparseVector.GramSchmidt
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Item_System_Int32_
  commentId: P:BRIDGES.LinearAlgebra.Vectors.SparseVector.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Item[System.Int32]
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.SparseVector.Item(System.Int32)
  nameWithType: SparseVector.Item[Int32]
  nameWithType.vb: SparseVector.Item(Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Item*
  name: Item
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Item_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Item
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Item
  nameWithType: SparseVector.Item
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Length
  name: Length()
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Length
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Length
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Length()
  nameWithType: SparseVector.Length()
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Length*
  name: Length
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Length_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Length
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Length
  nameWithType: SparseVector.Length
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Multiply(BRIDGES.LinearAlgebra.Vectors.SparseVector,System.Double)
  name: Multiply(SparseVector, Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Multiply_BRIDGES_LinearAlgebra_Vectors_SparseVector_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Multiply(BRIDGES.LinearAlgebra.Vectors.SparseVector,System.Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Multiply(BRIDGES.LinearAlgebra.Vectors.SparseVector, System.Double)
  nameWithType: SparseVector.Multiply(SparseVector, Double)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Multiply(System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Multiply(Double, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Multiply_System_Double_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Multiply(System.Double,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Multiply(System.Double, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseVector.Multiply(Double, SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Multiply*
  name: Multiply
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Multiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Multiply
  nameWithType: SparseVector.Multiply
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.NonZerosCount
  name: NonZerosCount
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_NonZerosCount
  commentId: P:BRIDGES.LinearAlgebra.Vectors.SparseVector.NonZerosCount
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.NonZerosCount
  nameWithType: SparseVector.NonZerosCount
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.NonZerosCount*
  name: NonZerosCount
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_NonZerosCount_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.NonZerosCount
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.NonZerosCount
  nameWithType: SparseVector.NonZerosCount
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Opposite
  name: Opposite()
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Opposite
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Opposite
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Opposite()
  nameWithType: SparseVector.Opposite()
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Opposite*
  name: Opposite
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Opposite
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Opposite
  nameWithType: SparseVector.Opposite
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Size
  name: Size
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Size
  commentId: P:BRIDGES.LinearAlgebra.Vectors.SparseVector.Size
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Size
  nameWithType: SparseVector.Size
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Size*
  name: Size
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Size_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Size
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Size
  nameWithType: SparseVector.Size
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.SquaredLength
  name: SquaredLength()
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_SquaredLength
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.SquaredLength
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.SquaredLength()
  nameWithType: SparseVector.SquaredLength()
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.SquaredLength*
  name: SquaredLength
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_SquaredLength_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.SquaredLength
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.SquaredLength
  nameWithType: SparseVector.SquaredLength
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.StandardVector(System.Int32,System.Int32)
  name: StandardVector(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_StandardVector_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.StandardVector(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.StandardVector(System.Int32, System.Int32)
  nameWithType: SparseVector.StandardVector(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.StandardVector*
  name: StandardVector
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_StandardVector_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.StandardVector
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.StandardVector
  nameWithType: SparseVector.StandardVector
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: Subtract(SparseVector, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Subtract_BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Subtract(BRIDGES.LinearAlgebra.Vectors.SparseVector, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseVector.Subtract(SparseVector, SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Subtract*
  name: Subtract
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Subtract
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Subtract
  nameWithType: SparseVector.Subtract
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.ToArray
  name: ToArray()
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_ToArray
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.ToArray
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.ToArray()
  nameWithType: SparseVector.ToArray()
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.ToArray*
  name: ToArray
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_ToArray_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.ToArray
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.ToArray
  nameWithType: SparseVector.ToArray
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: TransposeMultiply(DenseVector, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_TransposeMultiply_BRIDGES_LinearAlgebra_Vectors_DenseVector_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.DenseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.DenseVector, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseVector.TransposeMultiply(DenseVector, SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  name: TransposeMultiply(SparseVector, DenseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_TransposeMultiply_BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_LinearAlgebra_Vectors_DenseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.DenseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.SparseVector, BRIDGES.LinearAlgebra.Vectors.DenseVector)
  nameWithType: SparseVector.TransposeMultiply(SparseVector, DenseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  name: TransposeMultiply(SparseVector, SparseVector)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_TransposeMultiply_BRIDGES_LinearAlgebra_Vectors_SparseVector_BRIDGES_LinearAlgebra_Vectors_SparseVector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.SparseVector,BRIDGES.LinearAlgebra.Vectors.SparseVector)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.SparseVector, BRIDGES.LinearAlgebra.Vectors.SparseVector)
  nameWithType: SparseVector.TransposeMultiply(SparseVector, SparseVector)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply*
  name: TransposeMultiply
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_TransposeMultiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.TransposeMultiply
  nameWithType: SparseVector.TransposeMultiply
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.TryGetComponent(System.Int32,System.Double@)
  name: TryGetComponent(Int32, out Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_TryGetComponent_System_Int32_System_Double__
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.TryGetComponent(System.Int32,System.Double@)
  name.vb: TryGetComponent(Int32, ByRef Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.TryGetComponent(System.Int32, out System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.SparseVector.TryGetComponent(System.Int32, ByRef System.Double)
  nameWithType: SparseVector.TryGetComponent(Int32, out Double)
  nameWithType.vb: SparseVector.TryGetComponent(Int32, ByRef Double)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.TryGetComponent*
  name: TryGetComponent
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_TryGetComponent_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.TryGetComponent
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.TryGetComponent
  nameWithType: SparseVector.TryGetComponent
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Unitise
  name: Unitise()
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Unitise
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Unitise
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Unitise()
  nameWithType: SparseVector.Unitise()
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Unitise*
  name: Unitise
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Unitise_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Unitise
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Unitise
  nameWithType: SparseVector.Unitise
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Zero(System.Int32)
  name: Zero(Int32)
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Zero_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.SparseVector.Zero(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Zero(System.Int32)
  nameWithType: SparseVector.Zero(Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.SparseVector.Zero*
  name: Zero
  href: api/BRIDGES.LinearAlgebra.Vectors.SparseVector.html#BRIDGES_LinearAlgebra_Vectors_SparseVector_Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.SparseVector.Zero
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.SparseVector.Zero
  nameWithType: SparseVector.Zero
- uid: BRIDGES.LinearAlgebra.Vectors.Vector
  name: Vector
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html
  commentId: T:BRIDGES.LinearAlgebra.Vectors.Vector
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector
  nameWithType: Vector
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.#ctor
  name: Vector()
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector__ctor
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.#ctor
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Vector()
  nameWithType: Vector.Vector()
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.#ctor*
  name: Vector
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector__ctor_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.#ctor
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Vector
  nameWithType: Vector.Vector
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Add(BRIDGES.LinearAlgebra.Vectors.Vector,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Add(Vector, Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Add_BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.Add(BRIDGES.LinearAlgebra.Vectors.Vector,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Add(BRIDGES.LinearAlgebra.Vectors.Vector, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: Vector.Add(Vector, Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Add*
  name: Add
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Add
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Add
  nameWithType: Vector.Add
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#Add(BRIDGES.LinearAlgebra.Vectors.Vector)
  name: IAddable<Vector>.Add(Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_Vector__Add_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#Add(BRIDGES.LinearAlgebra.Vectors.Vector)
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.Add(Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.Add(BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: Vector.IAddable<Vector>.Add(Vector)
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.Add(Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#Add*
  name: IAddable<Vector>.Add
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_Vector__Add_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#Add
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.Add
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.Add
  nameWithType: Vector.IAddable<Vector>.Add
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.Add
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#IsAssociative
  name: IAddable<Vector>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_Vector__IsAssociative
  commentId: P:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#IsAssociative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsAssociative
  nameWithType: Vector.IAddable<Vector>.IsAssociative
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#IsAssociative*
  name: IAddable<Vector>.IsAssociative
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_Vector__IsAssociative_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#IsAssociative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsAssociative
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsAssociative
  nameWithType: Vector.IAddable<Vector>.IsAssociative
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsAssociative
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#IsCommutative
  name: IAddable<Vector>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_Vector__IsCommutative
  commentId: P:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#IsCommutative
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsCommutative
  nameWithType: Vector.IAddable<Vector>.IsCommutative
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#IsCommutative*
  name: IAddable<Vector>.IsCommutative
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Fundamentals_IAddable_BRIDGES_LinearAlgebra_Vectors_Vector__IsCommutative_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IAddable{BRIDGES#LinearAlgebra#Vectors#Vector}#IsCommutative
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsCommutative
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsCommutative
  nameWithType: Vector.IAddable<Vector>.IsCommutative
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IAddable<BRIDGES.LinearAlgebra.Vectors.Vector>.IsCommutative
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#Vector}#Subtract(BRIDGES.LinearAlgebra.Vectors.Vector)
  name: ISubtractable<Vector>.Subtract(Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Vectors_Vector__Subtract_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#Vector}#Subtract(BRIDGES.LinearAlgebra.Vectors.Vector)
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.Vector>.Subtract(Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.Vector>.Subtract(BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: Vector.ISubtractable<Vector>.Subtract(Vector)
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.Vector>.Subtract(Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#Vector}#Subtract*
  name: ISubtractable<Vector>.Subtract
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Fundamentals_ISubtractable_BRIDGES_LinearAlgebra_Vectors_Vector__Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#ISubtractable{BRIDGES#LinearAlgebra#Vectors#Vector}#Subtract
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.Vector>.Subtract
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.Vector>.Subtract
  nameWithType: Vector.ISubtractable<Vector>.Subtract
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.ISubtractable<BRIDGES.LinearAlgebra.Vectors.Vector>.Subtract
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#Vector}#Zero
  name: IZeroable<Vector>.Zero()
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Vectors_Vector__Zero
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#Vector}#Zero
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.Vector>.Zero()
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.Vector>.Zero()
  nameWithType: Vector.IZeroable<Vector>.Zero()
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.Vector>.Zero()
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#Vector}#Zero*
  name: IZeroable<Vector>.Zero
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Fundamentals_IZeroable_BRIDGES_LinearAlgebra_Vectors_Vector__Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Fundamentals#IZeroable{BRIDGES#LinearAlgebra#Vectors#Vector}#Zero
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.Vector>.Zero
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.Vector>.Zero
  nameWithType: Vector.IZeroable<Vector>.Zero
  nameWithType.vb: Vector.BRIDGES.Algebra.Fundamentals.IZeroable<BRIDGES.LinearAlgebra.Vectors.Vector>.Zero
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#Vector}#DistanceTo(BRIDGES.LinearAlgebra.Vectors.Vector)
  name: IMetric<Vector>.DistanceTo(Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Measure_IMetric_BRIDGES_LinearAlgebra_Vectors_Vector__DistanceTo_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#Vector}#DistanceTo(BRIDGES.LinearAlgebra.Vectors.Vector)
  name.vb: BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.Vector>.DistanceTo(Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.Vector>.DistanceTo(BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: Vector.IMetric<Vector>.DistanceTo(Vector)
  nameWithType.vb: Vector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.Vector>.DistanceTo(Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#Vector}#DistanceTo*
  name: IMetric<Vector>.DistanceTo
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Measure_IMetric_BRIDGES_LinearAlgebra_Vectors_Vector__DistanceTo_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Measure#IMetric{BRIDGES#LinearAlgebra#Vectors#Vector}#DistanceTo
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.Vector>.DistanceTo
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.Vector>.DistanceTo
  nameWithType: Vector.IMetric<Vector>.DistanceTo
  nameWithType.vb: Vector.BRIDGES.Algebra.Measure.IMetric<BRIDGES.LinearAlgebra.Vectors.Vector>.DistanceTo
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#Vector}#Norm
  name: INorm<Vector>.Norm()
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Measure_INorm_BRIDGES_LinearAlgebra_Vectors_Vector__Norm
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#Vector}#Norm
  name.vb: BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.Vector>.Norm()
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.Vector>.Norm()
  nameWithType: Vector.INorm<Vector>.Norm()
  nameWithType.vb: Vector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.Vector>.Norm()
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#Vector}#Norm*
  name: INorm<Vector>.Norm
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Measure_INorm_BRIDGES_LinearAlgebra_Vectors_Vector__Norm_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Measure#INorm{BRIDGES#LinearAlgebra#Vectors#Vector}#Norm
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.Vector>.Norm
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.Vector>.Norm
  nameWithType: Vector.INorm<Vector>.Norm
  nameWithType.vb: Vector.BRIDGES.Algebra.Measure.INorm<BRIDGES.LinearAlgebra.Vectors.Vector>.Norm
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#Vector}#Opposite
  name: IGroup<Vector>.Opposite()
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Vectors_Vector__Opposite
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#Vector}#Opposite
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.Vector>.Opposite()
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.Vector>.Opposite()
  nameWithType: Vector.IGroup<Vector>.Opposite()
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.Vector>.Opposite()
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#Vector}#Opposite*
  name: IGroup<Vector>.Opposite
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Sets_Additive_IGroup_BRIDGES_LinearAlgebra_Vectors_Vector__Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#Additive#IGroup{BRIDGES#LinearAlgebra#Vectors#Vector}#Opposite
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.Vector>.Opposite
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.Vector>.Opposite
  nameWithType: Vector.IGroup<Vector>.Opposite
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.Additive.IGroup<BRIDGES.LinearAlgebra.Vectors.Vector>.Opposite
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#Vector}#Divide(System.Double)
  name: IGroupAction<Double, Vector>.Divide(Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_Vector__Divide_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#Vector}#Divide(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Divide(Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.Vector>.Divide(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Divide(System.Double)
  nameWithType: Vector.IGroupAction<Double, Vector>.Divide(Double)
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Divide(Double)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#Vector}#Divide*
  name: IGroupAction<Double, Vector>.Divide
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_Vector__Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#Vector}#Divide
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Divide
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.Vector>.Divide
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Divide
  nameWithType: Vector.IGroupAction<Double, Vector>.Divide
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Divide
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#Vector}#Multiply(System.Double)
  name: IGroupAction<Double, Vector>.Multiply(Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_Vector__Multiply_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#Vector}#Multiply(System.Double)
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Multiply(Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.Vector>.Multiply(System.Double)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Multiply(System.Double)
  nameWithType: Vector.IGroupAction<Double, Vector>.Multiply(Double)
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Multiply(Double)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#Vector}#Multiply*
  name: IGroupAction<Double, Vector>.Multiply
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_Algebra_Sets_IGroupAction_System_Double_BRIDGES_LinearAlgebra_Vectors_Vector__Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES#Algebra#Sets#IGroupAction{System#Double,BRIDGES#LinearAlgebra#Vectors#Vector}#Multiply
  isSpec: "True"
  name.vb: BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Multiply
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double, BRIDGES.LinearAlgebra.Vectors.Vector>.Multiply
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Multiply
  nameWithType: Vector.IGroupAction<Double, Vector>.Multiply
  nameWithType.vb: Vector.BRIDGES.Algebra.Sets.IGroupAction<System.Double,BRIDGES.LinearAlgebra.Vectors.Vector>.Multiply
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Divide(BRIDGES.LinearAlgebra.Vectors.Vector,System.Double)
  name: Divide(Vector, Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Divide_BRIDGES_LinearAlgebra_Vectors_Vector_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.Divide(BRIDGES.LinearAlgebra.Vectors.Vector,System.Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Divide(BRIDGES.LinearAlgebra.Vectors.Vector, System.Double)
  nameWithType: Vector.Divide(Vector, Double)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Divide*
  name: Divide
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Divide_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Divide
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Divide
  nameWithType: Vector.Divide
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Equals(BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Equals(Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Equals_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.Equals(BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Equals(BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: Vector.Equals(Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Equals*
  name: Equals
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Equals_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Equals
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Equals
  nameWithType: Vector.Equals
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.GramSchmidt(IEnumerable{BRIDGES.LinearAlgebra.Vectors.Vector})
  name: GramSchmidt(IEnumerable<Vector>)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_GramSchmidt_IEnumerable_BRIDGES_LinearAlgebra_Vectors_Vector__
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.GramSchmidt(IEnumerable{BRIDGES.LinearAlgebra.Vectors.Vector})
  name.vb: GramSchmidt(IEnumerable(Of Vector))
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.GramSchmidt(IEnumerable<BRIDGES.LinearAlgebra.Vectors.Vector>)
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.Vector.GramSchmidt(IEnumerable(Of BRIDGES.LinearAlgebra.Vectors.Vector))
  nameWithType: Vector.GramSchmidt(IEnumerable<Vector>)
  nameWithType.vb: Vector.GramSchmidt(IEnumerable(Of Vector))
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.GramSchmidt*
  name: GramSchmidt
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_GramSchmidt_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.GramSchmidt
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.GramSchmidt
  nameWithType: Vector.GramSchmidt
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Item(System.Int32)
  name: Item[Int32]
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Item_System_Int32_
  commentId: P:BRIDGES.LinearAlgebra.Vectors.Vector.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Item[System.Int32]
  fullName.vb: BRIDGES.LinearAlgebra.Vectors.Vector.Item(System.Int32)
  nameWithType: Vector.Item[Int32]
  nameWithType.vb: Vector.Item(Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Item*
  name: Item
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Item_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Item
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Item
  nameWithType: Vector.Item
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Length
  name: Length()
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Length
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.Length
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Length()
  nameWithType: Vector.Length()
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Length*
  name: Length
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Length_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Length
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Length
  nameWithType: Vector.Length
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Multiply(BRIDGES.LinearAlgebra.Vectors.Vector,System.Double)
  name: Multiply(Vector, Double)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Multiply_BRIDGES_LinearAlgebra_Vectors_Vector_System_Double_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.Multiply(BRIDGES.LinearAlgebra.Vectors.Vector,System.Double)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Multiply(BRIDGES.LinearAlgebra.Vectors.Vector, System.Double)
  nameWithType: Vector.Multiply(Vector, Double)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Multiply(System.Double,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Multiply(Double, Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Multiply_System_Double_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.Multiply(System.Double,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Multiply(System.Double, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: Vector.Multiply(Double, Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Multiply*
  name: Multiply
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Multiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Multiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Multiply
  nameWithType: Vector.Multiply
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Opposite
  name: Opposite()
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Opposite
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.Opposite
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Opposite()
  nameWithType: Vector.Opposite()
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Opposite*
  name: Opposite
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Opposite_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Opposite
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Opposite
  nameWithType: Vector.Opposite
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Size
  name: Size
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Size
  commentId: P:BRIDGES.LinearAlgebra.Vectors.Vector.Size
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Size
  nameWithType: Vector.Size
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Size*
  name: Size
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Size_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Size
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Size
  nameWithType: Vector.Size
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.SquaredLength
  name: SquaredLength()
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_SquaredLength
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.SquaredLength
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.SquaredLength()
  nameWithType: Vector.SquaredLength()
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.SquaredLength*
  name: SquaredLength
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_SquaredLength_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.SquaredLength
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.SquaredLength
  nameWithType: Vector.SquaredLength
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.StandardVector(System.Int32,System.Int32)
  name: StandardVector(Int32, Int32)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_StandardVector_System_Int32_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.StandardVector(System.Int32,System.Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.StandardVector(System.Int32, System.Int32)
  nameWithType: Vector.StandardVector(Int32, Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.StandardVector*
  name: StandardVector
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_StandardVector_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.StandardVector
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.StandardVector
  nameWithType: Vector.StandardVector
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Subtract(BRIDGES.LinearAlgebra.Vectors.Vector,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: Subtract(Vector, Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Subtract_BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.Subtract(BRIDGES.LinearAlgebra.Vectors.Vector,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Subtract(BRIDGES.LinearAlgebra.Vectors.Vector, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: Vector.Subtract(Vector, Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Subtract*
  name: Subtract
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Subtract_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Subtract
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Subtract
  nameWithType: Vector.Subtract
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.ToArray
  name: ToArray()
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_ToArray
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.ToArray
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.ToArray()
  nameWithType: Vector.ToArray()
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.ToArray*
  name: ToArray
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_ToArray_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.ToArray
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.ToArray
  nameWithType: Vector.ToArray
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.Vector,BRIDGES.LinearAlgebra.Vectors.Vector)
  name: TransposeMultiply(Vector, Vector)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_TransposeMultiply_BRIDGES_LinearAlgebra_Vectors_Vector_BRIDGES_LinearAlgebra_Vectors_Vector_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.Vector,BRIDGES.LinearAlgebra.Vectors.Vector)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.TransposeMultiply(BRIDGES.LinearAlgebra.Vectors.Vector, BRIDGES.LinearAlgebra.Vectors.Vector)
  nameWithType: Vector.TransposeMultiply(Vector, Vector)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.TransposeMultiply*
  name: TransposeMultiply
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_TransposeMultiply_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.TransposeMultiply
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.TransposeMultiply
  nameWithType: Vector.TransposeMultiply
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Unitise
  name: Unitise()
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Unitise
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.Unitise
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Unitise()
  nameWithType: Vector.Unitise()
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Unitise*
  name: Unitise
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Unitise_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Unitise
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Unitise
  nameWithType: Vector.Unitise
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Zero(System.Int32)
  name: Zero(Int32)
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Zero_System_Int32_
  commentId: M:BRIDGES.LinearAlgebra.Vectors.Vector.Zero(System.Int32)
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Zero(System.Int32)
  nameWithType: Vector.Zero(Int32)
- uid: BRIDGES.LinearAlgebra.Vectors.Vector.Zero*
  name: Zero
  href: api/BRIDGES.LinearAlgebra.Vectors.Vector.html#BRIDGES_LinearAlgebra_Vectors_Vector_Zero_
  commentId: Overload:BRIDGES.LinearAlgebra.Vectors.Vector.Zero
  isSpec: "True"
  fullName: BRIDGES.LinearAlgebra.Vectors.Vector.Zero
  nameWithType: Vector.Zero
- uid: BRIDGES.Settings
  name: Settings
  href: api/BRIDGES.Settings.html
  commentId: T:BRIDGES.Settings
  fullName: BRIDGES.Settings
  nameWithType: Settings
- uid: BRIDGES.Settings.AbsolutePrecision
  name: AbsolutePrecision
  href: api/BRIDGES.Settings.html#BRIDGES_Settings_AbsolutePrecision
  commentId: F:BRIDGES.Settings.AbsolutePrecision
  fullName: BRIDGES.Settings.AbsolutePrecision
  nameWithType: Settings.AbsolutePrecision
- uid: BRIDGES.Settings.AngularPrecision
  name: AngularPrecision
  href: api/BRIDGES.Settings.html#BRIDGES_Settings_AngularPrecision
  commentId: F:BRIDGES.Settings.AngularPrecision
  fullName: BRIDGES.Settings.AngularPrecision
  nameWithType: Settings.AngularPrecision
- uid: BRIDGES.Solvers.GuidedProjection
  name: BRIDGES.Solvers.GuidedProjection
  href: api/BRIDGES.Solvers.GuidedProjection.html
  commentId: N:BRIDGES.Solvers.GuidedProjection
  fullName: BRIDGES.Solvers.GuidedProjection
  nameWithType: BRIDGES.Solvers.GuidedProjection
- uid: BRIDGES.Solvers.GuidedProjection.Energy
  name: Energy
  href: api/BRIDGES.Solvers.GuidedProjection.Energy.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.Energy
  fullName: BRIDGES.Solvers.GuidedProjection.Energy
  nameWithType: Energy
- uid: BRIDGES.Solvers.GuidedProjection.Energy.energyType
  name: energyType
  href: api/BRIDGES.Solvers.GuidedProjection.Energy.html#BRIDGES_Solvers_GuidedProjection_Energy_energyType
  commentId: F:BRIDGES.Solvers.GuidedProjection.Energy.energyType
  fullName: BRIDGES.Solvers.GuidedProjection.Energy.energyType
  nameWithType: Energy.energyType
- uid: BRIDGES.Solvers.GuidedProjection.Energy.variables
  name: variables
  href: api/BRIDGES.Solvers.GuidedProjection.Energy.html#BRIDGES_Solvers_GuidedProjection_Energy_variables
  commentId: F:BRIDGES.Solvers.GuidedProjection.Energy.variables
  fullName: BRIDGES.Solvers.GuidedProjection.Energy.variables
  nameWithType: Energy.variables
- uid: BRIDGES.Solvers.GuidedProjection.Energy.Weight
  name: Weight
  href: api/BRIDGES.Solvers.GuidedProjection.Energy.html#BRIDGES_Solvers_GuidedProjection_Energy_Weight
  commentId: P:BRIDGES.Solvers.GuidedProjection.Energy.Weight
  fullName: BRIDGES.Solvers.GuidedProjection.Energy.Weight
  nameWithType: Energy.Weight
- uid: BRIDGES.Solvers.GuidedProjection.Energy.Weight*
  name: Weight
  href: api/BRIDGES.Solvers.GuidedProjection.Energy.html#BRIDGES_Solvers_GuidedProjection_Energy_Weight_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.Energy.Weight
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.Energy.Weight
  nameWithType: Energy.Weight
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes
  name: BRIDGES.Solvers.GuidedProjection.EnergyTypes
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.html
  commentId: N:BRIDGES.Solvers.GuidedProjection.EnergyTypes
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes
  nameWithType: BRIDGES.Solvers.GuidedProjection.EnergyTypes
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality
  name: SegmentOrthogonality
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality
  nameWithType: SegmentOrthogonality
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.#ctor(System.Double[])
  name: SegmentOrthogonality(Double[])
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentOrthogonality__ctor_System_Double___
  commentId: M:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.#ctor(System.Double[])
  name.vb: SegmentOrthogonality(Double())
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.SegmentOrthogonality(System.Double[])
  fullName.vb: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.SegmentOrthogonality(System.Double())
  nameWithType: SegmentOrthogonality.SegmentOrthogonality(Double[])
  nameWithType.vb: SegmentOrthogonality.SegmentOrthogonality(Double())
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.#ctor*
  name: SegmentOrthogonality
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentOrthogonality__ctor_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.#ctor
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.SegmentOrthogonality
  nameWithType: SegmentOrthogonality.SegmentOrthogonality
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.LocalKi
  name: LocalKi
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentOrthogonality_LocalKi
  commentId: P:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.LocalKi
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.LocalKi
  nameWithType: SegmentOrthogonality.LocalKi
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.LocalKi*
  name: LocalKi
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentOrthogonality_LocalKi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.LocalKi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.LocalKi
  nameWithType: SegmentOrthogonality.LocalKi
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.Si
  name: Si
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentOrthogonality_Si
  commentId: P:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.Si
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.Si
  nameWithType: SegmentOrthogonality.Si
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.Si*
  name: Si
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentOrthogonality_Si_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.Si
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentOrthogonality.Si
  nameWithType: SegmentOrthogonality.Si
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity
  name: SegmentParallelity
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity
  nameWithType: SegmentParallelity
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.#ctor(System.Double[])
  name: SegmentParallelity(Double[])
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentParallelity__ctor_System_Double___
  commentId: M:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.#ctor(System.Double[])
  name.vb: SegmentParallelity(Double())
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.SegmentParallelity(System.Double[])
  fullName.vb: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.SegmentParallelity(System.Double())
  nameWithType: SegmentParallelity.SegmentParallelity(Double[])
  nameWithType.vb: SegmentParallelity.SegmentParallelity(Double())
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.#ctor*
  name: SegmentParallelity
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentParallelity__ctor_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.#ctor
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.SegmentParallelity
  nameWithType: SegmentParallelity.SegmentParallelity
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.LocalKi
  name: LocalKi
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentParallelity_LocalKi
  commentId: P:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.LocalKi
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.LocalKi
  nameWithType: SegmentParallelity.LocalKi
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.LocalKi*
  name: LocalKi
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentParallelity_LocalKi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.LocalKi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.LocalKi
  nameWithType: SegmentParallelity.LocalKi
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.Si
  name: Si
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentParallelity_Si
  commentId: P:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.Si
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.Si
  nameWithType: SegmentParallelity.Si
- uid: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.Si*
  name: Si
  href: api/BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.html#BRIDGES_Solvers_GuidedProjection_EnergyTypes_SegmentParallelity_Si_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.Si
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.EnergyTypes.SegmentParallelity.Si
  nameWithType: SegmentParallelity.Si
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm
  name: GuidedProjectionAlgorithm
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm
  nameWithType: GuidedProjectionAlgorithm
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.#ctor(System.Double,System.Int32)
  name: GuidedProjectionAlgorithm(Double, Int32)
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm__ctor_System_Double_System_Int32_
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.#ctor(System.Double,System.Int32)
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.GuidedProjectionAlgorithm(System.Double, System.Int32)
  nameWithType: GuidedProjectionAlgorithm.GuidedProjectionAlgorithm(Double, Int32)
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.#ctor*
  name: GuidedProjectionAlgorithm
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm__ctor_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.#ctor
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.GuidedProjectionAlgorithm
  nameWithType: GuidedProjectionAlgorithm.GuidedProjectionAlgorithm
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},Func{System.Int32,System.Double})
  name: AddConstraint(ILinearisedConstraintType, List<(VariableSet, Int32)>, Func<Int32, Double>)
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddConstraint_BRIDGES_Solvers_GuidedProjection_Interfaces_ILinearisedConstraintType_List_System_ValueTuple_BRIDGES_Solvers_GuidedProjection_VariableSet_System_Int32___Func_System_Int32_System_Double__
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},Func{System.Int32,System.Double})
  name.vb: AddConstraint(ILinearisedConstraintType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Func(Of Int32, Double))
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType, List<System.ValueTuple<BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32>>, Func<System.Int32, System.Double>)
  fullName.vb: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType, List(Of System.ValueTuple(Of BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32)), Func(Of System.Int32, System.Double))
  nameWithType: GuidedProjectionAlgorithm.AddConstraint(ILinearisedConstraintType, List<(VariableSet, Int32)>, Func<Int32, Double>)
  nameWithType.vb: GuidedProjectionAlgorithm.AddConstraint(ILinearisedConstraintType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Func(Of Int32, Double))
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},System.Double)
  name: AddConstraint(ILinearisedConstraintType, List<(VariableSet, Int32)>, Double)
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddConstraint_BRIDGES_Solvers_GuidedProjection_Interfaces_ILinearisedConstraintType_List_System_ValueTuple_BRIDGES_Solvers_GuidedProjection_VariableSet_System_Int32___System_Double_
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},System.Double)
  name.vb: AddConstraint(ILinearisedConstraintType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Double)
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType, List<System.ValueTuple<BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32>>, System.Double)
  fullName.vb: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType, List(Of System.ValueTuple(Of BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32)), System.Double)
  nameWithType: GuidedProjectionAlgorithm.AddConstraint(ILinearisedConstraintType, List<(VariableSet, Int32)>, Double)
  nameWithType.vb: GuidedProjectionAlgorithm.AddConstraint(ILinearisedConstraintType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Double)
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},Func{System.Int32,System.Double})
  name: AddConstraint(IQuadraticConstraintType, List<(VariableSet, Int32)>, Func<Int32, Double>)
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddConstraint_BRIDGES_Solvers_GuidedProjection_Interfaces_IQuadraticConstraintType_List_System_ValueTuple_BRIDGES_Solvers_GuidedProjection_VariableSet_System_Int32___Func_System_Int32_System_Double__
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},Func{System.Int32,System.Double})
  name.vb: AddConstraint(IQuadraticConstraintType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Func(Of Int32, Double))
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType, List<System.ValueTuple<BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32>>, Func<System.Int32, System.Double>)
  fullName.vb: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType, List(Of System.ValueTuple(Of BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32)), Func(Of System.Int32, System.Double))
  nameWithType: GuidedProjectionAlgorithm.AddConstraint(IQuadraticConstraintType, List<(VariableSet, Int32)>, Func<Int32, Double>)
  nameWithType.vb: GuidedProjectionAlgorithm.AddConstraint(IQuadraticConstraintType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Func(Of Int32, Double))
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},System.Double)
  name: AddConstraint(IQuadraticConstraintType, List<(VariableSet, Int32)>, Double)
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddConstraint_BRIDGES_Solvers_GuidedProjection_Interfaces_IQuadraticConstraintType_List_System_ValueTuple_BRIDGES_Solvers_GuidedProjection_VariableSet_System_Int32___System_Double_
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},System.Double)
  name.vb: AddConstraint(IQuadraticConstraintType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Double)
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType, List<System.ValueTuple<BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32>>, System.Double)
  fullName.vb: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint(BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType, List(Of System.ValueTuple(Of BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32)), System.Double)
  nameWithType: GuidedProjectionAlgorithm.AddConstraint(IQuadraticConstraintType, List<(VariableSet, Int32)>, Double)
  nameWithType.vb: GuidedProjectionAlgorithm.AddConstraint(IQuadraticConstraintType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Double)
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint*
  name: AddConstraint
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddConstraint_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddConstraint
  nameWithType: GuidedProjectionAlgorithm.AddConstraint
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy(BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},Func{System.Int32,System.Double})
  name: AddEnergy(IEnergyType, List<(VariableSet, Int32)>, Func<Int32, Double>)
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddEnergy_BRIDGES_Solvers_GuidedProjection_Interfaces_IEnergyType_List_System_ValueTuple_BRIDGES_Solvers_GuidedProjection_VariableSet_System_Int32___Func_System_Int32_System_Double__
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy(BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},Func{System.Int32,System.Double})
  name.vb: AddEnergy(IEnergyType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Func(Of Int32, Double))
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy(BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType, List<System.ValueTuple<BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32>>, Func<System.Int32, System.Double>)
  fullName.vb: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy(BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType, List(Of System.ValueTuple(Of BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32)), Func(Of System.Int32, System.Double))
  nameWithType: GuidedProjectionAlgorithm.AddEnergy(IEnergyType, List<(VariableSet, Int32)>, Func<Int32, Double>)
  nameWithType.vb: GuidedProjectionAlgorithm.AddEnergy(IEnergyType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Func(Of Int32, Double))
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy(BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},System.Double)
  name: AddEnergy(IEnergyType, List<(VariableSet, Int32)>, Double)
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddEnergy_BRIDGES_Solvers_GuidedProjection_Interfaces_IEnergyType_List_System_ValueTuple_BRIDGES_Solvers_GuidedProjection_VariableSet_System_Int32___System_Double_
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy(BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType,List{System.ValueTuple{BRIDGES.Solvers.GuidedProjection.VariableSet,System.Int32}},System.Double)
  name.vb: AddEnergy(IEnergyType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Double)
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy(BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType, List<System.ValueTuple<BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32>>, System.Double)
  fullName.vb: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy(BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType, List(Of System.ValueTuple(Of BRIDGES.Solvers.GuidedProjection.VariableSet, System.Int32)), System.Double)
  nameWithType: GuidedProjectionAlgorithm.AddEnergy(IEnergyType, List<(VariableSet, Int32)>, Double)
  nameWithType.vb: GuidedProjectionAlgorithm.AddEnergy(IEnergyType, List(Of (VariableSet, Int32)(Of VariableSet, Int32)), Double)
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy*
  name: AddEnergy
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddEnergy_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddEnergy
  nameWithType: GuidedProjectionAlgorithm.AddEnergy
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddVariableSet(System.Int32)
  name: AddVariableSet(Int32)
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddVariableSet_System_Int32_
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddVariableSet(System.Int32)
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddVariableSet(System.Int32)
  nameWithType: GuidedProjectionAlgorithm.AddVariableSet(Int32)
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddVariableSet(System.Int32,System.Int32)
  name: AddVariableSet(Int32, Int32)
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddVariableSet_System_Int32_System_Int32_
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddVariableSet(System.Int32,System.Int32)
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddVariableSet(System.Int32, System.Int32)
  nameWithType: GuidedProjectionAlgorithm.AddVariableSet(Int32, Int32)
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddVariableSet*
  name: AddVariableSet
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_AddVariableSet_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddVariableSet
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.AddVariableSet
  nameWithType: GuidedProjectionAlgorithm.AddVariableSet
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.InitialiseX
  name: InitialiseX()
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_InitialiseX
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.InitialiseX
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.InitialiseX()
  nameWithType: GuidedProjectionAlgorithm.InitialiseX()
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.InitialiseX*
  name: InitialiseX
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_InitialiseX_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.InitialiseX
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.InitialiseX
  nameWithType: GuidedProjectionAlgorithm.InitialiseX
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.IterationIndex
  name: IterationIndex
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_IterationIndex
  commentId: P:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.IterationIndex
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.IterationIndex
  nameWithType: GuidedProjectionAlgorithm.IterationIndex
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.IterationIndex*
  name: IterationIndex
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_IterationIndex_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.IterationIndex
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.IterationIndex
  nameWithType: GuidedProjectionAlgorithm.IterationIndex
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.MaxIteration
  name: MaxIteration
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_MaxIteration
  commentId: P:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.MaxIteration
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.MaxIteration
  nameWithType: GuidedProjectionAlgorithm.MaxIteration
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.MaxIteration*
  name: MaxIteration
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_MaxIteration_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.MaxIteration
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.MaxIteration
  nameWithType: GuidedProjectionAlgorithm.MaxIteration
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.RunIteration(System.Boolean)
  name: RunIteration(Boolean)
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_RunIteration_System_Boolean_
  commentId: M:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.RunIteration(System.Boolean)
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.RunIteration(System.Boolean)
  nameWithType: GuidedProjectionAlgorithm.RunIteration(Boolean)
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.RunIteration*
  name: RunIteration
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_RunIteration_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.RunIteration
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.RunIteration
  nameWithType: GuidedProjectionAlgorithm.RunIteration
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.X
  name: X
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_X
  commentId: P:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.X
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.X
  nameWithType: GuidedProjectionAlgorithm.X
- uid: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.X*
  name: X
  href: api/BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.html#BRIDGES_Solvers_GuidedProjection_GuidedProjectionAlgorithm_X_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.X
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.GuidedProjectionAlgorithm.X
  nameWithType: GuidedProjectionAlgorithm.X
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces
  name: BRIDGES.Solvers.GuidedProjection.Interfaces
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.html
  commentId: N:BRIDGES.Solvers.GuidedProjection.Interfaces
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces
  nameWithType: BRIDGES.Solvers.GuidedProjection.Interfaces
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType
  name: IEnergyType
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType
  nameWithType: IEnergyType
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.LocalKi
  name: LocalKi
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_IEnergyType_LocalKi
  commentId: P:BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.LocalKi
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.LocalKi
  nameWithType: IEnergyType.LocalKi
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.LocalKi*
  name: LocalKi
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_IEnergyType_LocalKi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.LocalKi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.LocalKi
  nameWithType: IEnergyType.LocalKi
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.Si
  name: Si
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_IEnergyType_Si
  commentId: P:BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.Si
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.Si
  nameWithType: IEnergyType.Si
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.Si*
  name: Si
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_IEnergyType_Si_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.Si
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IEnergyType.Si
  nameWithType: IEnergyType.Si
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType
  name: ILinearisedConstraintType
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType
  nameWithType: ILinearisedConstraintType
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType.UpdateLocal(System.Double[])
  name: UpdateLocal(Double[])
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_ILinearisedConstraintType_UpdateLocal_System_Double___
  commentId: M:BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType.UpdateLocal(System.Double[])
  name.vb: UpdateLocal(Double())
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType.UpdateLocal(System.Double[])
  fullName.vb: BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType.UpdateLocal(System.Double())
  nameWithType: ILinearisedConstraintType.UpdateLocal(Double[])
  nameWithType.vb: ILinearisedConstraintType.UpdateLocal(Double())
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType.UpdateLocal*
  name: UpdateLocal
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_ILinearisedConstraintType_UpdateLocal_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType.UpdateLocal
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.ILinearisedConstraintType.UpdateLocal
  nameWithType: ILinearisedConstraintType.UpdateLocal
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType
  name: IQuadraticConstraintType
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType
  nameWithType: IQuadraticConstraintType
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.Ci
  name: Ci
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_IQuadraticConstraintType_Ci
  commentId: P:BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.Ci
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.Ci
  nameWithType: IQuadraticConstraintType.Ci
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.Ci*
  name: Ci
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_IQuadraticConstraintType_Ci_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.Ci
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.Ci
  nameWithType: IQuadraticConstraintType.Ci
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalBi
  name: LocalBi
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_IQuadraticConstraintType_LocalBi
  commentId: P:BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalBi
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalBi
  nameWithType: IQuadraticConstraintType.LocalBi
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalBi*
  name: LocalBi
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_IQuadraticConstraintType_LocalBi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalBi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalBi
  nameWithType: IQuadraticConstraintType.LocalBi
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalHi
  name: LocalHi
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_IQuadraticConstraintType_LocalHi
  commentId: P:BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalHi
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalHi
  nameWithType: IQuadraticConstraintType.LocalHi
- uid: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalHi*
  name: LocalHi
  href: api/BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.html#BRIDGES_Solvers_GuidedProjection_Interfaces_IQuadraticConstraintType_LocalHi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalHi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.Interfaces.IQuadraticConstraintType.LocalHi
  nameWithType: IQuadraticConstraintType.LocalHi
- uid: BRIDGES.Solvers.GuidedProjection.LinearisedConstraint
  name: LinearisedConstraint
  href: api/BRIDGES.Solvers.GuidedProjection.LinearisedConstraint.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.LinearisedConstraint
  fullName: BRIDGES.Solvers.GuidedProjection.LinearisedConstraint
  nameWithType: LinearisedConstraint
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraint
  name: QuadraticConstraint
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.QuadraticConstraint
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraint
  nameWithType: QuadraticConstraint
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.constraintType
  name: constraintType
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraint_constraintType
  commentId: F:BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.constraintType
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.constraintType
  nameWithType: QuadraticConstraint.constraintType
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.variables
  name: variables
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraint_variables
  commentId: F:BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.variables
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.variables
  nameWithType: QuadraticConstraint.variables
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.Weight
  name: Weight
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraint_Weight
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.Weight
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.Weight
  nameWithType: QuadraticConstraint.Weight
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.Weight*
  name: Weight
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraint_Weight_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.Weight
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraint.Weight
  nameWithType: QuadraticConstraint.Weight
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes
  name: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.html
  commentId: N:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes
  nameWithType: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength
  name: CoherentLength
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength
  nameWithType: CoherentLength
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.#ctor(System.Int32)
  name: CoherentLength(Int32)
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_CoherentLength__ctor_System_Int32_
  commentId: M:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.#ctor(System.Int32)
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.CoherentLength(System.Int32)
  nameWithType: CoherentLength.CoherentLength(Int32)
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.#ctor*
  name: CoherentLength
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_CoherentLength__ctor_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.#ctor
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.CoherentLength
  nameWithType: CoherentLength.CoherentLength
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.Ci
  name: Ci
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_CoherentLength_Ci
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.Ci
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.Ci
  nameWithType: CoherentLength.Ci
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.Ci*
  name: Ci
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_CoherentLength_Ci_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.Ci
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.Ci
  nameWithType: CoherentLength.Ci
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalBi
  name: LocalBi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_CoherentLength_LocalBi
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalBi
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalBi
  nameWithType: CoherentLength.LocalBi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalBi*
  name: LocalBi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_CoherentLength_LocalBi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalBi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalBi
  nameWithType: CoherentLength.LocalBi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalHi
  name: LocalHi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_CoherentLength_LocalHi
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalHi
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalHi
  nameWithType: CoherentLength.LocalHi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalHi*
  name: LocalHi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_CoherentLength_LocalHi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalHi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.CoherentLength.LocalHi
  nameWithType: CoherentLength.LocalHi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound
  name: LowerBound
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound
  nameWithType: LowerBound
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.#ctor(System.Double)
  name: LowerBound(Double)
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_LowerBound__ctor_System_Double_
  commentId: M:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.#ctor(System.Double)
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LowerBound(System.Double)
  nameWithType: LowerBound.LowerBound(Double)
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.#ctor*
  name: LowerBound
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_LowerBound__ctor_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.#ctor
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LowerBound
  nameWithType: LowerBound.LowerBound
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.Ci
  name: Ci
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_LowerBound_Ci
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.Ci
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.Ci
  nameWithType: LowerBound.Ci
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.Ci*
  name: Ci
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_LowerBound_Ci_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.Ci
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.Ci
  nameWithType: LowerBound.Ci
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalBi
  name: LocalBi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_LowerBound_LocalBi
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalBi
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalBi
  nameWithType: LowerBound.LocalBi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalBi*
  name: LocalBi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_LowerBound_LocalBi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalBi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalBi
  nameWithType: LowerBound.LocalBi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalHi
  name: LocalHi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_LowerBound_LocalHi
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalHi
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalHi
  nameWithType: LowerBound.LocalHi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalHi*
  name: LocalHi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_LowerBound_LocalHi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalHi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.LowerBound.LocalHi
  nameWithType: LowerBound.LocalHi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound
  name: UpperBound
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound
  nameWithType: UpperBound
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.#ctor(System.Double)
  name: UpperBound(Double)
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_UpperBound__ctor_System_Double_
  commentId: M:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.#ctor(System.Double)
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.UpperBound(System.Double)
  nameWithType: UpperBound.UpperBound(Double)
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.#ctor*
  name: UpperBound
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_UpperBound__ctor_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.#ctor
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.UpperBound
  nameWithType: UpperBound.UpperBound
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.Ci
  name: Ci
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_UpperBound_Ci
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.Ci
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.Ci
  nameWithType: UpperBound.Ci
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.Ci*
  name: Ci
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_UpperBound_Ci_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.Ci
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.Ci
  nameWithType: UpperBound.Ci
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalBi
  name: LocalBi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_UpperBound_LocalBi
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalBi
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalBi
  nameWithType: UpperBound.LocalBi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalBi*
  name: LocalBi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_UpperBound_LocalBi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalBi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalBi
  nameWithType: UpperBound.LocalBi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalHi
  name: LocalHi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_UpperBound_LocalHi
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalHi
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalHi
  nameWithType: UpperBound.LocalHi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalHi*
  name: LocalHi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_UpperBound_LocalHi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalHi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.UpperBound.LocalHi
  nameWithType: UpperBound.LocalHi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength
  name: VectorLength
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength
  nameWithType: VectorLength
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.#ctor(System.Double,System.Int32)
  name: VectorLength(Double, Int32)
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_VectorLength__ctor_System_Double_System_Int32_
  commentId: M:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.#ctor(System.Double,System.Int32)
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.VectorLength(System.Double, System.Int32)
  nameWithType: VectorLength.VectorLength(Double, Int32)
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.#ctor*
  name: VectorLength
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_VectorLength__ctor_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.#ctor
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.VectorLength
  nameWithType: VectorLength.VectorLength
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.Ci
  name: Ci
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_VectorLength_Ci
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.Ci
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.Ci
  nameWithType: VectorLength.Ci
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.Ci*
  name: Ci
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_VectorLength_Ci_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.Ci
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.Ci
  nameWithType: VectorLength.Ci
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalBi
  name: LocalBi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_VectorLength_LocalBi
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalBi
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalBi
  nameWithType: VectorLength.LocalBi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalBi*
  name: LocalBi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_VectorLength_LocalBi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalBi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalBi
  nameWithType: VectorLength.LocalBi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalHi
  name: LocalHi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_VectorLength_LocalHi
  commentId: P:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalHi
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalHi
  nameWithType: VectorLength.LocalHi
- uid: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalHi*
  name: LocalHi
  href: api/BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.html#BRIDGES_Solvers_GuidedProjection_QuadraticConstraintTypes_VectorLength_LocalHi_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalHi
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.QuadraticConstraintTypes.VectorLength.LocalHi
  nameWithType: VectorLength.LocalHi
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet
  name: VariableSet
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html
  commentId: T:BRIDGES.Solvers.GuidedProjection.VariableSet
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet
  nameWithType: VariableSet
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet.AddVariable(System.Double[])
  name: AddVariable(Double[])
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html#BRIDGES_Solvers_GuidedProjection_VariableSet_AddVariable_System_Double___
  commentId: M:BRIDGES.Solvers.GuidedProjection.VariableSet.AddVariable(System.Double[])
  name.vb: AddVariable(Double())
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet.AddVariable(System.Double[])
  fullName.vb: BRIDGES.Solvers.GuidedProjection.VariableSet.AddVariable(System.Double())
  nameWithType: VariableSet.AddVariable(Double[])
  nameWithType.vb: VariableSet.AddVariable(Double())
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet.AddVariable*
  name: AddVariable
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html#BRIDGES_Solvers_GuidedProjection_VariableSet_AddVariable_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.VariableSet.AddVariable
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet.AddVariable
  nameWithType: VariableSet.AddVariable
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet.GetVariable(System.Int32)
  name: GetVariable(Int32)
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html#BRIDGES_Solvers_GuidedProjection_VariableSet_GetVariable_System_Int32_
  commentId: M:BRIDGES.Solvers.GuidedProjection.VariableSet.GetVariable(System.Int32)
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet.GetVariable(System.Int32)
  nameWithType: VariableSet.GetVariable(Int32)
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet.GetVariable*
  name: GetVariable
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html#BRIDGES_Solvers_GuidedProjection_VariableSet_GetVariable_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.VariableSet.GetVariable
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet.GetVariable
  nameWithType: VariableSet.GetVariable
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet.SetIndex
  name: SetIndex
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html#BRIDGES_Solvers_GuidedProjection_VariableSet_SetIndex
  commentId: P:BRIDGES.Solvers.GuidedProjection.VariableSet.SetIndex
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet.SetIndex
  nameWithType: VariableSet.SetIndex
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet.SetIndex*
  name: SetIndex
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html#BRIDGES_Solvers_GuidedProjection_VariableSet_SetIndex_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.VariableSet.SetIndex
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet.SetIndex
  nameWithType: VariableSet.SetIndex
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet.VariableCount
  name: VariableCount
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html#BRIDGES_Solvers_GuidedProjection_VariableSet_VariableCount
  commentId: P:BRIDGES.Solvers.GuidedProjection.VariableSet.VariableCount
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet.VariableCount
  nameWithType: VariableSet.VariableCount
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet.VariableCount*
  name: VariableCount
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html#BRIDGES_Solvers_GuidedProjection_VariableSet_VariableCount_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.VariableSet.VariableCount
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet.VariableCount
  nameWithType: VariableSet.VariableCount
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet.VariableDimension
  name: VariableDimension
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html#BRIDGES_Solvers_GuidedProjection_VariableSet_VariableDimension
  commentId: P:BRIDGES.Solvers.GuidedProjection.VariableSet.VariableDimension
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet.VariableDimension
  nameWithType: VariableSet.VariableDimension
- uid: BRIDGES.Solvers.GuidedProjection.VariableSet.VariableDimension*
  name: VariableDimension
  href: api/BRIDGES.Solvers.GuidedProjection.VariableSet.html#BRIDGES_Solvers_GuidedProjection_VariableSet_VariableDimension_
  commentId: Overload:BRIDGES.Solvers.GuidedProjection.VariableSet.VariableDimension
  isSpec: "True"
  fullName: BRIDGES.Solvers.GuidedProjection.VariableSet.VariableDimension
  nameWithType: VariableSet.VariableDimension
